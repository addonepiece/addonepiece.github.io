<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>行囊</title>
  <icon>https://www.gravatar.com/avatar/e1a1a907e78af18afc66743a98c8679b</icon>
  <subtitle>大佬闫的博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://addonepiece.github.io/"/>
  <updated>2021-12-03T02:07:13.758Z</updated>
  <id>https://addonepiece.github.io/</id>
  
  <author>
    <name>dalaoyan</name>
    <email>addonepiece@sina.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>敏捷导入。</title>
    <link href="https://addonepiece.github.io/2021/10/15/agile-initimport/"/>
    <id>https://addonepiece.github.io/2021/10/15/agile-initimport/</id>
    <published>2021-10-15T07:50:08.000Z</published>
    <updated>2021-12-03T02:07:13.758Z</updated>
    
    <content type="html"><![CDATA[<h1 id="转至大佬闫微信公众号查看全文"><a href="#转至大佬闫微信公众号查看全文" class="headerlink" title="转至大佬闫微信公众号查看全文"></a><a href="https://mp.weixin.qq.com/s/KHLUjYgOE2a2LpeM0f-n2w" target="_blank" rel="noopener">转至大佬闫微信公众号查看全文</a></h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;转至大佬闫微信公众号查看全文&quot;&gt;&lt;a href=&quot;#转至大佬闫微信公众号查看全文&quot; class=&quot;headerlink&quot; title=&quot;转至大佬闫微信公众号查看全文&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://mp.weixin.qq.com/s/KHLUjYgO
      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>dockerCommand4Windows</title>
    <link href="https://addonepiece.github.io/2020/09/14/dockerCommand4Windows/"/>
    <id>https://addonepiece.github.io/2020/09/14/dockerCommand4Windows/</id>
    <published>2020-09-14T09:43:04.000Z</published>
    <updated>2020-09-14T09:47:20.979Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用docker命令"><a href="#常用docker命令" class="headerlink" title="常用docker命令"></a>常用docker命令</h1><h2 id="widows"><a href="#widows" class="headerlink" title="widows"></a>widows</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;常用docker命令&quot;&gt;&lt;a href=&quot;#常用docker命令&quot; class=&quot;headerlink&quot; title=&quot;常用docker命令&quot;&gt;&lt;/a&gt;常用docker命令&lt;/h1&gt;&lt;h2 id=&quot;widows&quot;&gt;&lt;a href=&quot;#widows&quot; class=&quot;
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>java编码规范-基于alibaba的代码规范</title>
    <link href="https://addonepiece.github.io/2020/08/24/javacodestandard/"/>
    <id>https://addonepiece.github.io/2020/08/24/javacodestandard/</id>
    <published>2020-08-24T01:41:45.000Z</published>
    <updated>2020-09-14T03:32:46.301Z</updated>
    
    <content type="html"><![CDATA[<h2 id="alibaba的代码规范"><a href="#alibaba的代码规范" class="headerlink" title="alibaba的代码规范"></a>alibaba的代码规范</h2><p>阿里巴巴开发手册git地址：<a href="https://github.com/alibaba/p3c" target="_blank" rel="noopener">https://github.com/alibaba/p3c</a><br><img src="/images/alibabacodestyle/Alibabacodestyle1.png" alt><br><img src="/images/alibabacodestyle/Alibabacodestyle2.png" alt></p><h2 id="请使用如下插件，并遵守阿里编码规约"><a href="#请使用如下插件，并遵守阿里编码规约" class="headerlink" title="请使用如下插件，并遵守阿里编码规约"></a>请使用如下插件，并遵守阿里编码规约</h2><p><img src="/images/alibabacodestyle/Alibabacodestyle3.png" alt></p><h2 id="执行代码检查"><a href="#执行代码检查" class="headerlink" title="执行代码检查"></a>执行代码检查</h2><p><img src="/images/alibabacodestyle/4.png" alt></p><h2 id="代码样式"><a href="#代码样式" class="headerlink" title="代码样式"></a>代码样式</h2><ol><li><p>打开Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Code Templates<br>点击import 插入eclipse-codetemplate<br>(eclipse-codestyle.xml)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">profiles</span> <span class="attr">version</span>=<span class="string">"12"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">profile</span> <span class="attr">kind</span>=<span class="string">"CodeFormatterProfile"</span> <span class="attr">name</span>=<span class="string">"P3C-CodeStyle"</span> <span class="attr">version</span>=<span class="string">"13"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--可变参数的... Idea没有对应的配置项，强制insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_ellipsis"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--枚举值之间 Idea没有对应的配置项，强制insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_declarations"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments=Java:SPACE_BEFORE_COMMA--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters=Java:SPACE_BEFORE_COMMA</span></span><br><span class="line"><span class="comment">        由于IDEA只有一个SPACE_BEFORE_COMMA选项，所以统一设置 insert_space_before_comma 为 do not insert</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_invocation_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_allocation_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_inits"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_method_declaration_throws"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_array_initializer"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_annotation"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_type_arguments"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_superinterfaces"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_parameterized_type_reference"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_declarations"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_enum_constant_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_local_declarations"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_for_increments"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_explicitconstructorcall_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_constructor_declaration_throws"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_comma_in_multiple_field_declarations"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--insert_space_before_comma end--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments=Java:SPACE_AFTER_COMMA_IN_TYPE_ARGUMENTS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_arguments"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--IDEA只有一个配置项SPACE_AFTER_COMMA，insert_space_after_comma*统一设置成insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_increments"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_local_declarations"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_explicitconstructorcall_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_and_in_type_parameter"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_for_inits"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_parameterized_type_reference"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_multiple_field_declarations"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_superinterfaces"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_array_initializer"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_invocation_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_constructor_declaration_throws"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_allocation_expression"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_method_declaration_throws"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_enum_constant_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_type_parameters"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_comma_in_annotation"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--insert_space_after_comma end--&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional=Java:SPACE_BEFORE_COLON--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_conditional"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_assert"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_for"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional=Java:SPACE_AFTER_COLON--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_conditional"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_assert"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_for"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_labeled_statement"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--IDEA不支持配置，默认do not insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_default"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_labeled_statement"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_colon_in_case"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--这个在Eclipse也没有找到配置的地方--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_colon_in_case"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_semicolon=Java:SPACE_BEFORE_SEMICOLON</span></span><br><span class="line"><span class="comment">        程序导入的时候强制将SPACE_BEFORE_SEMICOLON设置为false</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_try_resources"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_semicolon"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_semicolon_in_for"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--SPACE_AFTER_SEMICOLON=true--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_for"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_semicolon_in_try_resources"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--IDEA不支持配置,do not insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_enum_constant"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span></span></span><br><span class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_annotation_type_member_declaration"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_constructor_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--IDEA不支持，使用默认--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_postfix_operator"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_postfix_operator"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_after_binary_operator=Java:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_binary_operator"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_binary_operator"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--IDEA不支持配置，使用如下值，两者对应--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span></span></span><br><span class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_parameterized_type_reference"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_angle_bracket_in_type_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span></span></span><br><span class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_parameterized_type_reference"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span></span></span><br><span class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_parameterized_type_reference"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_angle_bracket_in_type_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Java:SPACE_BEFORE_OPENING_ANGLE_BRACKET_IN_TYPE_PARAMETER--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_angle_bracket_in_type_parameters"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments=Java:SPACE_AFTER_CLOSING_ANGLE_BRACKET_IN_TYPE_ARGUMENT--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_closing_angle_bracket_in_type_arguments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block=Java:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_closing_brace_in_block"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--IDEA使用了对应的配置：Java:SPACE_WITHIN_ARRAY_INITIALIZER_BRACES，但感觉不太好，IDEA默认不插入，Eclipse也使用不插入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_brace_in_array_initializer"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--use default insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_return"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--use default do not insert --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_while"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_prefix_operator"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_prefix_operator"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_for"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_catch"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_switch"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_for"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_brackets_in_array_type_reference"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_parenthesized_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_empty_parens_in_method_invocation"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_method_invocation"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_try"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_if"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_try"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_reference"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_if"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_synchronized"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_reference"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_cast"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_synchronized"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_parenthesized_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_catch"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_invocation"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_method_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_annotation"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_brace_in_array_initializer"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_annotation"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_while"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_switch"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--use default insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_anonymous_type_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_constant"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_enum_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_annotation_type_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_constructor_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_and_in_type_parameter"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_parenthesized_expression_in_throw"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch=Java:SPACE_BEFORE_SWITCH_LBRACE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_switch"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration=Java:SPACE_BEFORE_CLASS_LBRACE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_type_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block=Java:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_block"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer=Java:SPACE_BEFORE_ARRAY_INITIALIZER_LBRACE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_array_initializer"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration=Java:SPACE_BEFORE_METHOD_LBRACE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_brace_in_method_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional=Java:SPACE_AFTER_QUEST--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_question_in_conditional"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional=Java:SPACE_BEFORE_QUEST--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_question_in_conditional"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation=Java:SPACE_BEFORE_ANOTATION_PARAMETER_LIST--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--use default do not insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_question_in_wildcard"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_question_in_wildcard"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_ellipsis"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_empty_brackets_in_array_allocation_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_enum_constant"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_constructor_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_bracket_in_array_allocation_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_at_in_annotation_type_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_at_in_annotation_type_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_parenthesized_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_enum_constant"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_constructor_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_paren_in_constructor_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_cast"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span></span></span><br><span class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_annotation_type_member_declaration"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_closing_paren_in_enum_constant"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_type_reference"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_opening_bracket_in_array_allocation_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_allocation_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_bracket_in_array_reference"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--下面两个对应IDEA中的一个配置Java:SPACE_AROUND_ASSIGNMENT_OPERATORS，使用insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_assignment_operator"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_assignment_operator"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch=Java:SPACE_BEFORE_CATCH_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_catch"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation=Java:SPACE_BEFORE_METHOD_CALL_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_invocation"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try=Java:SPACE_BEFORE_TRY_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_try"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--下面两个对应IDEA中的一个配置Java:SPACE_AROUND_UNARY_OPERATOR，使用do not insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_unary_operator"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_unary_operator"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if=Java:SPACE_BEFORE_IF_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_if"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while=Java:SPACE_BEFORE_WHILE_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_while"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast=Java:SPACE_AFTER_TYPE_CAST--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_closing_paren_in_cast"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration=Java:SPACE_BEFORE_METHOD_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_method_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for=Java:SPACE_BEFORE_FOR_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_for"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized=Java:SPACE_BEFORE_SYNCHRONIZED_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_synchronized"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch=Java:SPACE_BEFORE_SWITCH_PARENTHESES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_opening_paren_in_switch"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--下面两个对应IDEA中的一个配置Java:SPACE_AROUND_LAMBDA_ARROW，使用insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_before_lambda_arrow"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_after_lambda_arrow"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--SPACE_WITHIN_EMPTY_ARRAY_INITIALIZER_BRACES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_space_between_empty_braces_in_array_initializer"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Idea -&gt; Wrapping And Braces -&gt; Simple classes in one line --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_annotation_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_anonymous_type_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_type_declaration"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_declaration"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Idea -&gt; Wrapping And Braces -&gt; Simple method in one line --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_method_body"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--因为Idea不支持配置，所以设置为 Idea默认值--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_package"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_parameter"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_enum_constant"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_enum_constant"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_type_annotation"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_label"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Idea可以通过Wrap Always实现 TODO--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_field"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_method"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_local_variable"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_annotation_on_type"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Idea -&gt; Wrapping And Braces -&gt; Simple block in one line -&gt; do not select --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_in_empty_block"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Idea -&gt; Wrapping And Braces -&gt; try statement -&gt; catch.... (Java:CATCH_ON_NEW_LINE)--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_before_catch_in_try_statement"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing=&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_at_end_of_file_if_missing"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer=Java:ARRAY_INITIALIZER_RBRACE_ON_NEXT_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_before_closing_brace_in_array_initializer"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--#org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer=Java:ARRAY_INITIALIZER_LBRACE_ON_NEXT_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_after_opening_brace_in_array_initializer"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement=Java:ELSE_ON_NEW_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_before_else_in_if_statement"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement=Java:WHILE_ON_NEW_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_before_while_in_do_statement"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement=Java:FINALLY_ON_NEW_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.insert_new_line_before_finally_in_try_statement"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--comment start--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.line_length"</span> <span class="attr">value</span>=<span class="string">"120"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--ENABLE_JAVADOC_FORMATTING--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.format_javadoc_comments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment=&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_javadoc_comment"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--IDEA无对应设置，所以关闭对block comment的格式化 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.format_block_comments"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.clear_blank_lines_in_block_comment"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.new_lines_at_block_boundaries"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column=Java:KEEP_FIRST_COLUMN_COMMENT--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.never_indent_line_comments_on_first_column"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.use_on_off_tags=FORMATTER_TAGS_ENABLED--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.use_on_off_tags"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.disabling_tag=FORMATTER_OFF_TAG--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.disabling_tag"</span> <span class="attr">value</span>=<span class="string">"@formatter:off"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.enabling_tag=FORMATTER_ON_TAG--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.enabling_tag"</span> <span class="attr">value</span>=<span class="string">"@formatter:on"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--use default do not insert--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.insert_new_line_for_parameter"</span> <span class="attr">value</span>=<span class="string">"do not insert"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--下面的没有IDEA对应项，在代码里面对IDEA中使用默认值即可,LINE_COMMENT_AT_FIRST_COLUMN BLOCK_COMMENT_AT_FIRST_COLUMN设置为false--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.never_indent_block_comments_on_first_column"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.insert_new_line_before_root_tags"</span> <span class="attr">value</span>=<span class="string">"insert"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.indent_root_tags"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.preserve_white_space_between_code_and_line_comments"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.format_line_comment_starting_on_first_column"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.format_line_comments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.format_header"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.new_lines_at_javadoc_boundaries"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.format_source_code"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.format_html"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.join_lines_in_comments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.comment.indent_parameter_description"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--comment end--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_after_imports=Java:BLANK_LINES_AFTER_IMPORTS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_after_imports"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_before_imports=Java:BLANK_LINES_BEFORE_IMPORTS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_before_imports"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_after_package=Java:BLANK_LINES_AFTER_PACKAGE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_after_package"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations=Java:BLANK_LINES_AROUND_CLASS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_between_type_declarations"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body=Java:BLANK_LINES_BEFORE_METHOD_BODY--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.number_of_blank_lines_at_beginning_of_method_body"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration=Java:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_before_first_class_body_declaration"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_before_field=Java:BLANK_LINES_AROUND_FIELD--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_before_field"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_before_method=Java:BLANK_LINES_AROUND_METHOD--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_before_method"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.blank_lines_before_package=Java:BLANK_LINES_BEFORE_PACKAGE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_before_package"</span> <span class="attr">value</span>=<span class="string">"0"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--下面IDEA没有对应设置，使用对应值即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.align_fields_grouping_blank_lines"</span> <span class="attr">value</span>=<span class="string">"2147483647"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_before_new_chunk"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_before_member_type"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.blank_lines_between_import_groups"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.indentation.size=Java:IndentOptions:INDENT_SIZE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indentation.size"</span> <span class="attr">value</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.continuation_indentation=Java:IndentOptions:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.continuation_indentation"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header=Java:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_type_header"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations=Java:IndentOptions:SMART_TABS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.use_tabs_only_for_leading_indentations"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch=Java:INDENT_CASE_FROM_SWITCH--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_switch"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--KEEP_INDENTS_ON_EMPTY_LINES--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_empty_lines"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.tabulation.size=Java:IndentOptions:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.tabulation.size"</span> <span class="attr">value</span>=<span class="string">"4"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Java:IndentOptions:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.tabulation.char"</span> <span class="attr">value</span>=<span class="string">"space"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--下面IDEA没有对应设置，使用对应值即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_statements_compare_to_block"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_annotation_declaration_header"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_switchstatements_compare_to_cases"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.continuation_indentation_for_array_initializer"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_declaration_header"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_breaks_compare_to_cases"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_statements_compare_to_body"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.indent_body_declarations_compare_to_enum_constant_header"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Java:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_method_invocation"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_selector_in_method_invocation"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_assignment"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_type_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_binary_expression"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_method_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_method_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_resources_in_try"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_annotation"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_conditional_expression"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_array_initializer"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--下面没有对应的IDEA设置，Eclipse先使用对应值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_enum_constants"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_enum_constant"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_parameterized_type_references"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_union_type_in_multicatch"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_explicit_constructor_call"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_parameters_in_constructor_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_type_parameters"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_throws_clause_in_constructor_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_allocation_expression"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_method_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_superclass_in_type_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_superinterfaces_in_enum_declaration"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_compact_if"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_type_arguments"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_arguments_in_qualified_allocation_expression"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_multiple_fields"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.alignment_for_expressions_in_for_loop_header"</span> <span class="attr">value</span>=<span class="string">"16"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--IDEA默认配置在同一行，Eclipse使用对应值即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_for_statment"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_method_invocation"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_switch_statement"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_enum_constant_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_if_while_statement"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_catch_clause"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_annotation"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_try_clause"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_method_delcaration"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.parentheses_positions_in_lambda_declaration"</span> <span class="attr">value</span>=<span class="string">"common_lines"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Java:BINARY_OPERATION_SIGN_ON_NEXT_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.wrap_before_binary_operator"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--ASSIGNMENT_WRAP 需要设置为 WRAP_AS_NEEDED  WRAP_AS_NEEDED . Add in jdt.core-3.12，it's not work in previous version --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.wrap_before_assignment_operator"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--IDEA无配置项，Eclipse使用对应值即可--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.wrap_before_or_operator_multicatch"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.wrap_before_conditional_operator"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.wrap_outer_expressions_when_nested"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.keep_else_statement_on_same_line"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.put_empty_statement_on_new_line"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.format_guardian_clause_on_one_line"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.keep_empty_array_initializer_on_one_line"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line=Java:KEEP_CONTROL_STATEMENT_IN_ONE_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.keep_then_statement_on_same_line"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.compact_else_if=Java:SPECIAL_ELSE_IF_TREATMENT--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.compact_else_if"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Java:ALIGN_GROUP_FIELD_DECLARATIONS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.align_type_members_on_columns"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Java:&lt;Programmatic&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.number_of_empty_lines_to_preserve"</span> <span class="attr">value</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.join_wrapped_lines"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--统一为end_of_lint，IDEA默认一致--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_method_declaration"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_anonymous_type_declaration"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_block"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_constructor_declaration"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_lambda_body"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_enum_declaration"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_block_in_case"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_annotation_type_declaration"</span></span></span><br><span class="line"><span class="tag">                 <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_switch"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_array_initializer"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--        &lt;setting id="org.eclipse.jdt.core.compiler.source" value="1.8"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;setting id="org.eclipse.jdt.core.compiler.compliance" value="1.8"/&gt;</span></span><br><span class="line"><span class="comment">                &lt;setting id="org.eclipse.jdt.core.compiler.codegen.targetPlatform" value="1.8"/&gt;</span></span><br><span class="line"><span class="comment">                        &lt;setting id="org.eclipse.jdt.core.compiler.problem.enumIdentifier" value="error"/&gt;</span></span><br><span class="line"><span class="comment">                                &lt;setting id="org.eclipse.jdt.core.compiler.problem.assertIdentifier" value="error"/&gt;</span></span><br><span class="line"><span class="comment">                                        &lt;setting id="org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode" value="enabled"/&gt;</span></span><br><span class="line"><span class="comment">                --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--Java:KEEP_SIMPLE_BLOCKS_IN_ONE_LINE--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.keep_imple_if_on_one_line"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--Java:CLASS_BRACE_STYLE，统一使用end_of_line TODO--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_enum_constant"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.brace_position_for_type_declaration"</span> <span class="attr">value</span>=<span class="string">"end_of_line"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--org.eclipse.jdt.core.formatter.lineSplit=RIGHT_MARGIN--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.core.formatter.lineSplit"</span> <span class="attr">value</span>=<span class="string">"120"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">profiles</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>打开Window-&gt;Preferences-&gt;Java-&gt;Code Style-&gt;Formatter<br>点击import 插入eclipse-codestyle<br>(eclipse-codetemplate.xml）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" standalone="no"?&gt;</span><span class="tag">&lt;<span class="name">templates</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"gettercomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for getter method"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.gettercomment"</span> <span class="attr">name</span>=<span class="string">"gettercomment"</span>&gt;</span>/**</span><br><span class="line"> * @return the $&#123;bare_field_name&#125;</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"settercomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for setter method"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.settercomment"</span> <span class="attr">name</span>=<span class="string">"settercomment"</span>&gt;</span>/**</span><br><span class="line"> * @param $&#123;param&#125; the $&#123;bare_field_name&#125; to set</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"constructorcomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for created constructors"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.constructorcomment"</span> <span class="attr">name</span>=<span class="string">"constructorcomment"</span>&gt;</span>/**</span><br><span class="line"> * $&#123;tags&#125;</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"filecomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for created Java files"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.filecomment"</span> <span class="attr">name</span>=<span class="string">"filecomment"</span>/&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"typecomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for created types"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.typecomment"</span> <span class="attr">name</span>=<span class="string">"typecomment"</span>&gt;</span>/**</span><br><span class="line"> * @author $&#123;user&#125;</span><br><span class="line"> * @date $&#123;currentDate:date('YYYY/MM/dd')&#125;</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"fieldcomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for fields"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.fieldcomment"</span> <span class="attr">name</span>=<span class="string">"fieldcomment"</span>&gt;</span>/**</span><br><span class="line"> *</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"methodcomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for non-overriding methods"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.methodcomment"</span> <span class="attr">name</span>=<span class="string">"methodcomment"</span>&gt;</span>/**</span><br><span class="line"> * $&#123;tags&#125;</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"overridecomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for overriding methods"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.overridecomment"</span> <span class="attr">name</span>=<span class="string">"overridecomment"</span>&gt;</span>/* (non-Javadoc)</span><br><span class="line"> * $&#123;see_to_overridden&#125;</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"delegatecomment_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Comment for delegate methods"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.delegatecomment"</span> <span class="attr">name</span>=<span class="string">"delegatecomment"</span>&gt;</span>/**</span><br><span class="line"> * $&#123;tags&#125;</span><br><span class="line"> * $&#123;see_to_target&#125;</span><br><span class="line"> */<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"newtype_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Newly created files"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.newtype"</span> <span class="attr">name</span>=<span class="string">"newtype"</span>&gt;</span>$&#123;filecomment&#125;</span><br><span class="line"> $&#123;package_declaration&#125;</span><br><span class="line"></span><br><span class="line"> $&#123;typecomment&#125;</span><br><span class="line"> $&#123;type_declaration&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"classbody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in new class type bodies"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.classbody"</span> <span class="attr">name</span>=<span class="string">"classbody"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"interfacebody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in new interface type bodies"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.interfacebody"</span> <span class="attr">name</span>=<span class="string">"interfacebody"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"enumbody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in new enum type bodies"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.enumbody"</span> <span class="attr">name</span>=<span class="string">"enumbody"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"annotationbody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in new annotation type bodies"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.annotationbody"</span> <span class="attr">name</span>=<span class="string">"annotationbody"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"catchblock_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in new catch blocks"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.catchblock"</span> <span class="attr">name</span>=<span class="string">"catchblock"</span>&gt;</span>// $&#123;todo&#125; Auto-generated catch block</span><br><span class="line"> $&#123;exception_var&#125;.printStackTrace();<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"methodbody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in created method stubs"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.methodbody"</span> <span class="attr">name</span>=<span class="string">"methodbody"</span>&gt;</span>// $&#123;todo&#125; Auto-generated method stub</span><br><span class="line"> $&#123;body_statement&#125;<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"constructorbody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in created constructor stubs"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.constructorbody"</span> <span class="attr">name</span>=<span class="string">"constructorbody"</span>&gt;</span>$&#123;body_statement&#125;</span><br><span class="line"> // $&#123;todo&#125; Auto-generated constructor stub<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"getterbody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in created getters"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.getterbody"</span> <span class="attr">name</span>=<span class="string">"getterbody"</span>&gt;</span>return $&#123;field&#125;;<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;<span class="name">template</span> <span class="attr">autoinsert</span>=<span class="string">"true"</span> <span class="attr">context</span>=<span class="string">"setterbody_context"</span> <span class="attr">deleted</span>=<span class="string">"false"</span> <span class="attr">description</span>=<span class="string">"Code in created setters"</span> <span class="attr">enabled</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"org.eclipse.jdt.ui.text.codetemplates.setterbody"</span> <span class="attr">name</span>=<span class="string">"setterbody"</span>&gt;</span>$&#123;field&#125; = $&#123;param&#125;;<span class="tag">&lt;/<span class="name">template</span>&gt;</span><span class="tag">&lt;/<span class="name">templates</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>设置代码格式化的实现时间（一般为当保存的时候自动格式化）：<br>进入eclipse菜单: Window &gt; Preferences &gt; Java &gt; Editor &gt; Save Actions，勾选上Perform the selected actions on save 下的Format source code，并选择 Format all lines，勾选上Organize imports，点击右下角的Apply 使其生效。</p></li></ol><h2 id="代码质量检查-Findbugs"><a href="#代码质量检查-Findbugs" class="headerlink" title="代码质量检查 - Findbugs"></a>代码质量检查 - Findbugs</h2><h3 id="安装spotbugs"><a href="#安装spotbugs" class="headerlink" title="安装spotbugs"></a>安装spotbugs</h3><p><img src="/images/alibabacodestyle/5.png" alt></p><h3 id="代码修复"><a href="#代码修复" class="headerlink" title="代码修复"></a>代码修复</h3><p><img src="/images/alibabacodestyle/6.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;alibaba的代码规范&quot;&gt;&lt;a href=&quot;#alibaba的代码规范&quot; class=&quot;headerlink&quot; title=&quot;alibaba的代码规范&quot;&gt;&lt;/a&gt;alibaba的代码规范&lt;/h2&gt;&lt;p&gt;阿里巴巴开发手册git地址：&lt;a href=&quot;https:/
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Centos7上安装Solr-8.4.1</title>
    <link href="https://addonepiece.github.io/2020/07/15/Centos7installSolr-8-4-1/"/>
    <id>https://addonepiece.github.io/2020/07/15/Centos7installSolr-8-4-1/</id>
    <published>2020-07-15T07:32:20.000Z</published>
    <updated>2020-09-14T03:32:46.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><p>1.操作系统centos7 64位。<br>2.需要安装jdk1.8及以上版本。<br>3.使用solr内置的jetty容器部署solr服务。</p><h1 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h1><p>1.目前后台使用solr不支持权限。<br>2.目前只需部署单节点即可。</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><ul><li>安装包：solr-8.4.1.tgz</li><li>下载地址：<a href="https://archive.apache.org/dist/lucene/solr/8.4.1/solr-8.4.1.tgz" target="_blank" rel="noopener">https://archive.apache.org/dist/lucene/solr/8.4.1/solr-8.4.1.tgz</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="在-usr-local-下创建solr目录，并赋权限。"><a href="#在-usr-local-下创建solr目录，并赋权限。" class="headerlink" title="在/usr/local/下创建solr目录，并赋权限。"></a>在/usr/local/下创建solr目录，并赋权限。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@admin /]# cd /usr/local/</span><br><span class="line">[root@admin local]# mkdir solr</span><br><span class="line">[root@admin local]# chmod -R 777 solr</span><br></pre></td></tr></table></figure><h2 id="进入solr文件夹，上传压缩包solr-8-4-1-tgz，并解压得到solr-8-4-1文件夹。"><a href="#进入solr文件夹，上传压缩包solr-8-4-1-tgz，并解压得到solr-8-4-1文件夹。" class="headerlink" title="进入solr文件夹，上传压缩包solr-8.4.1.tgz，并解压得到solr-8.4.1文件夹。"></a>进入solr文件夹，上传压缩包solr-8.4.1.tgz，并解压得到solr-8.4.1文件夹。</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@admin local]# cd solr/</span><br><span class="line">[root@admin solr]# ls</span><br><span class="line">solr-8.4.1.tgz</span><br><span class="line">[root@admin solr]# tar -xvf solr-8.4.1.tgz</span><br><span class="line">[root@admin solr]# ls</span><br><span class="line">solr-8.4.1  solr-8.4.1.tgz</span><br></pre></td></tr></table></figure><h1 id="启动solr"><a href="#启动solr" class="headerlink" title="启动solr"></a>启动solr</h1><ol><li><p>进入解压后的solr-8.4.1/bin/目录，solr这个脚本用于启动、停止、查看solr运行状态等。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">./solr start -p 端口 -force 启动    </span><br><span class="line">./solr stop -all 关闭</span><br><span class="line">./solr status 查看状态</span><br><span class="line">[root@admin solr]# cd solr-8.4.1/bin/</span><br><span class="line">[root@admin bin]# ls</span><br><span class="line">init.d  install_solr_service.sh  oom_solr.sh  post  solr  solr.cmd  solr.in.cmd  solr.in.sh</span><br><span class="line">[root@admin bin]# ./solr start -p 8983 -force</span><br><span class="line">Started Solr server on port 8983 (pid=7834). Happy searching!</span><br><span class="line">注意：</span><br><span class="line">如果linux系统中缺少lsof组件，在启动solr时将报如下提示:</span><br><span class="line">*** [WARN] *** Your open file limit is currently 1024.  </span><br><span class="line">It should be set to 65000 to avoid operational disruption.  </span><br><span class="line">If you no longer wish to see this warning, set SOLR_ULIMIT_CHECKS to false in your profile or solr.in.sh</span><br><span class="line">*** [WARN] ***  Your Max Processes Limit is currently 3795.  </span><br><span class="line">It should be set to 65000 to avoid operational disruption.  </span><br><span class="line">If you no longer wish to see this warning, set SOLR_ULIMIT_CHECKS to false in your profile or solr.in.sh</span><br><span class="line">NOTE: Please install lsof as this script needs it to determine if Solr is listening on port 8983.</span><br><span class="line">解决方案: 安装 lsof 组件即可</span><br><span class="line">[root@admin bin]# yum -y install lsof</span><br></pre></td></tr></table></figure></li><li><p>设置防火墙开启8983端口开放远程访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@admin bin]# firewall-cmd --zone=public --add-port=8983/tcp --permanent</span><br><span class="line">success</span><br><span class="line">[root@admin bin]# firewall-cmd --reload</span><br><span class="line">success</span><br></pre></td></tr></table></figure></li><li><p>浏览器访问管理页面 <a href="http://192.168.159.130:8983/solr" target="_blank" rel="noopener">http://192.168.159.130:8983/solr</a><br><img src="/images/solr1/solr1-38.png" alt></p></li></ol><h1 id="创建内核"><a href="#创建内核" class="headerlink" title="创建内核"></a>创建内核</h1><p>目前后台需创建两个内核：bankstatement用于对账单的索引、enterprise用于对手方企业的索引。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@admin bin]# ./solr create -c bankstatement -force</span><br><span class="line">WARNING: Using _default configset with data driven schema functionality. NOT RECOMMENDED for production use.</span><br><span class="line">        To turn off: bin/solr config -c bankstatement -p 8983 -action set-user-property -property update.autoCreateFields -value false</span><br><span class="line">Created new core &apos;bankstatement&apos;</span><br><span class="line">[root@admin bin]# ./solr create -c enterprise -force</span><br><span class="line">WARNING: Using _default configset with data driven schema functionality. NOT RECOMMENDED for production use.</span><br><span class="line">        To turn off: bin/solr config -c enterprise -p 8983 -action set-user-property -property update.autoCreateFields -value false</span><br><span class="line">Created new core &apos;enterprise&apos;</span><br></pre></td></tr></table></figure></p><p><img src="/images/solr1/solr1-39.png" alt><br><img src="/images/solr1/solr1-40.png" alt></p><h1 id="配置字段"><a href="#配置字段" class="headerlink" title="配置字段"></a>配置字段</h1><p>在内核上创建字段、以及配置字段属性。</p><ol><li>内核bankstatement:发送post请求：<a href="http://192.168.159.130:8983/solr/bankstatement/schema" target="_blank" rel="noopener">http://192.168.159.130:8983/solr/bankstatement/schema</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line">Content-Type：application/json</span><br><span class="line">请求体：</span><br><span class="line">&#123;</span><br><span class="line">    &quot;add-field&quot;:[</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;leId&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;leAccountName&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;leAccountNo&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;trxFlag&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;accountingDateId&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;trxDate&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;amount&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pdouble&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;amountAbs&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pdouble&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;currency&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;amountBalance&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pdouble&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;cashType&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;customerAccountName&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;customerAccountNo&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;userMemo&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;bank&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;createDate&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;createdBy&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;yearId&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;quarterId&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;monthId&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;weekId&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;dayId&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;pint&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;catalog&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;tags&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:true,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;add-dynamic-field&quot;:&#123;</span><br><span class="line">        &quot;name&quot;:&quot;muti_catalog_*&quot;,</span><br><span class="line">        &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">        &quot;indexed&quot;:true,</span><br><span class="line">        &quot;stored&quot;:true,</span><br><span class="line">        &quot;multiValued&quot;:false,</span><br><span class="line">        &quot;required&quot;:false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">返回：表示成功</span><br><span class="line">&#123;</span><br><span class="line">    &quot;responseHeader&quot;:&#123;</span><br><span class="line">        &quot;status&quot;:0,</span><br><span class="line">        &quot;QTime&quot;:22606</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="/images/solr1/solr1-41.png" alt></p><ol start="2"><li>内核enterprise:<br>发送post请求：<a href="http://192.168.159.130:8983/solr/enterprise/schema" target="_blank" rel="noopener">http://192.168.159.130:8983/solr/enterprise/schema</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">Content-Type：application/json</span><br><span class="line">请求体：</span><br><span class="line">&#123;</span><br><span class="line">    &quot;add-field&quot;:[</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;name&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:false,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;:&quot;tags&quot;,</span><br><span class="line">            &quot;type&quot;:&quot;string&quot;,</span><br><span class="line">            &quot;indexed&quot;:true,</span><br><span class="line">            &quot;stored&quot;:true,</span><br><span class="line">            &quot;multiValued&quot;:true,</span><br><span class="line">            &quot;required&quot;:false</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">返回：表示成功</span><br><span class="line">&#123;</span><br><span class="line">    &quot;responseHeader&quot;:&#123;</span><br><span class="line">        &quot;status&quot;:0,</span><br><span class="line">        &quot;QTime&quot;:12265</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="/images/solr1/solr1-42.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;环境&quot;&gt;&lt;a href=&quot;#环境&quot; class=&quot;headerlink&quot; title=&quot;环境&quot;&gt;&lt;/a&gt;环境&lt;/h1&gt;&lt;p&gt;1.操作系统centos7 64位。&lt;br&gt;2.需要安装jdk1.8及以上版本。&lt;br&gt;3.使用solr内置的jetty容器部署solr服务
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
      <category term="Solr" scheme="https://addonepiece.github.io/tags/Solr/"/>
    
  </entry>
  
  <entry>
    <title>企业级搜索应用服务器Solr（一）</title>
    <link href="https://addonepiece.github.io/2020/06/15/solr-one/"/>
    <id>https://addonepiece.github.io/2020/06/15/solr-one/</id>
    <published>2020-06-15T07:32:20.000Z</published>
    <updated>2020-09-14T03:32:46.303Z</updated>
    
    <content type="html"><![CDATA[<h1 id="初识Solr"><a href="#初识Solr" class="headerlink" title="初识Solr"></a>初识Solr</h1><p>这几天新接触了一个Apache开源的搜索服务器Solr。</p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Solr是一个独立的企业级搜索应用服务器，它对外提供 API 接口。用户可以通过HTTP请求向Solr服务器提出插入数据和查找请求。交互数据主要是 JSON，但也可以是 XML、CSV 或其他格式。<br>Solr的部署分两种：单节点/SolrCloud集群。<br>Solr和一般的NoSQL 数据库一样，它是一种非关系数据存储和处理技术。存储结构是文档，文档都是扁平结构的，文档之间不存在相互依赖关系。</p><p>为什么要solr：</p><ul><li>solr是将整个索引操作功能封装好了的搜索引擎系统(企业级搜索引擎产品)。</li><li>solr可以部署到单独的服务器上(WEB服务)，它可以提供服务，我们的业务系统就只要发送请求，接收响应即 可，降低了业务系统的负载。</li><li>solr部署在专门的服务器上，它的索引库就不会受业务系统服务器存储空间的限制。</li><li>solr支持分布式集群，索引服务的容量和能力可以线性扩展。</li></ul><h2 id="windows下安装Solr"><a href="#windows下安装Solr" class="headerlink" title="windows下安装Solr"></a>windows下安装Solr</h2><p>安装 1.8+ 版本jdk。<br>下载solr-8.4.1.zip，并解压到自定义路径下。<a href="http://apache.cs.utah.edu/lucene/solr/8.4.1/solr-8.4.1.zip" target="_blank" rel="noopener">http://apache.cs.utah.edu/lucene/solr/8.4.1/solr-8.4.1.zip</a><br><img src="/images/solr1/solr1-1.png" alt><br>使用bin\solr.cmd，启动和停止 Solr、创建核心和集合、检查系统的状态…<br>这里只介绍启动单个Solr节点。</p><p>solr 启动、停止、重启命令<br>solr.cmd start -p 端口号<br>solr.cmd stop -all<br>solr.cmd restart -p 端口号<br>启动 Solr。默认端口：8983。<br><img src="/images/solr1/solr1-2.png" alt><br>检查Solr是否正在运行。<br><img src="/images/solr1/solr1-3.png" alt><br>访问管理控制台：<a href="http://localhost:8983/solr/" target="_blank" rel="noopener">http://localhost:8983/solr/</a><br>需要创建一个core才能进行索引和搜索。<br><img src="/images/solr1/solr1-4.png" alt><br>接下来就可以把文档存放到这个core上了。<br>core我的理解是：一个Solr 服务器实例，在实例上可以进行数据的CRUD了。这个数据一般存放类型相同的一类文档。我这边干脆就取名为user，准备放user一类的文档数据了。<br>一个Solr服务可以有多个core。<br><img src="/images/solr1/solr1-5.png" alt><br>core配置文件介绍：<br><img src="/images/solr1/solr1-6.png" alt></p><ul><li>solr.xml：为Solr 服务器实例指定配置选项。</li><li>每个 Solr 核心：<ul><li>core.properties：为每个核心定义特定的属性，例如其名称、模式的位置以及其他参数。</li><li>solrconfig.xml：控制高级行为。主要定义了Solr的一些处理规则，包括索引数据的存放位置，更新，删除，查询的一些规则配置。</li><li>managed-schema：描述将要求 Solr 索引的文档。为文档量身配置各种规则。这个配置文件非常重要。可以定义字段如何索引，字段类型有多少filter chain分词器、过滤器…以及其他很重要的配置。修改配置可以通过http请求api修改。</li><li>data/：索引、日志文件等。</li></ul></li></ul><h2 id="字段、字段类型等配置说明"><a href="#字段、字段类型等配置说明" class="headerlink" title="字段、字段类型等配置说明"></a>字段、字段类型等配置说明</h2><h3 id="字段定义"><a href="#字段定义" class="headerlink" title="字段定义"></a>字段定义</h3><p><img src="/images/solr1/solr1-7.png" alt><br>name：该字段的名称。<br>type：该fieldType字段的名称，必填。<br>indexed：如果为 true，则可以在查询中使用该字段的值来检索匹配的文档。默认true。<br>…</p><h3 id="字段类型定义"><a href="#字段类型定义" class="headerlink" title="字段类型定义"></a>字段类型定义</h3><p><img src="/images/solr1/solr1-8.png" alt><br><img src="/images/solr1/solr1-9.png" alt><br>name：fieldType 的名称<br>class：用于存储和索引此类型数据的类名<br>索引（indexed）：如果为 true，则可以在查询中使用该字段的值来检索匹配的文档。默认true<br>存储（stored）: 如果为 true，则字段的实际值可以通过查询来检索。默认true<br>docValues：如果为 true，则该字段的值将被放入一个面向列的 DocValues 结构中。<br>…</p><h3 id="Schema-API-操作managed-schema"><a href="#Schema-API-操作managed-schema" class="headerlink" title="Schema API 操作managed-schema"></a>Schema API 操作managed-schema</h3><p>使用 HTTP API 来管理这些配置<br><img src="/images/solr1/solr1-10.png" alt><br><img src="/images/solr1/solr1-11.png" alt><br>可以看到uesr这个core中，申明的字段和索引情况。<br><img src="/images/solr1/solr1-12.png" alt><br>add-field<br><img src="/images/solr1/solr1-13.png" alt><br>刚定义的字段，在文档中生成了<br><img src="/images/solr1/solr1-14.png" alt></p><h2 id="Solr分析器、标记器和过滤器"><a href="#Solr分析器、标记器和过滤器" class="headerlink" title="Solr分析器、标记器和过滤器"></a>Solr分析器、标记器和过滤器</h2><p><img src="/images/solr1/solr1-15.png" alt><br>标记器：Tokenizer 的工作是将文本流分解为令牌，其中每个令牌（通常）是文本中字符的子序列。分析器知道它配置的字段，但 tokenizer 不是。Tokenizers 从字符流（Reader）中读取并生成一系列令牌对象（TokenStream）。<br><img src="/images/solr1/solr1-16.png" alt><br>过滤器：过滤器的工作通常比 tokenizer 更容易，因为在大多数情况下，过滤器会依次查看流中的每个标记，并决定是否将其传递、替换或丢弃。<br><img src="/images/solr1/solr1-17.png" alt><br>去管理页面，感受下分析器、标记器和过滤器是如何链式运作的<br><img src="/images/solr1/solr1-18.png" alt></p><h2 id="上传数据"><a href="#上传数据" class="headerlink" title="上传数据"></a>上传数据</h2><p>Solr 可以接受来自许多不同来源的数据，包括 XML 文件、JSON文件、逗号分隔值（CSV）文件、从数据库表格中提取的数据以及常用文件格式（如 Microsoft Word 或 PDF）中的文件。<br>介绍3种方式，第一种方式用来上传数据库数据，后两种方式比较常见。<br>①Solr DataImportHandler<br>②HTTP 请求到 Solr 服务器来上传 XML 文件、json文件。XML格式的更新请求可以使用 Content-type: application/xml 或者 Content-type: text/xml 作为 XML 消息发送到更新处理程序；JSON 格式的更新请求可以使用 Content-Type: application/json 或 Content-Type: text/json 发送到 Solr 的 /update 处理程序。<br>③编写自定义 Java 应用程序以通过 SolrJ来获取数据（推荐）<br>前期准备： 添加field，与数据库表的字段对应起来<br>这是我们的数据源，将前5个作为字段传输。这里准备了435510 条数据<br><img src="/images/solr1/solr1-19.png" alt><br>先确认。这5个字段，managed-schema没被定义过<br>使用Postman 批量添加field<br><img src="/images/solr1/solr1-20.png" alt></p><h3 id="Solr-DataImportHandler来上传数据库数据"><a href="#Solr-DataImportHandler来上传数据库数据" class="headerlink" title="Solr DataImportHandler来上传数据库数据"></a>Solr DataImportHandler来上传数据库数据</h3><p>DataImportHandler提供一种可配置的方式向Solr导入数据，可以全量导入，也可以增量导入，还可声明式提供可配置的任务调度，让数据定时从关系型数据库中更新数据到Solr服务器。详见<br><a href="https://blog.csdn.net/qq_41674409/article/details/85143606" target="_blank" rel="noopener">https://blog.csdn.net/qq_41674409/article/details/85143606</a><br>下载 mysql-connector-java-5.1.40.jar（版本不要太高，会不兼容） 添加到solr-8.4.1\server\solr-webapp\webapp\WEB-INF\lib 下。<br>将solr-dataimporthandler-8.4.1.jar 、solr-dataimporthandler-extras-8.4.1.jar 从 solr-8.4.1\dist 复制到solr-8.4.1\server\solr-webapp\webapp\WEB-INF\lib 下。<br>修改 solrconfig.xml 添加 dataImport 请求资源映射。添加在<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">config</span>&gt;</span><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><img src="/images/solr1/solr1-21.png" alt><br>\solr-8.4.1\server\solr\user\conf目录下创建 data-config.xml，配置访问数据库的用户名、密码、查询语句，column对应数据库中字段、name对应solr的schema.xml中字段。<br><img src="/images/solr1/solr1-22.png" alt><br>重启Solr： solr restart -p 8983<br>导入数据<br><img src="/images/solr1/solr1-23.png" alt><br>查看数据<br><img src="/images/solr1/solr1-24.png" alt><br><img src="/images/solr1/solr1-25.png" alt></p><h3 id="HTTP-请求到-Solr-服务器来上传-XML-文件"><a href="#HTTP-请求到-Solr-服务器来上传-XML-文件" class="headerlink" title="HTTP 请求到 Solr 服务器来上传 XML 文件"></a>HTTP 请求到 Solr 服务器来上传 XML 文件</h3><p>准备好满足条件的xml文件，格式为：<br><img src="/images/solr1/solr1-26.png" alt><br>新开一个core，并配置field。<br><img src="/images/solr1/solr1-27.png" alt><br><img src="/images/solr1/solr1-28.png" alt><br>查看数据<br><img src="/images/solr1/solr1-29.png" alt></p><h3 id="编写自定义-Java-应用程序以通过-SolrJ来获取数据"><a href="#编写自定义-Java-应用程序以通过-SolrJ来获取数据" class="headerlink" title="编写自定义 Java 应用程序以通过 SolrJ来获取数据"></a>编写自定义 Java 应用程序以通过 SolrJ来获取数据</h3><p>SolrJ导入，放在下面SolrJ模块。</p><h2 id="Solr搜索"><a href="#Solr搜索" class="headerlink" title="Solr搜索"></a>Solr搜索</h2><h3 id="Solr搜索的工作流程"><a href="#Solr搜索的工作流程" class="headerlink" title="Solr搜索的工作流程"></a>Solr搜索的工作流程</h3><p><img src="/images/solr1/solr1-30.png" alt><br>补充：下列这些情况，建议该字段配置docValues属性，提高性能。<br>需要聚合的字段，包括sort，agg，group，facet等 。<br>需要提供函数查询的字段。<br>需要高亮的字段。</p><h3 id="通用查询参数"><a href="#通用查询参数" class="headerlink" title="通用查询参数"></a>通用查询参数</h3><ol><li><p>defType 参数<br>defType 参数指定 Solr 应该用来处理请求中的主查询参数（q）的查询解析器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defType=dismax</span><br></pre></td></tr></table></figure><p> Solr中提供了三种解析器供选择：<br> lucene：   solr的Standard Query Parser  标准查询解析器（默认）<br> dismax：   DisMax Query Parser<br> edismax： Extended DisMax Query Parser (eDismax)</p></li><li><p>sort 参数<br>sort 参数按升序 (asc) 或降序 (desc) 顺序排列搜索结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort=&lt;field name&gt;&lt;direction&gt;,&lt;field name&gt;&lt;direction&gt;],…</span><br></pre></td></tr></table></figure></li><li><p>start 参数<br>分页查询的起始行号，默认为0；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start=0</span><br></pre></td></tr></table></figure></li><li><p>rows 参数<br>将查询的结果分页，返回最大文档数目。默认值是10。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rows=20</span><br></pre></td></tr></table></figure></li><li><p>fq（Filter Query）参数<br>fq 参数定义了一个查询，可以用来限制可以返回的文档的超集，而不影响 score。这对于加快复杂查询非常有用，因为指定的查询 fq 是独立于主查询而被缓存的。当以后的查询使用相同的过滤器时，会有一个缓存命中，过滤器结果从缓存中快速返回。<br>fq的传参说明：<br>在下面的例子中，只有流行度大于10并且段落为0的文档才会匹配。<br>可以一次传传多个fq：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fq=popularity:[10 TO *]&amp;fq=section:0</span><br></pre></td></tr></table></figure><p> 也可将多个过滤条件组合在一个fq:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fq=+popularity:[10 TO *] +section:0</span><br></pre></td></tr></table></figure><p> 每个过滤器查询的文档集都是独立缓存的，几个fq就缓存几个过滤结果集。</p></li><li><p>fl（Field List）参数<br>该 fl 参数将查询响应中包含的信息限制在指定的字段列表中。这些字段必须是 stored=”true” 或 docValues=”true”。<br>字段列表可以指定为空格分隔或逗号分隔的字段名称列表。<br>通配符 * 选择文档中的所有字段，它们是 stored=”true”、docValues=”true” 和 useDocValuesAsStored=”true”。<br>还可以添加伪字段（pseudo-fields）、函数和变换器。<br>示例：<br><img src="/images/solr1/solr1-31.png" alt><br>函数与 fl：<br>可以为结果中的每个文档计算函数，并将其作为伪字段（pseudo-field）返回：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fl=id,title,product(price,popularity)</span><br></pre></td></tr></table></figure><p> 文件变换器与 fl：<br> 文档变换器可以用来修改查询结果中每个文档返回的信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fl=id,title,[explain]</span><br></pre></td></tr></table></figure><p> 字段名称别名：<br> 可以通过使用 “displayName” 前缀来更改对字段、函数或转换器的响应中使用的键。例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">l=id,sales_price:price,secret_sauce:prod(price,popularity),why_score:[explain style=nl]</span><br></pre></td></tr></table></figure></li><li><p>debug 参数<br>用于指定在结果中返回调试信息。</p></li><li>timeAllowed 参数<br>限定查询在多少毫秒内返回，如果到时间了还未执行完成，则直接返回部分结果。</li><li>wt 参数<br>指定响应的内容格式：json、xml、csv……  SearchHandler根据它选择ResponseWriter。默认JSON 将作为响应的格式返回。</li><li>cache 参数<br>设置是否对查询结果、过滤查询的结果进行缓存。默认是都会被缓存的。如果不需要缓存明确设置 cache=false。<br>…</li></ol><h3 id="查询解析器"><a href="#查询解析器" class="headerlink" title="查询解析器"></a>查询解析器</h3><ul><li>标准查询解析器</li><li>DisMax 查询解析器</li><li>扩展的 DisMax 查询解析器</li><li>其他解析器<br>查询解析器插件是 QParserPlugin 的所有子类。可自定义扩展自己的查询分析器。</li></ul><h4 id="标准查询解析器"><a href="#标准查询解析器" class="headerlink" title="标准查询解析器"></a>标准查询解析器</h4><p>Solr 的标准查询解析器（Query Parser）也被称为 “lucene” 解析器。<br>标准查询解析器的关键优势在于它支持强大且相当直观的语法，允许您创建各种结构化查询。最大的缺点是它不容忍出现语法错误，与 DisMax 查询解析器相比， DisMax 查询解析器的设计目的是尽可能地减少抛出错误。</p><h5 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h5><p>q<br>使用标准查询语法定义查询。必须项。<br>……</p><h5 id="响应"><a href="#响应" class="headerlink" title="响应"></a>响应</h5><p>我们通过Solr Admin页面-Query来看看吧。内核user上，有我们之前存入的大量数据。<br><img src="/images/solr1/solr1-32.png" alt><br><img src="/images/solr1/solr1-33.png" alt></p><h5 id="指定标准查询分析器的条件"><a href="#指定标准查询分析器的条件" class="headerlink" title="指定标准查询分析器的条件"></a>指定标准查询分析器的条件</h5><p>检索词<br>有2种类型的检索词：单词和短语</p><ul><li>单词是一个单独的词，例如 “test” 或 “hello”</li><li>短语是一组由双引号包围的词组，如 “hello dolly”<br>多个检索词可以与布尔运算符组合在一起，形成更复杂的查询（如下所述）：</li></ul><p>操作符<br>条件修饰<br>根据需要，Solr支持多样的能够增加灵活度或精度的检索词模糊匹配。这些模糊匹配包括可以进行模糊查询或一般查询的通配符。</p><ul><li>通配符查询<br>solr标准查询支持在单词中使用一个或多个通配符。通配符可以应用于单词，但不能用于短语中。<table><br>  <tr><br>      <td>通配符查询类型</td><br>      <td>字符</td><br>      <td>示例</td><br>  </tr><br>  <tr><br>      <td>单个字符（匹配单个字符）</td><br>      <td>？</td><br>      <td>搜索字符串te?t将匹配 test 和 text。</td><br>  </tr><br>  <tr><br>      <td>多个字符（匹配0个或多个字符） </td><br>      <td> * </td><br>      <td>tes* -&gt; test, testing, 或 tester。<br>te*t -&gt; test 或 text. <br>*est -&gt; pest 或 test</td><br>  </tr><br></table></li><li><p>模糊查询<br>在单词词尾添加波浪号 〜 符号</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roam~</span><br></pre></td></tr></table></figure><p>  这个搜索将匹配像 roams、foam、foams。它也将匹配“roam”这个词本身。<br>  一个可选的距离参数指定的最大可编辑数介于0和2之间，默认为2。例如：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">roam~1</span><br></pre></td></tr></table></figure><p>  这将匹配 roams 和 foam 等术语，但不包括 foams，因为它的编辑距离为“2”。</p></li><li><p>邻近搜索<br>邻近查询将查询一个检索词与另一个检索词有指定距离的结果。<br>执行邻近查询，在查询检索词组最后添加～符号和一个数值。比如，要查询文档中的 “apache” 和 “jakarta” 之间有10个单词：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;jakarta apache&quot;~10</span><br></pre></td></tr></table></figure><p>  这里所说的距离，是匹配指定检索词所需移动单词的数量。在上面的例子中，“apache” 和 “jakarta” 之间有10个词的距离则匹配。如果 “apache” 在 “jakarta” 前面，则需要更大的数，使 “apache” 能够在 “jakarta” 后面。</p></li><li><p>范围搜索<br>范围搜索指定字段的值范围。如果是非数字字段，按照字典排序。<br>比如，下面的例子是匹配所有的mod_date检索字段在20020101和20030101之间的结果（包括20020101和20030101）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mod_date:[20020101 TO 20030101]</span><br></pre></td></tr></table></figure><p>  范围查询不限于日期字段或数字格式，还可以查询非日期字段：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title:&#123;Aida TO Carmen&#125;</span><br></pre></td></tr></table></figure><p>  将会查询所有 title 在 Aida 与 Carmen之间的文档（不包括Aida 和 Carmen）。<br>  通过括号决定是否包括上限和下限：<br>  1.方括号[]表示包含上限和下限；<br>  2.花括号{}表示不包含上限和下限；<br>  3.也可以同时使用两种括号，表示一个包含，一个不包含，比如：count:{ 1 TO 10 ]。</p></li><li><p>控制相关度查询<br>加权查询允许通过加权单词控制文档的相关度。比如，你查询 “jakarta apache” ，并且希望 “jakarta” 相关度更高，你可以使用 ^符号，比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jakarta^4 apache</span><br></pre></td></tr></table></figure><p>  默认，加权因子是1。尽管加权因子必须是正数，但是可以小于1（比如，0.2）。</p></li><li><p>使用“^=”打分<br>常量打分查询使用 &lt;query_clause&gt;^=<score>，对整个变量设置指定分值。当你只关心一个特定的匹配条件，不希望其他因素产生影响，比如检索词频率或逆文献频率。<br>例如：</score></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(description:blue OR color:blue)^=1.0 text:shoes</span><br></pre></td></tr></table></figure></li><li><p>查询指定字段<br>在solr中对数据创建索引是以字段为基准的，这是在solr的managed-schema文件中定义的。<br>搜索可以利用字段增加查询精度。比如，你可以指定一个字段来搜索，比如一个title字段。<br>在managed-schema文件中定义一个字段作为默认字段。如果你在查询的时候没有指定字段，solr只搜索默认字段。另外，你可以在查询过程中指定一个字段或字段组合。<br>要指定一个字段，只需要在检索词前面加上字段和冒号（:），然后就能够使用这个字段进行查询了。<br>比如，假设一个索引包括两个字段，title和text，并且text是默认字段。如果你想查询查询名为The Right Way的文档和包含don’t go this way的文档，你可以使用下面的检索方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">title:&quot;The Right Way&quot; AND text:&quot;don&apos;t go this way&quot;</span><br><span class="line">title:&quot;Do it right&quot; AND &quot;don&apos;t go this way&quot;</span><br></pre></td></tr></table></figure><p>  既然text是默认字段，可以不用明确指明；所以，上面第二种方式忽略它。<br>  默认字段先于指定字段，所以查询title:Do it right将只在title字段查询Do，在默认字段上查询it和right。</p></li><li><p>标准查询支持的布尔运算符<br>布尔运算符可以在查询时使用布尔逻辑，在匹配文档时查询存在或不存在指定检索词或条件。下面的表格总结了标准查询可以使用的布尔运算符。<br><table><br><tr><br>  <td>布尔运算符</td><br>  <td>替代符号</td><br>  <td>描述</td><br></tr><br><tr><br>  <td>AND</td><br>  <td>&amp;&amp;</td><br>  <td>要求在布尔运算符两侧的任何一方都要匹配。</td><br></tr><br><tr><br>  <td>NOT </td><br>  <td>!</td><br>  <td>要求对应搜索词不存在。</td><br></tr><br><tr><br>  <td>OR</td><br>  <td>||</td><br>  <td>要求布尔运算符两侧一个或两个检索词都会出现。</td><br></tr><br><tr><br>  <td></td><br>  <td>+</td><br>  <td>要求符号”+”后的项必须在文档相应的域中存在</td><br></tr><br><tr><br>  <td></td><br>  <td>-</td><br>  <td>要求符号”-”后的项不存在。</td><br></tr><br></table><br>布尔运算符允许使用逻辑运算符的组合检索词。Lucene支持<code>AND</code>、<code>+</code>、<code>OR</code>、<code>NOT</code>和<code>-</code>作为逻辑运算符。<br>注：<br>当使用关键词（如AND、NOT）指定布尔表达式时，必须使用大写字母。</p><p>  布尔运算符OR (||)<br>  OR运算符是默认运算符。这就意味着，如果两个检索词之间没有布尔表达式，默认使用OR运算符。OR运算符链接的两个检索词，如果任何一个检索词存在文档中，这个文档将成为匹配文档。这就相当于并集。可以使用||代替OR。查询包含 “jakarta apache” 或 “jakarta,”，可以使用</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;jakarta apache&quot; jakarta</span><br><span class="line">&quot;jakarta apache&quot; OR jakarta</span><br></pre></td></tr></table></figure><p>  布尔运算符AND (&amp;&amp;)<br>  AND操作要求在一个文档中包含两个检索词，这相当于交集。可以使用&amp;&amp;代替AND。<br>  要查询包含 “jakarta apache” 和 “Apache Lucene”的文档，可以使用</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;jakarta apache&quot; AND &quot;Apache Lucene&quot;</span><br><span class="line">&quot;jakarta apache&quot; &amp;&amp; &quot;Apache Lucene&quot;</span><br></pre></td></tr></table></figure><p>  布尔运算符NOT (!)<br>  NOT运算符不包括那些包含NOT之后的检索词的文档。这相当于差集。可以使用!代替NOT。<br>  要查询包含 “jakarta apache” 但不包括 “Apache Lucene”的文档，可以使用</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;jakarta apache&quot; NOT &quot;Apache Lucene&quot;</span><br><span class="line">&quot;jakarta apache&quot; ! &quot;Apache Lucene&quot;</span><br></pre></td></tr></table></figure><p>  布尔运算符+<br>  +要求+之后检索词存在于至少一个文档的某个字段中，以便查询返回。<br>  比如，要查询文件，必须包含”jakarta”，可能或可能不包含”lucene”，可以使用查询</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">+jakarta lucene</span><br></pre></td></tr></table></figure><p>  布尔运算符-<br>  -或“禁止”运算符不包括符号后包含检索词的文件。<br>  比如，要查询文件，必须包含”jakarta apache”，不包含”Apache Lucene”，可以使用查询</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;jakarta apache&quot; -&quot;Apache Lucene&quot;</span><br></pre></td></tr></table></figure><p>  转义特殊字符<br>  在solr的一次查询中，下列字符存在特殊含义：+ - &amp;&amp; || ! ( ) { } [ ] ^ “ ~ * ? : /。<br>  为了让solr解读这些字符时使用字面量，而不是特殊字符，可以在字符前加一个反斜杠\字符。例如，查询(1+1):2，为了不让solr把+、括号()对两个检索词进行子查询，需要在特殊字符前加上反斜杠转义字符：\(1\+1\)\:2。</p><p>  分组子查询<br>  支持使用括号来组合子句形式的子查询。如果你想控制一个查询的布尔逻辑，这是非常有用的。<br>  The query below searches for either “jakarta” or “apache” and “website”:<br>  下面的查询搜索 “jakarta” 或 “apache” 和 “website”：(jakarta OR apache) AND website。<br>  这样增加了查询的准确性，“website”必须存在，需要”jakarta” 或 “apache” 存在。</p><p>  group从句作为字段<br>  在查询过程中多一个字段使用两个或多个布尔运算符，需要使用括号组织布尔从句。比如，下面查询title字段必须包含”return”单词和”pink panther”短语：title:(+return +”pink panther”)。</p><p>  注释<br>  在查询串中支持C语言风格的注释。比如：”jakarta apache” /* 这是在一个普通查询串中间的注释 */ OR jakarta。注释可以被嵌套。</p></li></ul><h4 id="DisMax-查询解析器"><a href="#DisMax-查询解析器" class="headerlink" title="DisMax 查询解析器"></a>DisMax 查询解析器</h4><p>DisMax查询解析器设计用于处理用户输入的简单短语（无复杂语法），并根据每个字段的重要性使用不同的权重（升序）在多个字段中搜索单个术语。其他选项允许用户根据特定于每个用例的规则（独立于用户输入）影响分数。<br>一般来说，与“Lucene”Solr查询解析器的接口相比，DisMax查询解析器的接口更像Google的接口。这种相似性使DisMax成为许多用户应用程序的适当查询解析器。它接受一个简单的语法，很少产生错误消息。<br>DisMax查询解析器主要设计为易于使用，并且几乎可以接受任何输入而不返回错误。<br>语法：略</p><h4 id="扩展的-DisMax-查询解析器：eDismax"><a href="#扩展的-DisMax-查询解析器：eDismax" class="headerlink" title="扩展的 DisMax 查询解析器：eDismax"></a>扩展的 DisMax 查询解析器：eDismax</h4><p>除了支持所有的 DisMax 查询解析器参数外，同时支持完整的 Lucene 查询分析器语法，它与 Solr 的标准查询解析器具有相同的增强功能。</p><h3 id="Solr的函数查询"><a href="#Solr的函数查询" class="headerlink" title="Solr的函数查询"></a>Solr的函数查询</h3><p>函数查询允许你使用一个或多个数字字段的真实值生成一个相关性分数，函数查询在standard，DisMax，eDisMax下都能使用。<br>查询函数可以是常量，字段或者其他函数的组合。使用函数可以影响结果的排序。</p><h4 id="使用Function-Query"><a href="#使用Function-Query" class="headerlink" title="使用Function Query"></a>使用Function Query</h4><ol><li><p>直接向QParser指定函数参数，如func或frange：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q=&#123;!func&#125;div(popularity,price)&amp;fq=&#123;!frange l=1000&#125;customer_ratings</span><br></pre></td></tr></table></figure></li><li><p>在排序时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort=div(popularity,price) desc, score desc</span><br></pre></td></tr></table></figure></li><li><p>将函数的结果作为伪字段（pseudo-fields）添加到查询结果中的文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&amp;fl=sum(x, y),id,a,b,c,score</span><br></pre></td></tr></table></figure></li><li><p>指定函数的一个参数：在dDisMax中指定boost参数，在DisMax中指定bf参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q=dismax&amp;bf=&quot;ord(popularity)^0.5 recip(rord(price),1,1000,1000)^0.3&quot;</span><br></pre></td></tr></table></figure></li><li><p>在Lucene的QParser中使用<em>val</em>关键字指定函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">q=_val_:mynumericfield _val_:&quot;recip(rord(myfield),1,2,3)&quot;</span><br></pre></td></tr></table></figure></li></ol><h4 id="使用Function-Query-1"><a href="#使用Function-Query-1" class="headerlink" title="使用Function Query"></a>使用Function Query</h4><p>Solr中的可用函数<br>todo</p><h3 id="响应编写器"><a href="#响应编写器" class="headerlink" title="响应编写器"></a>响应编写器</h3><p>Solr 支持各种响应编写器，以确保查询响应可以被适当的语言或应用程序解析。<br>该 wt 参数选择要使用的响应编写器。</p><ul><li>JSON</li><li>XML</li><li>CSV</li><li>GeoJSON</li><li>javabin</li><li>PHP</li><li>PHPS</li><li>python</li><li>ruby</li><li>smile</li><li>velocity</li><li>XLSX</li><li>XSLT</li></ul><h4 id="JSON响应编写器"><a href="#JSON响应编写器" class="headerlink" title="JSON响应编写器"></a>JSON响应编写器</h4><p>默认的 Solr 响应编写器是 JsonResponseWriter。在请求中没有设置 wt 参数，则默认情况下将获得 JSON。<br>参数介绍：略</p><h4 id="标准的XML响应编写器"><a href="#标准的XML响应编写器" class="headerlink" title="标准的XML响应编写器"></a>标准的XML响应编写器</h4><p>XML 响应编写器是 Solr 当前包含的最通用和可重用的响应编写器。这是大多数关于 Solr 查询响应的讨论和文档中使用的格式。<br>参数介绍：略</p><h3 id="Solr的提交方式"><a href="#Solr的提交方式" class="headerlink" title="Solr的提交方式"></a>Solr的提交方式</h3><p>Solr的提交方式有两种，标准提交（硬提交，hard commit）和软提交(soft commit)。</p><h4 id="Hard-commit"><a href="#Hard-commit" class="headerlink" title="Hard commit"></a>Hard commit</h4><ul><li>默认的提交即硬提交，commit之后会立刻将文档同步到硬盘，在开启新搜索器之前会阻塞，直到同步完成。</li><li>默认情况下commit后会开启一个新搜索器（newSearcher），然后进行预热，预热完成后顶替旧搜索器，使旧缓存失效，但是开启新searcher及预热的过程（IO消耗）耗费资源过大，且可能被阻塞，所以应尽量避免在高峰期开启newsearcher,搜索器同一时间只能有一个处于active状态。</li><li>为了避免频繁commit，solr提供了autocommit功能，可以设置每隔多久提交一次，或者待提交文档量达到阀值提交一次，并且可定义是否在提交后开启新的搜索器，若不开启，则缓存不能够被刷新，新更新文档不能够被实时读取到。<br><img src="/images/solr1/solr1-34.png" alt></li></ul><h4 id="Soft-commit"><a href="#Soft-commit" class="headerlink" title="Soft commit"></a>Soft commit</h4><ul><li>软提交是将文档提交到内存，并不实时写入硬盘，减少了耗时的I/O操作。</li><li>为了保证实时搜索，solr在软提交基础上引入了近实时搜索（NRT），NRT并不会被文档更新所阻塞，也不会等待文档合并完成再打开一个搜索器。</li><li>在lucene4.x 之前，solr采用NRTManager实现NRT,之后使用ControlledRealTimeReopenThread实现，它通过IndexWriter对象来监控内存中的文档变化，从而得到最新的文档信息，该过程既不需要高耗时的I/O操作，也不需要刷新搜索器，所以非常之快，耗费资源很少。</li><li>所以近实时搜索（NRT）是软提交的一个特性。</li><li>同样的软提交也支持自动提交的方式，配置如下：<br><img src="/images/solr1/solr1-35.png" alt></li></ul><h4 id="结合优化"><a href="#结合优化" class="headerlink" title="结合优化"></a>结合优化</h4><p>上述两种提交方式并不冲突，试想我们程序使用了软提交，但何时可以把数据真正同步到磁盘呢？这时候就可以两者结合达到目的。我们设置每隔5000ms进行一次软提交，文档存入了内存，也可以实时搜索，然后每隔300000ms又会进行进行一次硬提交，同步到磁盘，无需刷新Searcher，如此两者兼顾。在配置文件中配置后，在客户端就不需要维护提交方式和提交时间了。<br><img src="/images/solr1/solr1-36.png" alt></p><h3 id="导出Solr结果集"><a href="#导出Solr结果集" class="headerlink" title="导出Solr结果集"></a>导出Solr结果集</h3><h4 id="介绍-1"><a href="#介绍-1" class="headerlink" title="介绍"></a>介绍</h4><ul><li>可以使用特殊的秩查询解析器和响应编写器来导出完全排序的结果集，这种解析器和响应编写器专门设计用于处理涉及排序和导出数百万条记录的场景。</li><li>此功能使用 stream 排序技术，在毫秒内开始发送记录，并继续对结果进行 stream 处理，直到整个结果集被排序并且导出为止。</li><li>此功能可能有用的情况包括：会话分析、分布式合并联接、时间序列汇总、高基数字段上的聚合、完全分布式字段合并和基于排序的统计信息。</li></ul><h4 id="请求结果导出"><a href="#请求结果导出" class="headerlink" title="请求结果导出"></a>请求结果导出</h4><ul><li>可以使用 /export 来请求导出查询的结果集。</li><li>所有查询都必须包括 sort 和 fl 参数，否则查询将返回一个错误。过滤器查询也被支持。</li><li>受支持的响应编写器是 json 和 javabin。由于向后兼容性的原因，wt=xsort也被支持作为输入，但是 wt=xsort 与 wt=json 的行为相同。默认的输出格式是 json。<br>  示例：  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8983/solr/core_name/export?q=my-query&amp;sort=severity+desc,timestamp+desc&amp;fl=severity,timestamp,msg</span><br></pre></td></tr></table></figure></li></ul><h2 id="SolrJ"><a href="#SolrJ" class="headerlink" title="SolrJ"></a>SolrJ</h2><p>solrj是访问Solr服务的java客户端，提供索引和搜索的请求方法，SolrJ通常嵌入在业务系统中，通过SolrJ的API接口操作Solr服务，如下图：<br><img src="/images/solr1/solr1-37.png" alt><br>demo代码：详见cfa-tagging项目的SolrJTest.java。</p><ul><li><p>SolrTag类定义如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//忽略未匹配到的字段</span></span><br><span class="line"><span class="meta">@JsonIgnoreProperties</span>(ignoreUnknown = <span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SolrTag</span> </span>&#123;</span><br><span class="line">    <span class="comment">// solr查询若直接将数据转为对象，需要指定Field，该值需要和managed-schema配置Field的name一致</span></span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"leId"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer leId;</span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"enterpriseName"</span>)</span><br><span class="line">    <span class="keyword">private</span> String enterpriseName;</span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"enterpriseAttr"</span>)</span><br><span class="line">    <span class="keyword">private</span> String enterpriseAttr;</span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"enterpriseValue"</span>)</span><br><span class="line">    <span class="keyword">private</span> String enterpriseValue;</span><br><span class="line">    <span class="meta">@Field</span>(<span class="string">"valueValue"</span>)</span><br><span class="line">    <span class="keyword">private</span> String valueValue;</span><br><span class="line"> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> Integer <span class="title">getLeId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> leId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLeId</span><span class="params">(Integer leId)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.leId = leId;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEnterpriseName</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> enterpriseName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnterpriseName</span><span class="params">(String enterpriseName)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.enterpriseName = enterpriseName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEnterpriseAttr</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> enterpriseAttr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnterpriseAttr</span><span class="params">(String enterpriseAttr)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.enterpriseAttr = enterpriseAttr;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getEnterpriseValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> enterpriseValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setEnterpriseValue</span><span class="params">(String enterpriseValue)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.enterpriseValue = enterpriseValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getValueValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> valueValue;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setValueValue</span><span class="params">(String valueValue)</span> </span>&#123;</span><br><span class="line"> <span class="keyword">this</span>.valueValue = valueValue;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="string">"SolrTag [leId="</span> + leId + <span class="string">", enterpriseName="</span> + enterpriseName + <span class="string">", enterpriseAttr="</span> + enterpriseAttr</span><br><span class="line">   + <span class="string">", enterpriseValue="</span> + enterpriseValue + <span class="string">", valueValue="</span> + valueValue + <span class="string">"]"</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>SolrJTest单元测试类定义如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Description : SolrJ CRUD操作的单元测试类</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner<span class="class">.<span class="keyword">class</span>)</span></span><br><span class="line"><span class="class">@<span class="title">SpringBootTest</span></span></span><br><span class="line"><span class="class">@<span class="title">WebAppConfiguration</span></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">class</span> <span class="title">SolrJTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    SolrTagMapper solrTagMapper;</span><br><span class="line">    <span class="keyword">private</span> SolrClient solrClient;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化SolrClient</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUp</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> String solrUrl = <span class="string">"http://localhost:8983/solr/c4c_tag"</span>;</span><br><span class="line"> solrClient = <span class="keyword">new</span> HttpSolrClient.Builder(solrUrl).build();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询所有字段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryFields</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> SchemaRequest.Fields queryFields = <span class="keyword">new</span> SchemaRequest.Fields();</span><br><span class="line"> NamedList&lt;Object&gt; existFields = solrClient.request(queryFields);</span><br><span class="line"> Iterator&lt;Entry&lt;String, Object&gt;&gt; iter = existFields.iterator();</span><br><span class="line"> <span class="keyword">while</span> (iter.hasNext()) &#123;</span><br><span class="line">    Entry&lt;String, Object&gt; next = iter.next();</span><br><span class="line">    System.out.println(next.getKey() + <span class="string">":"</span> + next.getValue());</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加字段，包括字段的名称、类型、是否存储，是否索引等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addFields</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> List&lt;Map&lt;String, Object&gt;&gt; fieldAttributesList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"> Map&lt;String, Object&gt; fieldAttributes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"> <span class="comment">// 域名</span></span><br><span class="line"> fieldAttributes.put(<span class="string">"name"</span>, <span class="string">"leId"</span>);</span><br><span class="line"> <span class="comment">// 域的类型，可以是string，pint，如果需要分词设为text_ik</span></span><br><span class="line"> fieldAttributes.put(<span class="string">"type"</span>, <span class="string">"pint"</span>);</span><br><span class="line"> <span class="comment">// 是否索引，默认为true</span></span><br><span class="line"> fieldAttributes.put(<span class="string">"indexed"</span>, <span class="keyword">true</span>);</span><br><span class="line"> <span class="comment">// 是否存储，默认为true</span></span><br><span class="line"> fieldAttributes.put(<span class="string">"stored"</span>, <span class="keyword">true</span>);</span><br><span class="line"> <span class="comment">// 是否多值，默认为false</span></span><br><span class="line"> fieldAttributes.put(<span class="string">"multiValued"</span>, <span class="keyword">false</span>);</span><br><span class="line"> <span class="comment">// 是否必须，默认false，schema文件中有一个id已默认必须</span></span><br><span class="line"> fieldAttributes.put(<span class="string">"required"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributesList.add(fieldAttributes);</span><br><span class="line"> fieldAttributes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"> fieldAttributes.put(<span class="string">"name"</span>, <span class="string">"enterpriseName"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"type"</span>, <span class="string">"string"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"indexed"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"stored"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"multiValued"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"required"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributesList.add(fieldAttributes);</span><br><span class="line"> fieldAttributes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"> fieldAttributes.put(<span class="string">"name"</span>, <span class="string">"enterpriseAttr"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"type"</span>, <span class="string">"string"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"indexed"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"stored"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"multiValued"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"required"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributesList.add(fieldAttributes);</span><br><span class="line"> fieldAttributes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"> fieldAttributes.put(<span class="string">"name"</span>, <span class="string">"enterpriseValue"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"type"</span>, <span class="string">"string"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"indexed"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"stored"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"multiValued"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"required"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributesList.add(fieldAttributes);</span><br><span class="line"> fieldAttributes = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"> fieldAttributes.put(<span class="string">"name"</span>, <span class="string">"valueValue"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"type"</span>, <span class="string">"string"</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"indexed"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"stored"</span>, <span class="keyword">true</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"multiValued"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributes.put(<span class="string">"required"</span>, <span class="keyword">false</span>);</span><br><span class="line"> fieldAttributesList.add(fieldAttributes);</span><br><span class="line"> SchemaRequest.AddField addField = <span class="keyword">null</span>;</span><br><span class="line"> <span class="keyword">for</span> (Map&lt;String, Object&gt; map : fieldAttributesList) &#123;</span><br><span class="line">    addField = <span class="keyword">new</span> SchemaRequest.AddField(map);</span><br><span class="line">    solrClient.request(addField);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加字段，包括字段的名称、类型、是否存储，是否索引等</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteField</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> SchemaRequest.DeleteField delField = <span class="keyword">new</span> SchemaRequest.DeleteField(<span class="string">"delField"</span>);</span><br><span class="line"> solrClient.request(delField);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过对象添加单条数据，若添加时id已存在，那么solr会执行修改操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBean</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> SolrTag tag = <span class="keyword">new</span> SolrTag();</span><br><span class="line"> tag.setLeId(<span class="number">1</span>);</span><br><span class="line"> tag.setEnterpriseName(<span class="string">"国企"</span>);</span><br><span class="line"> tag.setEnterpriseAttr(<span class="string">"2-5 年"</span>);</span><br><span class="line"> tag.setEnterpriseValue(<span class="string">"AA有限公司"</span>);</span><br><span class="line"> tag.setValueValue(<span class="string">"IT行业"</span>);</span><br><span class="line"> solrClient.addBean(tag);</span><br><span class="line"> solrClient.commit();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 批量添加</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addBeans</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 从数据库查出所有的记录</span></span><br><span class="line"> List&lt;SolrTag&gt; solrTags = solrTagMapper.listAll();</span><br><span class="line"> <span class="comment">// 添加</span></span><br><span class="line"> solrClient.addBeans(solrTags);</span><br><span class="line"> solrClient.commit();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过document添加单条数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addDocument</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> SolrInputDocument document = <span class="keyword">new</span> SolrInputDocument();</span><br><span class="line"> document.addField(<span class="string">"leId"</span>, <span class="number">2</span>);</span><br><span class="line"> document.addField(<span class="string">"enterpriseName"</span>, <span class="string">"国企"</span>);</span><br><span class="line"> document.addField(<span class="string">"enterpriseAttr"</span>, <span class="string">"3年以上"</span>);</span><br><span class="line"> document.addField(<span class="string">"enterpriseValue"</span>, <span class="string">"BB有限公司"</span>);</span><br><span class="line"> document.addField(<span class="string">"valueValue"</span>, <span class="string">"IT行业"</span>);</span><br><span class="line"> solrClient.add(document);</span><br><span class="line"> solrClient.commit();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 两种删除方式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 方式一：根据id删除</span></span><br><span class="line"><span class="comment">//  solrClient.deleteById(id);</span></span><br><span class="line"> <span class="comment">// 方式二：根据查询结构删除</span></span><br><span class="line"> solrClient.deleteByQuery(<span class="string">"enterpriseName:国企"</span>);</span><br><span class="line"> solrClient.commit();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询所有/select?q=*:*</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryAll</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 构造搜索条件</span></span><br><span class="line"> SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line"> <span class="comment">// 设置搜索关键词</span></span><br><span class="line"> solrQuery.setQuery(<span class="string">"*:*"</span>);</span><br><span class="line"> <span class="comment">// 执行查询</span></span><br><span class="line"> QueryResponse response = solrClient.query(solrQuery);</span><br><span class="line"> <span class="comment">// 获取查询结果</span></span><br><span class="line"> List&lt;SolrTag&gt; solrTags = response.getBeans(SolrTag<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"> <span class="comment">// 打印匹配总数</span></span><br><span class="line"> System.out.println(<span class="string">"匹配总数为："</span> + response.getResults().getNumFound());</span><br><span class="line"> <span class="comment">// 打印搜索结果</span></span><br><span class="line"> <span class="keyword">for</span> (SolrTag solrTag : solrTags) &#123;</span><br><span class="line">    System.out.println(solrTag);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 限定返回字段/select?q=*:*&amp;fl=param1,param2</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryFl</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 构造搜索条件</span></span><br><span class="line"> SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line"> <span class="comment">// 设置搜索关键词</span></span><br><span class="line"> solrQuery.setQuery(<span class="string">"*:*"</span>);</span><br><span class="line"> <span class="comment">// 设置限定返回字段</span></span><br><span class="line"> solrQuery.setFields(<span class="string">"leId"</span>, <span class="string">"enterpriseName"</span>, <span class="string">"enterpriseAttr"</span>);</span><br><span class="line"> <span class="comment">// 执行查询</span></span><br><span class="line"> QueryResponse response = solrClient.query(solrQuery);</span><br><span class="line"> <span class="comment">// 获取查询结果</span></span><br><span class="line"> List&lt;SolrTag&gt; solrTags = response.getBeans(SolrTag<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"> <span class="comment">// 打印匹配总数</span></span><br><span class="line"> System.out.println(<span class="string">"匹配总数为："</span> + response.getResults().getNumFound());</span><br><span class="line"> <span class="comment">// 打印搜索结果</span></span><br><span class="line"> <span class="keyword">for</span> (SolrTag solrTag : solrTags) &#123;</span><br><span class="line">    System.out.println(solrTag);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分页/select?q=*:*&amp;rows=5&amp;start=0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryPage</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 构造搜索条件</span></span><br><span class="line"> SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line"> <span class="comment">// 设置搜索关键词</span></span><br><span class="line"> solrQuery.setQuery(<span class="string">"*:*"</span>);</span><br><span class="line"> <span class="comment">// 设置分页信息</span></span><br><span class="line"> solrQuery.setStart(<span class="number">0</span>);</span><br><span class="line"> solrQuery.setRows(<span class="number">20</span>);</span><br><span class="line"> <span class="comment">// 执行查询</span></span><br><span class="line"> QueryResponse response = solrClient.query(solrQuery);</span><br><span class="line"> <span class="comment">// 获取查询结果</span></span><br><span class="line"> List&lt;SolrTag&gt; solrTags = response.getBeans(SolrTag<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"> <span class="comment">// 打印匹配总数</span></span><br><span class="line"> System.out.println(<span class="string">"匹配总数为："</span> + response.getResults().getNumFound());</span><br><span class="line"> <span class="comment">// 打印搜索结果</span></span><br><span class="line"> <span class="keyword">for</span> (SolrTag solrTag : solrTags) &#123;</span><br><span class="line">    System.out.println(solrTag);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 增加限定条件/select?q=*:*&amp;fq=leId:&#123;70 TO *]&amp;fq=valueValue:公司</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryFq</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 构造搜索条件</span></span><br><span class="line"> SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line"> <span class="comment">// 设置搜索关键词</span></span><br><span class="line"> solrQuery.setQuery(<span class="string">"*:*"</span>);</span><br><span class="line"> <span class="comment">// 设置限定条件</span></span><br><span class="line"> solrQuery.setFilterQueries(<span class="string">"leId:&#123;70 TO *]"</span>, <span class="string">"valueValue:公司"</span>);</span><br><span class="line"> <span class="comment">// 执行查询</span></span><br><span class="line"> QueryResponse response = solrClient.query(solrQuery);</span><br><span class="line"> <span class="comment">// 获取查询结果</span></span><br><span class="line"> List&lt;SolrTag&gt; solrTags = response.getBeans(SolrTag<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"> <span class="comment">// 打印匹配总数</span></span><br><span class="line"> System.out.println(<span class="string">"匹配总数为："</span> + response.getResults().getNumFound());</span><br><span class="line"> <span class="comment">// 打印搜索结果</span></span><br><span class="line"> <span class="keyword">for</span> (SolrTag solrTag : solrTags) &#123;</span><br><span class="line">    System.out.println(solrTag);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 使用函数,并设置别名/select?q=*:*&amp;fl:"leId", "alias:sum(leId,0.1)", "valueValue"</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryFunction</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 构造搜索条件</span></span><br><span class="line"> SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line"> <span class="comment">// 设置搜索关键词</span></span><br><span class="line"> solrQuery.setQuery(<span class="string">"*:*"</span>);</span><br><span class="line"> <span class="comment">// 将函数的结果作为伪字段,添加到查询结果中的文档</span></span><br><span class="line"> solrQuery.setFields(<span class="string">"leId"</span>, <span class="string">"alias:sum(leId,0.1)"</span>, <span class="string">"valueValue"</span>);</span><br><span class="line"> <span class="comment">// 执行查询</span></span><br><span class="line"> QueryResponse response = solrClient.query(solrQuery);</span><br><span class="line"> <span class="comment">// 获取查询结果</span></span><br><span class="line"> List&lt;SolrTag&gt; solrTags = response.getBeans(SolrTag<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"> <span class="comment">// 打印匹配总数</span></span><br><span class="line"> System.out.println(<span class="string">"匹配总数为："</span> + response.getResults().getNumFound());</span><br><span class="line"> <span class="comment">// 打印搜索结果</span></span><br><span class="line"> <span class="keyword">for</span> (SolrTag solrTag : solrTags) &#123;</span><br><span class="line">    System.out.println(solrTag);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加排序/select?q=*:*&amp;sort:leId desc</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">querySort</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 构造搜索条件</span></span><br><span class="line"> SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line"> <span class="comment">// 设置搜索关键词</span></span><br><span class="line"> solrQuery.setQuery(<span class="string">"*:*"</span>);</span><br><span class="line"> <span class="comment">// 添加排序</span></span><br><span class="line"> solrQuery.setSort(<span class="string">"leId"</span>, SolrQuery.ORDER.desc);</span><br><span class="line"> <span class="comment">// 执行查询</span></span><br><span class="line"> QueryResponse response = solrClient.query(solrQuery);</span><br><span class="line"> <span class="comment">// 获取查询结果</span></span><br><span class="line"> List&lt;SolrTag&gt; solrTags = response.getBeans(SolrTag<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"> <span class="comment">// 打印匹配总数</span></span><br><span class="line"> System.out.println(<span class="string">"匹配总数为："</span> + response.getResults().getNumFound());</span><br><span class="line"> <span class="comment">// 打印搜索结果</span></span><br><span class="line"> <span class="keyword">for</span> (SolrTag solrTag : solrTags) &#123;</span><br><span class="line">    System.out.println(solrTag);</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分组/select?q=*:*&amp;group.limit=20&amp;group.offset=0&amp;group.ngroups=true&amp;wt=javabin&amp;version=2&amp;group.field=enterpriseName&amp;group=true</span></span><br><span class="line"><span class="comment"> * group=true：设置开启分组查询 group.field=xx：设置分组字段 group.limit=20：设置分组后展示分组下数据量</span></span><br><span class="line"><span class="comment"> * group.ngroups=true：设置为true表示会返回分组的分组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryGroup</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"> <span class="comment">// 构造搜索条件</span></span><br><span class="line"> SolrQuery solrQuery = <span class="keyword">new</span> SolrQuery();</span><br><span class="line"> <span class="comment">// 设置搜索关键词</span></span><br><span class="line"> solrQuery.setQuery(<span class="string">"*:*"</span>);</span><br><span class="line"> <span class="comment">// 开启分组功能</span></span><br><span class="line"> solrQuery.set(GroupParams.GROUP, <span class="keyword">true</span>);</span><br><span class="line"> <span class="comment">// 按照enterpriseName分组</span></span><br><span class="line"> solrQuery.set(GroupParams.GROUP_FIELD, <span class="string">"enterpriseName"</span>);</span><br><span class="line"> <span class="comment">// 设置每个分组里从第几条数据开始返回，用于组内分页，这里不进行分页</span></span><br><span class="line"> solrQuery.set(GroupParams.GROUP_OFFSET, <span class="number">0</span>);</span><br><span class="line"> <span class="comment">// 设置每个分组最多返回几条数据</span></span><br><span class="line"> solrQuery.set(GroupParams.GROUP_LIMIT, <span class="number">20</span>);</span><br><span class="line"> <span class="comment">// 是否返回总的组数</span></span><br><span class="line"> solrQuery.set(GroupParams.GROUP_TOTAL_COUNT, <span class="keyword">true</span>);</span><br><span class="line"><span class="comment">//  //组内排序</span></span><br><span class="line"><span class="comment">//  solrQuery.set(GroupParams.GROUP_SORT,"filed asc");</span></span><br><span class="line"><span class="comment">//        //组间排序</span></span><br><span class="line"><span class="comment">//  solrQuery.set(CommonParams.SORT,"filed desc");</span></span><br><span class="line"> <span class="comment">// 执行查询</span></span><br><span class="line"> QueryResponse response = solrClient.query(solrQuery);</span><br><span class="line"> <span class="comment">// 获取查询结果列表</span></span><br><span class="line"> GroupResponse groupResponse = response.getGroupResponse();</span><br><span class="line"> <span class="comment">// 获取根据不同分组方式查询到的结果</span></span><br><span class="line"> List&lt;GroupCommand&gt; groupCommandList = groupResponse.getValues();</span><br><span class="line"> <span class="comment">// 由于这里只有一种分组策略，所以直接取第一个对象</span></span><br><span class="line"> GroupCommand groupCommand = groupCommandList.get(<span class="number">0</span>);</span><br><span class="line"> List&lt;Group&gt; groups = groupCommand.getValues();</span><br><span class="line"> <span class="comment">// 打印每个分组信息</span></span><br><span class="line"> SolrDocumentList list = <span class="keyword">null</span>;</span><br><span class="line"> <span class="keyword">for</span> (Group group : groups) &#123;</span><br><span class="line">    <span class="comment">// 获取每个分组内的数据</span></span><br><span class="line">    list = group.getResult();</span><br><span class="line">    System.out.println(<span class="string">"------------"</span>);</span><br><span class="line">    <span class="keyword">for</span> (SolrDocument solrDocument : list) &#123;</span><br><span class="line">   <span class="comment">// 方便演示，直接转换成json打印</span></span><br><span class="line">   String record = JSON.toJSONString(solrDocument);</span><br><span class="line">   System.out.println(record);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><h3 id="以下内容属于Solr可选扩展功能："><a href="#以下内容属于Solr可选扩展功能：" class="headerlink" title="以下内容属于Solr可选扩展功能："></a>以下内容属于Solr可选扩展功能：</h3><ul><li>身份验证插件</li><li>hadoop</li><li>授权插件</li><li>签名证书SSL</li><li>HDFS存储</li><li>备份与还原</li><li>……</li></ul><h3 id="以下内容属于集群SolrCloud的功能："><a href="#以下内容属于集群SolrCloud的功能：" class="headerlink" title="以下内容属于集群SolrCloud的功能："></a>以下内容属于集群SolrCloud的功能：</h3><ul><li>SolrCloud介绍</li><li>SolrCloud集群部署</li><li>SolrCloud工作原理</li><li>碎片、副本、索引数据</li><li>分布式请求</li><li>扩展与容错</li><li>ZooKeeper搭建</li><li>ZooKeeper控制访问</li><li>ZooKeeper管理配置文件</li><li>SolrCloud的Collections API</li><li>流表达式</li><li>并行SQL接口</li><li>并行SQL体系结构的三个逻辑层组成。</li><li>……</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;初识Solr&quot;&gt;&lt;a href=&quot;#初识Solr&quot; class=&quot;headerlink&quot; title=&quot;初识Solr&quot;&gt;&lt;/a&gt;初识Solr&lt;/h1&gt;&lt;p&gt;这几天新接触了一个Apache开源的搜索服务器Solr。&lt;/p&gt;
&lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
      <category term="Solr" scheme="https://addonepiece.github.io/tags/Solr/"/>
    
  </entry>
  
  <entry>
    <title>敏捷-Scrum5大价值观</title>
    <link href="https://addonepiece.github.io/2020/01/13/agile-scrum-values/"/>
    <id>https://addonepiece.github.io/2020/01/13/agile-scrum-values/</id>
    <published>2020-01-13T06:52:57.000Z</published>
    <updated>2020-09-14T03:32:46.297Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/agile-scrum-values.png" alt><br>Scrum价值观是专注、开放、勇气、承诺和尊重。它们非常重要，而且经常被误解，以至于在2016年7月被添加到Scrum指南中。原文如下：</p><ul><li>Respect - Scrum Team members respect each other to be capable, independent people</li><li>Focus - Everyone focuses on the work of the sprint and the goals of the Scrum Team</li><li>Commitment - People personally commit to achieving the goals of the Scrum Team</li><li>Courage - Scrum Team members have courage to do the right thing and work on tough problems</li><li>Openness - The Scrum Team and its stakeholders agree to be open about all the work and the challenges with performing the work</li></ul><p>这五个价值观很容易记住，但是很难理解它们的含义，如何应用它们，以及如何在团队和个人中识别它们。没有Scrum的价值观，我们只是在做活动，不会最大化Scrum的好处，使业务敏捷。</p><h1 id="Scrum-Values-Focus-Part-1-of-5"><a href="#Scrum-Values-Focus-Part-1-of-5" class="headerlink" title="Scrum Values: Focus (Part 1 of 5)"></a>Scrum Values: Focus (Part 1 of 5)</h1><p><i style="color:#f63;">Focus（专注）：专注于让客户满意。专注于冲刺（sprint）及其目标。</i><br>为了更好的完成任务，当我们处理复杂性和不可预测性任务时，专注是必不可少的。</p><h2 id="专注有助于经验主义和团队协作。"><a href="#专注有助于经验主义和团队协作。" class="headerlink" title="专注有助于经验主义和团队协作。"></a>专注有助于经验主义和团队协作。</h2><ul><li>当Scrum团队在一件或两件事情上进行协作时，他们通常会更有效，而不是独立地处理单独的产品待办事项。他们先做一件事，然后再做下一件事。这可以减少来自在制品和冲刺结束时未完成的工作的潜在浪费。虽然Scrum并没有告诉你如何交付，但是focus可以引导团队发现他们最好的工作方式，从而更快地完成工作并将浪费降到最低。</li><li>当有多个问题时，focus可以帮助团队确定首先要解决的问题，经常检查他们的进度，并在他们努力寻找解决方案时尝试新的实验。</li><li>当有相互竞争的优先事项时，专注可以帮助团队决定现在最重要的事情是什么。</li><li>当未来不确定的时候，有一种趋势是渐近明细。专注有助于团队接受不确定性，看看他们今天所知道的，然后迈出一小步。这种方法之所以有效，是因为我们从实践中学习，并且可以根据所学改变方向。</li><li>开发团队在交付“已完成”增量方面的共同责任，使人们关注整体结果，而不仅仅是每个人可以完成什么。</li><li>有了产品愿景，就可以专注于我们要去的地方，并且可以帮助团队的判断和决策。</li></ul><h2 id="Scrum框架包含有助于提Focus高度的元素。"><a href="#Scrum框架包含有助于提Focus高度的元素。" class="headerlink" title="Scrum框架包含有助于提Focus高度的元素。"></a>Scrum框架包含有助于提Focus高度的元素。</h2><ul><li>我们的重点是至少在每次冲刺结束时都有一个“完成”的增量。</li><li>Scrum事件和工件有助于创建关注于检查进度和新信息的焦点，因此我们可以以足够频繁的间隔进行调整。</li><li>我们专注于一个Sprint目标来指导团队交付什么。</li><li>每个角色都有一个独特的责任感，可以帮助个人知道应该把什么作为他们的优先事项。这最终有助于团队的成果。</li><li>产品Backlog是一个有序的列表，它创建了对下一步最重要事情的关注。</li><li>有时间限制的活动会产生一种紧迫感，帮助我们专注于活动的目的。</li></ul><p>团队需要不断地和协作地精炼“专注”对他们意味着什么，以便真正最大化Scrum。</p><h1 id="Scrum-Values-Openness-Part-2-of-5"><a href="#Scrum-Values-Openness-Part-2-of-5" class="headerlink" title="Scrum Values: Openness (Part 2 of 5)"></a>Scrum Values: Openness (Part 2 of 5)</h1><p><i style="color:#f63;">Openness（开放）：Scrum强调保持开放。</i><br>当我们处理复杂性和不可预测性时，开放是必不可少的。</p><h2 id="开放性促进了经验主义和协作团队精神。"><a href="#开放性促进了经验主义和协作团队精神。" class="headerlink" title="开放性促进了经验主义和协作团队精神。"></a>开放性促进了经验主义和协作团队精神。</h2><ul><li>公开我们的工作有助于为我们的进展创造透明度。没有透明度，任何检查和调整的尝试都将是有缺陷的。</li><li>开放性使团队成员能够寻求帮助。</li><li>开放性允许团队成员互相提供帮助。</li><li>开放性使团队成员能够分享他们的观点，感受到同行的意见，并能够支持团队决策。</li><li>当我们的假设被证明无效时，开放性帮助我们承认错误并改变方向。这适用于我们认为有价值的功能。这也适用于我们选择如何在产品中实现功能。</li></ul><h2 id="Scrum框架包含有助于促进开放性的元素。"><a href="#Scrum框架包含有助于促进开放性的元素。" class="headerlink" title="Scrum框架包含有助于促进开放性的元素。"></a>Scrum框架包含有助于促进开放性的元素。</h2><ul><li>将Sprint时间限制在30天或30天以下，可以促进基于新信息的改变方向的开放性。</li><li>Sprint目标是固定的并提供了指导，但是实现Sprint目标的计划是开放的，可以根据开发团队正在学习的内容进行更改。</li><li>透明的产品待办事项清单向我们的利益相关者展示了对产品计划（以及未计划的）和下一步可能发生的事情的开放性。</li><li>Sprint回顾的重点是不断改进我们团队的交互、流程和工具，这就要求我们对反馈、反思和改变工作方式持开放态度。</li><li>Sprint评审展示了与利益相关者分享进展的开放性，以及对反馈和与他们合作的开放性。</li></ul><p>团队需要不断地和协作地精炼“开放”对他们意味着什么，以便真正最大化Scrum。</p><h1 id="Scrum-Values-Courage-Part-3-of-5"><a href="#Scrum-Values-Courage-Part-3-of-5" class="headerlink" title="# Scrum Values: Courage (Part 3 of 5)"></a># Scrum Values: Courage (Part 3 of 5)</h1><p><i style="color:#f63;">Courage（勇气）：Scrum团队成员有勇气做正确的事情并解决棘手的问题。</i><br>勇气是解决复杂问题和培养高绩效团队的关键。</p><h2 id="勇气有助于经验主义和团队合作。"><a href="#勇气有助于经验主义和团队合作。" class="headerlink" title="勇气有助于经验主义和团队合作。"></a>勇气有助于经验主义和团队合作。</h2><ul><li>在压力下保持进展的透明度，以便更快地交付成果，这需要勇气。</li><li>不让我们的利益相关者放弃工作需要勇气。</li><li>寻求帮助或承认我们不知道怎么做需要勇气。</li><li>当其他人没有履行对团队的承诺时，让他们承担责任需要勇气。</li><li>我们可能会发现我们制造了顾客不想要的东西。承认我们的假设是错误的并改变方向需要勇气。</li><li>尝试建立我们从未建立过的东西需要勇气，不知道它是否会起作用。</li><li>与团队成员分享不同意见并进行富有成效的冲突需要勇气。</li><li>承认错误需要勇气。这可能适用于我们的技术工作、我们的决定，或者我们的行为方式。</li></ul><h2 id="Scrum框架包含有助于提升勇气的元素。"><a href="#Scrum框架包含有助于提升勇气的元素。" class="headerlink" title="Scrum框架包含有助于提升勇气的元素。"></a>Scrum框架包含有助于提升勇气的元素。</h2><ul><li>每一次Scrum活动都是一个检验和适应的机会。这种内在的假设，即改变方向是可以的，这使我们有了勇气。我们可以改变建设方向。我们可以改变建设方向。</li><li>冲刺的时间限制了失败对冲刺长度的影响。这给了我们勇气去尝试新事物，去实验，去学习。</li><li>Scrum的三个角色和他们各自的职责提升了勇气。产品负责人对产品价值最大化负责，因此她可以通过对低价值特征说“不”来表现勇气。开发团队负责交付高质量的产品，在压力下降低质量时，他们可以通过说“不”来展示勇气。</li><li>通过Sprint Backlog和产品Backlog，我们对计划的工作是透明的。通过向利益相关者展示完成的增量，我们对进度是透明的。透明需要勇气，透明有助于我们建立信任。信任越多，勇气越大。这是一个良性循环。</li><li>Sprint回顾的目的是检查我们作为Scrum团队的情况，并确定改进的行动。这使我们有勇气提出我们如何合作的问题。这使我们有勇气去尝试新事物，去想要更多。</li></ul><p>这仅仅是几个例子，说明Scrum“勇气”如何在Scrum Team中体现，帮助他们最大限度地发挥Scrum的好处。还有很多。团队需要不断地和协作地精炼“勇气”对他们意味着什么，以便真正最大化Scrum。</p><h1 id="Scrum-Values-Commitment-Part-4-of-5"><a href="#Scrum-Values-Commitment-Part-4-of-5" class="headerlink" title="Scrum Values: Commitment (Part 4 of 5)"></a>Scrum Values: Commitment (Part 4 of 5)</h1><p><i style="color:#f63;">Commitment（承诺）：对致力于实现Scrum团队目标做出承诺。</i><br>承诺对于解决复杂问题和发展高绩效团队至关重要。Scrum中的承诺常常被误解为在指定日期交付一个指定范围的承诺。这从来不是Scrum指南中承诺这个词的本意。我希望这篇文章有助于阐明承诺的价值。</p><h2 id="承诺有助于经验主义和团队协作。"><a href="#承诺有助于经验主义和团队协作。" class="headerlink" title="承诺有助于经验主义和团队协作。"></a>承诺有助于经验主义和团队协作。</h2><ul><li>当我们致力于团队的成功，而不仅仅是关心我们个人的成就时，这就创造了一个信任、高效解决问题和高团队标准的环境。</li><li>当我们致力于全面地进行Scrum时，而不仅仅是挑选容易的部分，我们可以充分体验透明、检查和适应的好处。</li><li>致力于持续改进，更容易根据新信息或经验数据改变方向。</li><li>承诺就是全力以赴。我们不能预测或控制产品开发中的所有复杂性，但我们可以承诺采取行动和调整我们的行为，基于反馈和新的学习。</li><li>当我们致力于交付价值时，我们会感觉到一种更强烈的共同目标感，这种意识驱使我们去合作。</li></ul><h2 id="Scrum框架包括有助于促进承诺的元素。"><a href="#Scrum框架包括有助于促进承诺的元素。" class="headerlink" title="Scrum框架包括有助于促进承诺的元素。"></a>Scrum框架包括有助于促进承诺的元素。</h2><ul><li>每个Scrum角色都有明确的责任，这是一种承诺。<br>1.产品经理（Product Owner）通过做出最佳决策来优化产品的价值，而不是简单地试图取悦每一个利益相关者，以此来证明自己的承诺。<br>2.开发团队通过创建一个符合他们“完成”定义的增量来展示他们的承诺，而不是几乎完成的事情。<br>3.Scrum Master通过维护Scrum框架来展示承诺，这意味着我们不会在压力下扩展Sprint或其他时间框来完成任务。Scrum Master通过消除Scrum团队无法解决的障碍来展示承诺，而不是容忍组织的现状。</li><li>在Sprint结束时交付一个“完成”增量可以促进对质量和持续改进的承诺。</li><li>产品待办事项清单能够保证透明度。涉众可以看到产品和当前工单中当前计划的内容。</li><li>Sprint Backlog使我们能够致力于提高进度的透明度。开发团队拥有Sprint Backlog，它总是根据我们所学到的来反映我们当前的进度。</li><li>Scrum每日站会是开发团队展示对彼此承诺的机会。他们合作检查他们的进展并调整他们的计划。它们决定了如何才能最好地协同工作来实现Sprint目标。</li><li>Sprint回顾会促进团队对持续改进的承诺。我们检查我们的流程、工具和交互，确定并致力于可操作的改进。</li></ul><p>这只是几个例子，说明Scrum的“承诺”如何在Scrum Team内部实现，以帮助他们最大化Scrum的好处。还有很多。团队需要不断地和协作地精炼“承诺”对他们意味着什么，以便真正最大化Scrum。</p><h1 id="Scrum-Values-Respect-Part-5-of-5"><a href="#Scrum-Values-Respect-Part-5-of-5" class="headerlink" title="Scrum Values: Respect (Part 5 of 5)"></a>Scrum Values: Respect (Part 5 of 5)</h1><p><i style="color:#f63;">Respect（尊重）：Scrum团队成员相互尊重，认为自己是有能力、独立的人。</i><br>尊重对于解决复杂问题和发展高绩效团队至关重要。这似乎是显而易见的，所以我将与大家分享Scrum中尊重价值的一些更微妙的例子。</p><h2 id="尊重有助于经验主义和团队合作。"><a href="#尊重有助于经验主义和团队合作。" class="headerlink" title="尊重有助于经验主义和团队合作。"></a>尊重有助于经验主义和团队合作。</h2><ul><li>如果我们尊重人们天生的足智多谋、富有创造力和能够合作解决复杂问题的能力，那么我们就赋予了自组织团队权力并使之成为可能。</li><li>通过尊重人们不同的背景、经验和技能范围，团队能够以创造性的方式有效地解决复杂的问题。</li><li>当我们尊重人们是由自主、掌握和目标所激励的时候，我们就创造了一个能吸引人们的环境，使团队变得比他们的部分总和还要强大。</li><li>如果我们尊重人们在考虑到他们当时所知道的情况和他们目前的资源的情况下正在尽最大努力，我们就能实现透明度。我们可以根据所学改变方向。</li><li>当我们表现出对他人的尊重，并假定他们有良好的意愿时，我们可以进行艰难的对话，帮助我们找出解决冲突的方法，并作为一个团队变得更强大。</li><li>当尊重所有的意见和观点时，我们可以确保每个人都有机会被倾听。当我们感觉自己被听到时，即使这个决定不是我们的偏好，也有可能完全支持团队的决定。</li></ul><h2 id="Scrum框架包括有助于促进尊重的元素。"><a href="#Scrum框架包括有助于促进尊重的元素。" class="headerlink" title="Scrum框架包括有助于促进尊重的元素。"></a>Scrum框架包括有助于促进尊重的元素。</h2><ul><li>整个Scrum团队参加Sprint计划、Sprint回顾和Sprint回顾。这促进了对每个角色、责任和不同观点的尊重。</li><li>开发团队是跨职能的，这意味着作为一个整体，它拥有交付“完成”产品增量所需的所有技能。这促进了对每个人的经验、技能和想法的尊重。这也促进了学习和成长。</li><li>Sprint Backlog归开发团队所有。因为他们是做这项工作的人，所以他们决定在一次冲刺中能做多少以及如何做这项工作。这表明了对他们的知识和技能的尊重，以及对以可持续的速度工作的尊重。</li><li>通过在Sprint审查中只审查“完成”的产品，我们为真正的进展带来了透明度。这表明了对我们利益相关者的尊重。</li><li>产品所有者寻求利益相关者的意见，与之合作，并为其设定现实的期望。这是对利益相关者的又一次尊重。</li><li>Scrum Master关注的是Scrum团队的健康和Scrum的有效使用。拥有一个专注于教学、促进和指导的角色，表明了对人和团队及其成长能力的尊重。</li><li>Scrum专注于交付价值，这表明了我们对组织的尊重，因为它不会把钱花在低价值的特性或可能永远不会使用的东西上。</li><li>在Sprint结束时有一个潜在的可释放的增量，这表明了我们对组织的尊重，因为我们没有强迫更多的投资来实现价值。它给组织提供投资决策的灵活性。</li></ul><p>这仅仅是几个例子，说明Scrum的价值如何在Scrum Team内部体现，以帮助他们最大化Scrum的好处。还有很多。团队需要不断地和协作地精炼“尊重”对他们意味着什么，以便真正最大化Scrum。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>当Scrum团队体现并践行承诺、勇气、专注、开放和尊重的价值观时，Scrum的透明、检查和适应的支柱就会活跃起来，并为每个人建立信任。Scrum团队成员在处理Scrum事件、角色和工件时学习和探索这些价值观。文章参考自<a href="https://www.scrum.org/resources/blog/wet-weekend-scrum-values" target="_blank" rel="noopener">A Wet Weekend with the Scrum Values</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/agile-scrum-values.png&quot; alt&gt;&lt;br&gt;Scrum价值观是专注、开放、勇气、承诺和尊重。它们非常重要，而且经常被误解，以至于在2016年7月被添加到Scrum指南中。原文如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Respe
      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>敏捷-Scrum三大支柱</title>
    <link href="https://addonepiece.github.io/2020/01/02/agile-scrum-pillars/"/>
    <id>https://addonepiece.github.io/2020/01/02/agile-scrum-pillars/</id>
    <published>2020-01-02T02:03:42.000Z</published>
    <updated>2020-09-14T03:32:46.296Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/images/agile-scrum-pillars2.jpeg" alt></p><h1 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h1><p>这三个支柱是在实现Scrum时驱动其他流程的动力，并解释了其中许多流程、仪式和行为背后的原因。理解这三个支柱可以在您的项目中更好地实现Scrum，也许还可以解释为什么事情是以这样的方式完成的。</p><h1 id="Scrum-理论的三大支柱"><a href="#Scrum-理论的三大支柱" class="headerlink" title="Scrum 理论的三大支柱"></a>Scrum 理论的三大支柱</h1><p>Scrum 基于经验过程控制理论，或称之为经验主义。经验主义主张知识源自实际经验以及 当前已知情况下做出的决定所获得。Scrum 采纳一种迭代、增量式的方法来优化对未来的 预测和控制风险。<br><i style="color:#f63;">透明、检视和适应</i>是经验过程控制的三大支柱，支撑起每一个经验过程的实施。<br><img src="/images/agile-scrum-pillars.jpeg" alt></p><h2 id="透明"><a href="#透明" class="headerlink" title="透明"></a>透明</h2><p>过程中的关键环节对于那些对产出负责的人必须是显而易见的。要拥有透明，就要为这些 关键环节制定统一的标准，这样所有留意这些环节的人都会对观察到的事物有统一的理 解。</p><p>例如</p><ul><li>所有参与者谈及过程时都必须使用统一的术语。</li><li>负责完成工作和检视结果增量的人必须对“完成”的定义，有一致的理解。</li></ul><h2 id="检视"><a href="#检视" class="headerlink" title="检视"></a>检视</h2><p>Scrum 的使用者必须经常检视 Scrum 的工件和完成 Sprint 目标的进展，以便发现不必要 的差异。检视不应该过于频繁而阻碍工作本身。当检视是由技能娴熟的检视者在工作中勤 勉地执行时，效果最佳。</p><h2 id="适应"><a href="#适应" class="headerlink" title="适应"></a>适应</h2><p>如果检视者发现过程中的一个或多个方面偏离可接受范围以外，并且将会导致产品不可接 受时，就必须对过程或过程化的内容加以调整。调整工作必须尽快执行如此才能最小化进 一步的偏离。</p><h2 id="三大支柱的作用"><a href="#三大支柱的作用" class="headerlink" title="三大支柱的作用"></a>三大支柱的作用</h2><p>Scrum之所以能够工作，并不是因为它有三个角色、五个事件和三个工件，而是因为它坚持迭代的、基于价值的增量交付的基本敏捷原则，通过频繁地收集客户反馈和接受变更。而Scrum的三大支柱为收集需求，发现问题，解决问题，改进问题提供支撑。这导致更快的上市时间、更好的交付可预测性、更高的客户响应能力、通过管理不断变化的优先级改变方向的能力、增强的软件质量和改进的风险管理。</p><h2 id="与用Scrum相关的推荐资源"><a href="#与用Scrum相关的推荐资源" class="headerlink" title="与用Scrum相关的推荐资源"></a>与用Scrum相关的推荐资源</h2><ul><li><a href="https://addonepiece.github.io">敏捷-Scrum 价值观 to do</a></li><li><a href="https://addonepiece.github.io">敏捷-Scrum 跨职能团队 to do</a></li><li><a href="https://addonepiece.github.io">敏捷-Scrum 自组织 todo</a></li><li><a href="https://addonepiece.github.io">敏捷-Scrum 持续改进 todo</a></li><li><a href="https://addonepiece.github.io">敏捷-Scrum 故事完成的定义todo</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/images/agile-scrum-pillars2.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h1&gt;&lt;p&gt;这三个支柱是在实现Scru
      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>重构改善即有代码设计</title>
    <link href="https://addonepiece.github.io/2019/12/24/java-restructure/"/>
    <id>https://addonepiece.github.io/2019/12/24/java-restructure/</id>
    <published>2019-12-24T07:49:23.000Z</published>
    <updated>2020-09-14T03:32:46.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>公司最近在改造一个之前做好的产品级大项目。这个项目之前是用的Spring MVC + jsp做的。现在我们要把这个项目改成 Spring boot + Spring MVC + mybatis + react的架构。改造后的项目将按照业务分成十几个微服务，使用Spring cloud进行服务治理。说是改造但为了满足进度和工期，我们后台的做法是找到对应的模块代码迁移到新的微服务中。在这个过程中我们发现了很架构，性能，编码规范等一系列问题，于是我们这支追求卓越的开发团队一致要求加强过程中对代码的重构。<br>下面我将给出一些重构切入点以便团队参考。</p><h1 id="重构前提"><a href="#重构前提" class="headerlink" title="重构前提"></a>重构前提</h1><p>重构也是有前提的。重构就是对既有代码的修改，那么即有代码肯定有他原来的业务逻辑，我们进行重构时一定要满足原来的业务逻辑。那么，我们怎么保证这一点呢？那就是为即将修改的代码建立一组可靠的测试环境。这些测试是必要的，因为尽管<i style="color:#f63;">遵循重构手法可以使我避免绝大多数引入bug的情形</i>，但我毕竟不是神，还是有可能犯错。所以我需要可靠的测试环境。</p><p>在此推荐大家阅读并参照《重构改善即有代码的设计》，《阿里巴巴Java开发手册》等书目进行重构。</p><h1 id="重构切入点"><a href="#重构切入点" class="headerlink" title="重构切入点"></a>重构切入点</h1><h2 id="移除不必要的属性设值方法"><a href="#移除不必要的属性设值方法" class="headerlink" title="移除不必要的属性设值方法"></a>移除不必要的属性设值方法</h2><p>如果你为某个字段提供了设置函数，这就暗示这个字段值可以被改变。如果你不希望在对象被创建之后此字段还有机会被改变，那就不要为它提供设值函数，同时将该字段设置为final。这样你的意图会更加清晰，并且可以排除其值被修改的可能性—-这种可能性往往是非常大的。<br><img src="/images/java-rebuild-unsetparameter.png" alt></p><h2 id="属性下放"><a href="#属性下放" class="headerlink" title="属性下放"></a>属性下放</h2><p>超类中的某个字段只被部分（而非全部）子类用到。将这个字段移到需要它的那些子类去。<br><img src="/images/java-rebuild-filedown.png" alt></p><h2 id="封装字段（Encapsulate-Field）"><a href="#封装字段（Encapsulate-Field）" class="headerlink" title="封装字段（Encapsulate Field）"></a>封装字段（Encapsulate Field）</h2><p>你的类中存在一个public字段，将它声明为private，并提供相应的访问函数。<br>面向对象的首要原则之一就是封装，或者称为“数据封装”。按此原则你绝对不应该将数据声明为private，否则其他对象就有可能访问甚至修改修改这项数据，而拥有该数据的对象却毫无感觉。<br>通过这项重构手法，你可以将数据隐藏起来，并提供相应的访问函数。但它毕竟只是第一步。如果一个类除了访问函数不能提供其他行为，它终究只是一个哑巴类。这样的类不能享受对象技术带来的好处。而你知道，浪费任何一个对象都是很不好的。实施Encapsulate Field之后，我会尝试寻找到新建访问函数的代码，看看是否可以通过简单的Move Method轻快的将它们移动到新对象中。<br><img src="/images/java-rebuild-privatefile.png" alt></p><h2 id="分解并重组过长的方法"><a href="#分解并重组过长的方法" class="headerlink" title="分解并重组过长的方法"></a>分解并重组过长的方法</h2><p>要知道，代码块越小，代码的功能就越容易管理，代码的处理和移动也就越轻松，可读性也会更强。对方法的行数进行限制也是很多编码规范中的要求。</p><p>分解并重组过长的方法三部曲：抽取方法、移动方法、使用多态。<br>目的是：对象方法责任合理分配、代码易于维护。</p><h2 id="重命名方法名"><a href="#重命名方法名" class="headerlink" title="重命名方法名"></a>重命名方法名</h2><p>函数的名称未能揭示函数的用途，则考虑对重命名方法名。<br><img src="/images/Java-rebuild-renamemethod.jpeg" alt></p><h2 id="移除未使用的参数"><a href="#移除未使用的参数" class="headerlink" title="移除未使用的参数"></a>移除未使用的参数</h2><p><img src="/images/java-rebuild-delparameter.png" alt><br>程序员可能经常添加参数，却往往不愿意去掉它们。他们打的如意算盘是：无论如何，多余的参数不会引起任何问题，而且以后还可能用上它。<br>这是恶魔的诱惑，一定要把它从脑子里赶出去！参数代表着函数所需的信息，不同的参数代表不同的意义。函数调用者必须为每一个参数操心该传什么东西进去。如果你不去掉多余参数，就是让你的每一位用户多操一份心。是很不划算的。</p><h2 id="方法下放"><a href="#方法下放" class="headerlink" title="方法下放"></a>方法下放</h2><p>超类中的某个方法只被部分（而非全部）子类用到。将这个方法移到需要它的那些子类去。<br><img src="/images/java-rebuild-methoddown.png" alt></p><h2 id="方法隐藏"><a href="#方法隐藏" class="headerlink" title="方法隐藏"></a>方法隐藏</h2><p>有一个函数，从来没有被其他任何类使用到，将这个函数设置为private。<br>重构往往促使你修改函数的可见度。</p><h2 id="简化条件语句"><a href="#简化条件语句" class="headerlink" title="简化条件语句"></a>简化条件语句</h2><p>简化条件语句（if else、switch case等），使得程序逻辑更加清楚，同时方便扩展。</p><h3 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h3><ol><li><p>合并条件语句：能合则合<br> 将多个条件合并，并以一个函数（Extract Method）的形式表示这个条件，即将复 杂逻辑判断的结果赋值给一个有意义的布尔变量名，以提高可读性。<br> 例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 伪代码如下</span><br><span class="line">if ((file.open(fileName, &quot;w&quot;) != null) &amp;&amp; (...) || (...)) &#123; ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 上面代码应该进行如下重构</span><br><span class="line">final boolean existed = (file.open(fileName, &quot;w&quot;) != null) &amp;&amp; (...) || (...); if (existed) &#123;</span><br><span class="line">... &#125;</span><br></pre></td></tr></table></figure></li><li><p>合并重复的条件执行片段<br> 重复的条件执行片段，可以提出到条件之外，根据情况提到条件之前或条件之后。</p></li><li>用守卫语句代替嵌套条件：特别条件直接return<br> 含义：守卫语句就是要么return要么抛异常的语句。<br> 用法：守卫语句通常用在一些不。寻常的条件处，表示一旦发生直接返回。守卫语句可以减少很多if - then - else的跳转，使逻辑变得清晰明了。有的时候，为了使用守卫语句，需要将已有的条件逆转，在逆转条件的时候不要使用非操作，这样不直接，非操作的条件都可以改成反向的条件。</li><li>引入Null对象：Null对象也是对象，利用多态<br> 注意：空对象一定是常量，它们的任何成分从来不发生变化。因此，我们实现空对象的时候使用单例模式。<br> 做法：主要是考虑 NullObject和isNull方法。</li></ol><h2 id="提炼超类"><a href="#提炼超类" class="headerlink" title="提炼超类"></a>提炼超类</h2><p>重复代码是系统中最糟糕的东西之一。如果你在不同地方做同一件事，一旦需要修改那些代码，你就得平白做更多的修改。</p><p>重复代码的某种形式就是：<br>两个类以相同的方式做类似的事情，或者以不同的方式做类似的事情。对象提供了一种简化这种情况的机制，那就是继承。<br>另一种选择就是Extract Class，这两种方案之间的选择就是继承和委托之间的选择。<br><img src="/images/java-rebuild-extractsuperclass.png" alt></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>万能切入点，看着不顺眼的地方。但记得前提是你有良好的编码习惯,可靠的测试环境和高覆盖率的自测。<br>重构的节奏：测试、小修改、测试、小修改、测试、小修改……正是这种节奏让重构得以快速而安全地前进。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;公司最近在改造一个之前做好的产品级大项目。这个项目之前是用的Spring MVC + jsp做的。现在我们要把这个项目改成 Spring b
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>User Stories/用户故事</title>
    <link href="https://addonepiece.github.io/2019/12/21/aigle-userStroies/"/>
    <id>https://addonepiece.github.io/2019/12/21/aigle-userStroies/</id>
    <published>2019-12-21T01:51:32.000Z</published>
    <updated>2020-09-14T03:32:46.297Z</updated>
    
    <content type="html"><![CDATA[<h1 id="User-Stories-用户故事"><a href="#User-Stories-用户故事" class="headerlink" title="User Stories/用户故事"></a>User Stories/用户故事</h1><p>下文翻译自<a href="https://www.mountaingoatsoftware.com/agile/user-stories" target="_blank" rel="noopener">Mike Cohn的博客</a></p><p><img src="/images/agile-userStories.jpeg" alt></p><p>用户故事是敏捷方法的一部分，该方法有助于将重点从编写需求转移到讨论需求。所有的敏捷用户故事都包括一个或两个书面句子，以及关于这个需求的一系列描述。</p><h2 id="什么是用户故事？"><a href="#什么是用户故事？" class="headerlink" title="什么是用户故事？"></a>什么是用户故事？</h2><p>用户故事是从需要新功能的人员（通常是系统的用户或客户）的角度出发，对功能的简短描述。它们通常遵循一个简单的模板：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">作为一个&lt;用户类型&gt;，我想要&lt;一些目标&gt;，以便&lt;一些原因&gt;。</span><br><span class="line">As a &lt; type of user &gt;, I want &lt; some goal &gt; so that &lt; some reason &gt;.</span><br></pre></td></tr></table></figure></p><p>用户故事通常写在索引卡或便签上，并排贴在墙壁或桌子上，以方便计划和讨论。因此，他们将人们的注意力从写作需求转移到讨论功需求上。实际上，这些讨论比任何书面内容都重要。</p><h2 id="可以展示一些用户故事的示例吗？"><a href="#可以展示一些用户故事的示例吗？" class="headerlink" title="可以展示一些用户故事的示例吗？"></a>可以展示一些用户故事的示例吗？</h2><p>用户故事的好处之一是可以描述各种大小的需求。我们可以编写一个用户用户来涵盖大量功能，这些大型用户故事通常被称为史诗（Epics）。这是一个桌面备份产品的史诗级用户故事（epic agile user story）的示例：</p><ul><li>作为用户，我可以备份整个硬盘。</li><li>As a user, I can backup my entire hard drive.</li></ul><p>由于史诗（epic）太大，以至于敏捷团队通常无法在一个迭代中完成，因此在进入开发之前，史诗被拆分为多个较小的用户故事。上面的史诗可以分为数十个（或可能数百个），包括以下两个：</p><ul><li>作为高级用户，我可以根据文件大小，创建日期和修改日期指定要备份的文件或文件夹。</li><li>作为用户，我可以指示不备份的文件夹，这样我的备份驱动器就不会充满不需要保存的内容。</li></ul><h2 id="如何将细节添加到用户故事？"><a href="#如何将细节添加到用户故事？" class="headerlink" title="如何将细节添加到用户故事？"></a>如何将细节添加到用户故事？</h2><p>可以通过两种方式将详细信息添加到用户故事：</p><ul><li>通过将用户故事分成多个较小的用户故事。</li><li>通过添加“满足条件”（conditions of satisfaction）。</li></ul><p>当一个相对较大的故事分为多个较小的用户故事时，自然会添加详细信息。毕竟，已经写了更多的东西。</p><p>满足的条件只是一个高层次的验收测试，在敏捷用户故事完成之后，这个测试才是真实的。考虑以下作为另一个敏捷用户故事示例：</p><p>作为市场营销副总裁，我想选择一个假期用来回顾过去广告活动的效果，以便确定有收益的活动。</p><p>通过添加以下满足条件，可以将详细信息添加到该用户故事：</p><ul><li>确保它适用于主要的零售假期：圣诞节，复活节，总统日，母亲节，父亲节，劳动节，元旦。</li><li>支持跨两个日历年的假期（无跨三个假期）。</li><li>假期可以从一个假期设置到下一个假期（例如，感恩节至圣诞节）。</li><li>假期可以设置为假期前的几天。</li></ul><h2 id="谁撰写用户故事？"><a href="#谁撰写用户故事？" class="headerlink" title="谁撰写用户故事？"></a>谁撰写用户故事？</h2><p><img src="/images/agile-us-author.png" alt><br>任何人都可以编写用户故事。确保用户故事存在于产品待办列表（product backlog）是PO的责任，但这并不意味着PO是编写它们的人。在一个好的敏捷项目过程中，您应该期望每个团队成员都编写一些用户故事。</p><p>另外，请注意，撰写用户故事的人远不如参与讨论的人重要。</p><h2 id="用户故事何时编写？"><a href="#用户故事何时编写？" class="headerlink" title="用户故事何时编写？"></a>用户故事何时编写？</h2><p>用户故事是在整个敏捷项目中编写的。通常，在敏捷项目开始时会举行一个故事写作研讨会。团队中的每个人都以创建产品待办列表（product backlog）为目标，该待办列表完整描述了在项目过程中或项目三到六个月的发布周期内要被添加的功能。</p><p>这些用户故事中肯定会出现一些史诗（Epic）级的需求。随后，史诗将被分解成较小的故事，这些故事更容易放入单个迭代中。此外，任何人都可以随时编写新故事并将其添加到产品待办列表中。</p><h2 id="用户故事可以代替需求文档吗？"><a href="#用户故事可以代替需求文档吗？" class="headerlink" title="用户故事可以代替需求文档吗？"></a>用户故事可以代替需求文档吗？</h2><p>敏捷项目，特别是Scrum项目，使用产品待办列表（product backlog），这是一个包含了要在产品或服务中开发的功能的有序列表。尽管产品待办列表项（product backlog items）可以满足团队的任何需求，但用户故事已成为产品待办列表项的最佳和最受欢迎的形式。</p><p>尽管可以将产品待办列表视为传统项目需求文档的替代品，但重要的是要记住，在讨论故事之前，敏捷用户故事的书面部分（“作为用户，我想要…”）是不完整的。</p><p>通常最好将书面部分视为实际需求的参考。用户故事可能指向描述工作流程的图表，显示如何执行计算的电子表格，或PO/团队期望的任何其他工件。</p><h2 id="与用户故事相关的推荐资源"><a href="#与用户故事相关的推荐资源" class="headerlink" title="与用户故事相关的推荐资源"></a>与用户故事相关的推荐资源</h2><ul><li><a href="https://www.mountaingoatsoftware.com/blog/advantages-of-the-as-a-user-i-want-user-story-template" target="_blank" rel="noopener">“作为用户，我想要”用户故事模板的优点。</a></li><li><a href="https://www.mountaingoatsoftware.com/blog/a-sample-format-for-a-spreadsheet-based-product-backlog" target="_blank" rel="noopener">基于电子表格的产品待办列表的样本格式</a></li><li><a href="https://www.mountaingoatsoftware.com/articles/advantages-of-user-stories-for-requirements" target="_blank" rel="noopener">用户故事对需求的优势</a></li><li><a href="https://www.mountaingoatsoftware.com/blog/non-functional-requirements-as-user-stories" target="_blank" rel="noopener">非功能需求作为用户故事</a></li><li><a href="https://www.mountaingoatsoftware.com/presentations/introduction-to-user-stories" target="_blank" rel="noopener">用户故事简介</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;User-Stories-用户故事&quot;&gt;&lt;a href=&quot;#User-Stories-用户故事&quot; class=&quot;headerlink&quot; title=&quot;User Stories/用户故事&quot;&gt;&lt;/a&gt;User Stories/用户故事&lt;/h1&gt;&lt;p&gt;下文翻译自&lt;a hr
      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>Scrummaster保护团队是把双刃剑。</title>
    <link href="https://addonepiece.github.io/2019/12/15/agile-protectTeam/"/>
    <id>https://addonepiece.github.io/2019/12/15/agile-protectTeam/</id>
    <published>2019-12-15T07:50:08.000Z</published>
    <updated>2020-09-14T03:32:46.296Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、【翻译】Scrummaster保护团队是把双刃剑。"><a href="#一、【翻译】Scrummaster保护团队是把双刃剑。" class="headerlink" title="一、【翻译】Scrummaster保护团队是把双刃剑。"></a>一、【翻译】Scrummaster保护团队是把双刃剑。</h1><h2 id="下文翻译自Mike-Cohn的博客"><a href="#下文翻译自Mike-Cohn的博客" class="headerlink" title="下文翻译自Mike Cohn的博客"></a>下文翻译自<a href="https://www.mountaingoatsoftware.com/blog/protecting-the-team-cuts-both-ways" target="_blank" rel="noopener">Mike Cohn的博客</a></h2><p>ScrumMaster的职责之一是保护团队，这是公认的Scrum格言。通常的例子是ScrumMaster必须保护团队不受过于激进的产品经理的影响。这个例子没有什么错，许多团队确实需要得到保护，不受产品经理的影响，因为他们对更多功能的渴望会促使团队在质量方面走捷径。</p><p>然而，一个好的ScrumMaster也可以保护团队不受一个更有害的问题的影响：自满。在Scrum实现了一些简单的、早期的改进之后，一些团队变得自满了。他们不再寻求进一步的改进。这取决于团队的ScrumMaster能否保护他们不受这种自满情绪的影响。</p><p>因此，一个好的ScrumMaster有时不得不站出来面对一个咄咄逼人的产品经理，并说：“现在不是让这个团队更加努力的时候。他们正在尽可能地努力工作，如果再施加压力，他们很可能会变得马虎。我给一个好的ScrumMaster的建议是：要能掌握团队状态，并知道是时候该干什么了，比如团队该休整了,团队已经准备好了,团队能够做什么,团队是时候可以寻求突破了等。ScrumMaster应该保护团队不受产品经理的影响并且不自满。</p><h2 id="直言不讳，表达你的观点？"><a href="#直言不讳，表达你的观点？" class="headerlink" title="直言不讳，表达你的观点？"></a>直言不讳，表达你的观点？</h2><p>有些地方可能翻译的不好，你可以留言纠正或是表达你的恶观点。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、【翻译】Scrummaster保护团队是把双刃剑。&quot;&gt;&lt;a href=&quot;#一、【翻译】Scrummaster保护团队是把双刃剑。&quot; class=&quot;headerlink&quot; title=&quot;一、【翻译】Scrummaster保护团队是把双刃剑。&quot;&gt;&lt;/a&gt;一、【翻译
      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>【翻译】敏捷管理过程框架Scrum</title>
    <link href="https://addonepiece.github.io/2019/12/14/agile-scrum/"/>
    <id>https://addonepiece.github.io/2019/12/14/agile-scrum/</id>
    <published>2019-12-14T07:39:39.000Z</published>
    <updated>2020-09-14T03:32:46.297Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【翻译】敏捷管理过程框架Scrum"><a href="#【翻译】敏捷管理过程框架Scrum" class="headerlink" title="【翻译】敏捷管理过程框架Scrum"></a>【翻译】敏捷管理过程框架Scrum</h1><p>文章翻译自<a href="https://www.mountaingoatsoftware.com/agile/scrum" target="_blank" rel="noopener">Mike Cohn的博客</a><br><img src="/images/agile-scrum.png" alt><br>Scrum是一种敏捷的项目管理方式，通常用于软件开发项目。使用Scrum进行敏捷软件开发通常被视为一种方法论；但与其将Scrum视为方法论，不如将其视为管理过程的框架。</p><h2 id="什么是Scrum？"><a href="#什么是Scrum？" class="headerlink" title="什么是Scrum？"></a>什么是Scrum？</h2><p>在敏捷Scrum世界中，与其提供关于如何在项目中完成所有事情的完整、详细的描述，还不如将其中的大部分留给Scrum软件开发团队。这是因为团队将最清楚如何解决他们提出的问题。</p><p>这就是为什么在Scrum开发中，例如，Sprint计划会议以期望的结果（对下一个冲刺中要开发的一组特征的承诺）来代替，而不是在大多数方法学中提供的一组入口标准、任务定义、验证标准、退出标准（ETVX文章末尾有解释说明）等等。</p><p>Scrum依赖于一个自组织、跨职能的团队。scrum团队是自组织的，因为没有一个整体的团队领导来决定哪个人将执行哪个任务或者如何解决一个问题。这些问题是由整个团队决定的。<br><img src="/images/scrum-team.png" alt><br>在Scrum中，团队是跨职能的，这意味着每个人都需要从一个想法到实现一个特性。</p><p>在敏捷开发中，Scrum团队由两个特定的角色支持。第一个是ScrumMaster，他可以被认为是团队的教练，帮助团队成员使用Scrum流程在最高级别上执行任务。</p><p>产品所有者（product owner，PO）在国内通常叫做产品经理，是Scrum软件开发中的另一个角色，代表业务、客户或用户，并指导团队构建正确的产品。</p><h2 id="Scrum开发：涉及到什么？"><a href="#Scrum开发：涉及到什么？" class="headerlink" title="Scrum开发：涉及到什么？"></a>Scrum开发：涉及到什么？</h2><p>Scrum模型建议项目通过一系列的sprint进行。根据敏捷方法，sprint的时间限制不超过一个月，通常是两周。</p><p>Scrum方法论提倡在sprint开始时召开计划会议，在会议上，团队成员计算出他们可以提交多少<a href="https://addonepiece.github.io/2019/12/21/aigle-userStroies/">用户故事/User Storie</a>，然后创建sprint backlog——sprint期间要执行的任务列表。</p><p>在敏捷Scrum冲刺过程中，Scrum团队从idea到编码和测试的功能都是<a href="https://www.jianshu.com/p/20065cd7d976" target="_blank" rel="noopener">特性/Features</a>的一小部分。最后，这些特性完成了，意味着编码、测试并集成到不断发展的产品或系统中。</p><p><img src="/images/agile-EpicFeatureStory.png" alt></p><p>在sprint的每一天，所有团队成员都应该参加Scrum的站会，包括ScrumMaster和PO（产品经理）。会议时间限制在15分钟以内。在此期间，团队成员分享他们在前一天所做的工作，并将在这一天工作，并记录和核对过程遇到的问题障碍和风险。Scrum模型将每日站会视为一种同步团队成员sprint工作的方式。</p><p>在sprint结束时，团队进行sprint评审，在此期间，团队向PO或希望提供反馈以影响下一次sprint的任何其他干系人演示新功能。Scrum软件开发中的这个反馈循环可能会导致新交付功能的更改，也可能会导致修改或向产品backlog添加项。</p><p>Scrum项目管理的另一个活动是在每个sprint结束时的sprint回顾。整个团队都参加了这次会议，包括ScrumMaster和PO。回顾会是一个反思已结束的sprint并确定改进项的机会。</p><h2 id="Scrum过程：主要工件"><a href="#Scrum过程：主要工件" class="headerlink" title="Scrum过程：主要工件"></a>Scrum过程：主要工件</h2><p>Scrum开发中的主要工件当然是产品本身。Scrum模型期望团队在每个Scrum sprint结束时将产品或系统带到一个潜在的可交付状态。</p><p>产品backlog是Scrum的另一个工件。这是要添加到产品中的功能的完整列表。PO优先处理积压工作，这样团队总是首先处理最有价值的特性。</p><p>使用Scrum方法创建产品backlog的最流行和最成功的方法是用用户故事填充它，用户故事是从用户或客户的角度描述功能的简短描述。</p><p>在Scrum项目管理中，在sprint的第一天和计划会议期间，团队成员创建sprint backlog。sprint backlog可以看作是团队的sprint待办事项列表，而产品backlog则是要构建的特性列表（以用户故事的形式编写）。</p><p>sprint backlog是团队需要执行的任务列表，显示在sprint期间交付的功能。</p><p>Scrum敏捷方法产生的其他工件是sprint burndown图表和release burndown图表。Burndown图表即燃尽图显示了sprint或release中剩余的工作量，是Scrum软件开发中的一个有效工具，用于确定sprint或release是否按计划在预期日期完成所有计划工作。</p><h2 id="敏捷Scrum项目：主要角色"><a href="#敏捷Scrum项目：主要角色" class="headerlink" title="敏捷Scrum项目：主要角色"></a>敏捷Scrum项目：主要角色</h2><p>即使你是Scrum新手，你也可能听说过ScrumMaster这个角色。ScrumMaster是团队的教练，帮助Scrum实践者达到最高的绩效水平。</p><p>在Scrum过程中，ScrumMaster在许多方面与传统的项目经理不同，包括这个角色不向团队提供日常指导，也不向个人分配任务。</p><p>一个好的ScrumMaster可以保护团队不受外界干扰，让团队成员在冲刺过程中疯狂地专注于他们选择的目标。</p><p>当ScrumMaster专注于帮助团队尽其所能做到最好时，PO会努力引导团队达到正确的目标。PO通过创建一个令人信服的产品远景，然后通过产品backlog将该远景传达给团队来实现这一点。</p><p>PO（产品经理）负责对Scrum开发期间的待办列表的优先级进行排序，以保证系统的构成，被其用户、开发团队如期望的被了解。<br>上面一句话原文是这样的，感觉比较难翻译。The product owner is responsible for prioritizing the backlog during Scrum development, to ensure it’s up to par as more is learned about the system being built, its users, the team and so on.<br>我请教几位敏捷大神，给出的翻译如下，贴出来供大家参考。<br>在Scrum开发里，PO负责待办列表的优先级排序，以建立对系统，用户群体以及团队等问题的共识基础。</p><p>Scrum项目管理的第三个也是最后一个角色是Scrum团队本身。虽然在Scrum中，个人可能以不同的职称加入团队，但这些职称并不重要。Scrum方法论指出，每个人都尽其所能地为完成每个sprint的工作做出贡献。</p><p>这并不意味着测试人员将被期望重新构建系统；在采用敏捷Scrum模型之前，个人将把大部分（有时是全部）时间花在他们工作的任何规程上。但是，在Scrum中，人们希望个人能够超越他们喜欢的学科，只要这样做是为了团队的利益。</p><p>在敏捷方法论中，考虑这三个角色相互关联的一种方式是作为一辆赛车。</p><p>Scrum团队就是汽车本身，随时准备沿着它所指的任何方向前进。PO是司机，确保汽车总是朝着正确的方向行驶。ScrumMaster是主要的机械师，它能使汽车保持良好的调教和最佳性能。</p><h2 id="ETVX补充说明"><a href="#ETVX补充说明" class="headerlink" title="ETVX补充说明"></a>ETVX补充说明</h2><p>ETVX（Entry / Task / Verification / eXit)模式。<br>IBM公司于80年代提出一个结构化的描述架构-ETVX ( Entry / Task / Verification / eXit )模式来叙述整个软体发展的生命周期模式与每个阶段相对应的作业活动，让研读的人员能够非常清楚整个专案的软体发展架构。<br>ETVX模式可以说是以质量为基础的角度来建立流程和活动的模式，它将PDCA循环的思路直接融入到了软件项目计划和软件开发生命周期模型中。在CMMI的标准体系的建立中，针对高端流程图到各个PA域，都可以借鉴ETVX模式的方法来进行各种规程的建立。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;【翻译】敏捷管理过程框架Scrum&quot;&gt;&lt;a href=&quot;#【翻译】敏捷管理过程框架Scrum&quot; class=&quot;headerlink&quot; title=&quot;【翻译】敏捷管理过程框架Scrum&quot;&gt;&lt;/a&gt;【翻译】敏捷管理过程框架Scrum&lt;/h1&gt;&lt;p&gt;文章翻译自&lt;a hr
      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>【翻译】敏捷中的Scrum Master</title>
    <link href="https://addonepiece.github.io/2019/12/14/agile-scrum-master/"/>
    <id>https://addonepiece.github.io/2019/12/14/agile-scrum-master/</id>
    <published>2019-12-14T01:00:15.000Z</published>
    <updated>2020-09-14T03:32:46.296Z</updated>
    
    <content type="html"><![CDATA[<p>公司在2018年年初开始推行敏捷，在公司高层领导的大力支持下我们开展了敏捷转型。我有幸参与和见证了公司敏捷转型的全过程。在我们的敏捷团队中我是Scrum Master的角色。为了能更好的胜任SM的角色，也为了能够更好的为公司敏捷转型尽一分力，我一直都在努力地做好本职工作并不断地学习敏捷知识。在这期间我曾多次问自己什么是Scrum Master，只有你知道什么是Scrum Master你才能更好的去成为Scrum Master。<br>那么，什么是Scrum Master？希望大家能在下面这篇翻文中找到答案。</p><h1 id="一、【翻译】什么是Scrum-Master。"><a href="#一、【翻译】什么是Scrum-Master。" class="headerlink" title="一、【翻译】什么是Scrum Master。"></a>一、【翻译】什么是Scrum Master。</h1><h2 id="下文翻译自Mike-Cohn的博客"><a href="#下文翻译自Mike-Cohn的博客" class="headerlink" title="下文翻译自Mike Cohn的博客"></a>下文翻译自<a href="http://sass-lang.com/documentation/file.SASS_REFERENCE.html" target="_blank" rel="noopener">Mike Cohn的博客</a></h2><p>什么是Scrum Master？ScrumMaster负责确保Scrum团队遵循<a href="https://addonepiece.github.io/2019/12/14/agile-scrum/">Scrum</a>的价值观和实践。ScrumMaster通常被认为是团队的教练，帮助团队尽可能地做好工作。ScrumMaster也可以被看作是团队的过程所有者，它与项目的关键干系人product owner（称为产品所有者）建立了一种平衡。</p><p>ScrumMaster尽一切可能帮助团队在最高水平上表现。这包括消除任何阻碍进度的因素，促进会议的召开，以及与产品负责人合作以确保产品待办事项处于良好状态并为下一个sprint做好准备。ScrumMaster角色通常由前项目经理或技术团队领导担任，但可以是任何人。<br>ScrumMaster也经常被视为团队的保护者。最常见的例子是ScrumMaster通过确保团队不会由于来自过分激进的产品所有者的压力而过度承诺在sprint期间能够实现的目标来保护团队。然而，一个好的ScrumMaster也能保持团队不<a href="http://localhost:4000/2019/12/15/agile-protectTeam/" target="_blank" rel="noopener">自满</a>。</p><p><img src="/images/agile-scrum-master.jpeg" alt></p><p>什么是Scrum Master角色，它是如何融入到项目中的？许多新加入ScrumMaster角色的人都在与ScrumMaster明显的矛盾斗争，ScrumMaster既是团队的服务型领导，又是没有权力的人。</p><p>当我们意识到尽管ScrumMaster无权控制Scrum团队成员，但ScrumMaster确实有权控制这个过程时，表面上的矛盾就消失了。尽管ScrumMaster可能不能说“你被解雇了”，但ScrumMaster可以说，“我决定下个月我们要尝试两周的冲刺。”</p><p>ScrumMaster帮助团队使用Scrum。把ScrumMaster的帮助想象成一个私人教练，他帮助你坚持锻炼方案，以正确的形式进行所有的锻炼。一个好的教练将提供动力，同时确保你不会通过跳过一个艰苦的锻炼来作弊。然而，教练的权限是有限的。</p><p>教练不能强迫你做你不想做的运动。相反，教练会提醒你你的目标以及你选择如何实现这些目标。如果教练有权，则由客户授予。scrummaster是一样的：他们有权限，但是这个权限是由团队授予的。</p><p>ScrumMaster可以对团队说，“听着，我们应该在每个sprint结束时交付潜在的可交付软件。我们这次没有那样做。我们能做些什么来确保我们在下一次冲刺中做得更好？“这是ScrumMaster对流程行使权限；如果团队未能交付可能交付的东西，那么流程就出了问题。</p><p>但是由于ScrumMaster的权限是在对流程流程的控制内，所以同一个ScrumMaster不应该说，“因为我们在最后一个sprint中未能交付一些可能可以交付的东西，所以我希望在提交所有代码之前要让托德（人名）进行review（检查）。”让托德review代码可能是一个好主意，但是这个决定不是ScrumMaster的权限。这样做超出了流程的权限，并干涉了团队的工作方式。</p><p>由于权限仅限于确保团队遵循流程，ScrumMaster的角色可能比典型项目经理的角色更难做。项目经理通常可以这么讲，那就是“就按我说的做”。而ScrumMaster可以这样说的场景是有限的，并且只限于确保Scrum得到遵循。</p><p>阅读更多关于<a href="https://www.mountaingoatsoftware.com/agile/scrum/roles/scrummaster/requirements" target="_blank" rel="noopener">ScrumMaster相关</a>的信息。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;公司在2018年年初开始推行敏捷，在公司高层领导的大力支持下我们开展了敏捷转型。我有幸参与和见证了公司敏捷转型的全过程。在我们的敏捷团队中我是Scrum Master的角色。为了能更好的胜任SM的角色，也为了能够更好的为公司敏捷转型尽一分力，我一直都在努力地做好本职工作并不
      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>Java建造者模式解读</title>
    <link href="https://addonepiece.github.io/2019/12/13/Java-pattern-builder/"/>
    <id>https://addonepiece.github.io/2019/12/13/Java-pattern-builder/</id>
    <published>2019-12-13T07:34:28.000Z</published>
    <updated>2020-09-14T03:32:46.296Z</updated>
    
    <content type="html"><![CDATA[<p>Builder模式是代码编写过程中经常会用到的一类设计模式。最近重读了《Effective Java》和《设计模式》的builder章节，同时也读了其他人对于builder模式的理解和应用，在此记录我自己对Builder模式的一些理解。</p><h1 id="一、意图"><a href="#一、意图" class="headerlink" title="一、意图"></a>一、意图</h1><p>将一个复杂对象的构建与它的表示分离，使得同样的构建过程可以创建不同的表示。</p><h1 id="二、场景"><a href="#二、场景" class="headerlink" title="二、场景"></a>二、场景</h1><p>1.当创建复杂对象的算法应该独立于该对象的组成部分以及它们的装配方式时。<br>2.当构造过程必须允许被构造的对象有不同的表示时。</p><h1 id="三、实例"><a href="#三、实例" class="headerlink" title="三、实例"></a>三、实例</h1><p>遇到多个构造器参数时要考虑用构建器。静态工厂和构造器有个共同的局限性：它们都不能很好地扩展到大量的可选参数。<br>考虑这样的一个场景：用一个类表示包装食品外面显示的营养成分标签。这些标签中有几个域是必需的：每份的含量、每罐的含量以及每份的卡路里，还有超过20个可选域:总脂肪量、饱和脂肪量、转化脂肪、胆固醇、钠等等。<br>程序员一向习惯采用重叠构造器模式，在这种模式下，你提供第一个只有必要参数的构造器，第二个构造器有一个可选参数，第三个有两个可选参数，以此类推，最后一个构造器包含所有可选参数。重叠构造器模式可行，但是当有许多参数的时候，客户端代码会很难编写，并且仍然难以阅读。一长串类型相同的参数会导致一些微妙的错误。如果客户端不小心颠倒了其中两个参数的顺序，编译器也不会出错，但是程序在运行时会出现错误的行为。</p><p>下面是Builder模式的代码:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IBuilder</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">build</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NutritionFacts</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> calories;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> fat;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> sodium;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> carbohydrate;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">NutritionFacts</span><span class="params">(<span class="keyword">final</span> Builder builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.servingSize = builder.servingSize;</span><br><span class="line">        <span class="keyword">this</span>.servings = builder.servings;</span><br><span class="line">        <span class="keyword">this</span>.calories = builder.calories;</span><br><span class="line">        <span class="keyword">this</span>.fat = builder.fat;</span><br><span class="line">        <span class="keyword">this</span>.sodium = builder.sodium;</span><br><span class="line">        <span class="keyword">this</span>.carbohydrate = builder.carbohydrate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"NutritionFacts&#123;"</span> + <span class="string">"servingSize="</span> + <span class="keyword">this</span>.servingSize + <span class="string">", servings="</span> + <span class="keyword">this</span>.servings + <span class="string">", calories="</span></span><br><span class="line">                + <span class="keyword">this</span>.calories + <span class="string">", fat="</span> + <span class="keyword">this</span>.fat + <span class="string">", sodium="</span> + <span class="keyword">this</span>.sodium + <span class="string">", carbohydrate="</span></span><br><span class="line">                + <span class="keyword">this</span>.carbohydrate + <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> <span class="keyword">implements</span> <span class="title">IBuilder</span>&lt;<span class="title">NutritionFacts</span>&gt; </span>&#123;</span><br><span class="line">        <span class="comment">// Required parameters</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servingSize;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> servings;</span><br><span class="line">        <span class="comment">// Optional parameters - initialized to default values</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> calories = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> fat = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> sodium = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> carbohydrate = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Builder</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> servingSize, <span class="keyword">final</span> <span class="keyword">int</span> servings)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.servingSize = servingSize;</span><br><span class="line">            <span class="keyword">this</span>.servings = servings;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">calories</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.calories = val;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">fat</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.fat = val;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">carbohydrate</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.carbohydrate = val;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">sodium</span><span class="params">(<span class="keyword">final</span> <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.sodium = val;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> NutritionFacts <span class="title">build</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NutritionFacts(<span class="keyword">this</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NutritionFacts是不可变的。builder的setter方法返回builder本身，以便可以把调用链接起来。下面就是客户端代码:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BuilderDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> IBuilder&lt;NutritionFacts&gt; builder = <span class="keyword">new</span> NutritionFacts.Builder(<span class="number">5</span>, <span class="number">3</span>).calories(<span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">final</span> NutritionFacts nutritionFacts = createNutritionFacts(builder);</span><br><span class="line">        System.out.println(nutritionFacts);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> NutritionFacts <span class="title">createNutritionFacts</span><span class="params">(<span class="keyword">final</span> IBuilder&lt;NutritionFacts&gt; builder)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> builder.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样的客户端代码很容易编写，更重要的是，易于阅读。</p><h1 id="四、个人理解"><a href="#四、个人理解" class="headerlink" title="四、个人理解"></a>四、个人理解</h1><h2 id="builder模式要点"><a href="#builder模式要点" class="headerlink" title="builder模式要点"></a>builder模式要点</h2><p>1.用于分步骤构建一个复杂的对象。builder提供几种固定的步骤接口和获取最终对象接口，这些步骤接口的调用次数、调用顺序由Director决定，最终通过获取最终对象接口得到最终产品。</p><p>2.支持多种构建算法。不同构件算法可以创建出不同的表现。Builder模式封装了构建算法，调用者无需知道具体的构建算法细节。</p><p>3.拥有稳定的部件类型及部件装配方式。builder接受的组件类型和组件装配方式稳定不变，构建算法和它的组件互不影响。</p><h2 id="builder模式优点"><a href="#builder模式优点" class="headerlink" title="builder模式优点"></a>builder模式优点</h2><p>1.将一个“复杂对象的构建算法”与它的“部件及组装方式”分离，使得构建算法可以独立应对变化；</p><p>2.不同构件算法可以复用相同的部件和部件组装方式；</p><p>3.不同构件算法，可以生成不同表现的对象；</p><p>4.“部件类型“及其”组装方式“相对稳定，不随着构建算法改变而改变。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>理解builder模式重点在两个词，“创建对象”和“一变一不变”。<br>“创建对象”指明builder模式的最终目的为创建对象，是大前提。“一变一不变”即构建算法多变，但是部件和部件装配方式稳定不变，既可以用于描述builder模式使用场景，也是builder模式的特点。<br>案例代码是可以运行的，自己敲一敲。至少要考下来放到ide中运行下，分析下来帮助你理解和吸收。</p><p>参考：<br>1.《大话设计模式》<br>2.《Effective Java 第二版》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Builder模式是代码编写过程中经常会用到的一类设计模式。最近重读了《Effective Java》和《设计模式》的builder章节，同时也读了其他人对于builder模式的理解和应用，在此记录我自己对Builder模式的一些理解。&lt;/p&gt;
&lt;h1 id=&quot;一、意图&quot;&gt;
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>敏捷团队建设之守破离</title>
    <link href="https://addonepiece.github.io/2019/12/12/agile-shoupoli/"/>
    <id>https://addonepiece.github.io/2019/12/12/agile-shoupoli/</id>
    <published>2019-12-12T12:38:03.000Z</published>
    <updated>2020-09-14T03:32:46.297Z</updated>
    
    <content type="html"><![CDATA[<p>敬请期待</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;敬请期待&lt;/p&gt;

      
    
    </summary>
    
      <category term="敏捷" scheme="https://addonepiece.github.io/categories/%E6%95%8F%E6%8D%B7/"/>
    
    
      <category term="敏捷/Agile" scheme="https://addonepiece.github.io/tags/%E6%95%8F%E6%8D%B7-Agile/"/>
    
  </entry>
  
  <entry>
    <title>基于Vue、ElementUI的换肤解决方案</title>
    <link href="https://addonepiece.github.io/2019/07/01/vue-element-change-theme/"/>
    <id>https://addonepiece.github.io/2019/07/01/vue-element-change-theme/</id>
    <published>2019-06-30T19:25:24.000Z</published>
    <updated>2020-09-14T03:32:46.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>换肤这个功能，不能算是很常见，但是也是有需求的，所以这里提供几种前端的换肤解决方案，供大家参考。</p><p>本文将介绍几种基于Vue、Element-UI的换肤实现方案，力争通俗易懂，易上手，希望大家喜欢~</p><a id="more"></a><h1 id="方案一、使用全局的样式覆盖（前端通用）"><a href="#方案一、使用全局的样式覆盖（前端通用）" class="headerlink" title="方案一、使用全局的样式覆盖（前端通用）"></a>方案一、使用全局的样式覆盖（前端通用）</h1><blockquote><p>这个应该是最常见，也是大家最容易想到的，也是最容易实现的一种方案。</p></blockquote><p>我们单独写一份样式表（css 文件 <a href="https://github.com/addonepiece/vue-cms/blob/master/src/assets/custom-theme/science-blue.css" target="_blank" rel="noopener">深空蓝.css</a>），以一个特定的命名开头（比如 <code>.blue-theme</code>），然后在这个 css 文件中，完成我们第二套皮肤的样式代码，然后当我们点击换肤的时候，就将 <code>blue-theme</code> 这个 <code>class</code> 添加到 <code>body</code> 标签中，那么这个时候，我们的换肤效果就出来了。</p><p><img src="https://img-blog.csdnimg.cn/20190904142928156.gif" alt="在这里插入图片描述"></p><p>当我们这里点击深空蓝的时候，将 class <code>science-blue</code> 添加到 <code>body</code> 上，点击青铜绿的时候，就将 <code>science-blue</code> 去掉，因为我们默认的就是青铜绿。</p><h1 id="方案二、自定义自己的Element-ui配色"><a href="#方案二、自定义自己的Element-ui配色" class="headerlink" title="方案二、自定义自己的Element-ui配色"></a>方案二、自定义自己的Element-ui配色</h1><p>默认的 Element 的配色是：</p><font color="#409EFF" size="4"><strong>蓝 色</strong></font><br><font color="#67C23A" size="4"><strong>绿 色</strong></font><br><font color="#E6A23C" size="4"><strong>橙 色</strong></font><br><font color="#F56C6C" size="4"><strong>红 色</strong></font><br><font color="#909399" size="4"><strong>灰 色</strong></font><p>Element-UI 还提供了了一个自定义的 <a href="https://github.com/ElementUI/element-theme" target="_blank" rel="noopener">配色工具</a> 以及 <a href="https://element.eleme.cn/#/zh-CN/theme/preview" target="_blank" rel="noopener">配置页面</a>，通过这个工具或者这个页面，我们可以自定义上面五种主色调以及辅助色。</p><p><img src="https://img-blog.csdnimg.cn/20190831135330563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5feXVkb25n,size_16,color_FFFFFF,t_70" alt></p><p>配好以后，如果是工具就生成，如果是网页就下载。得到一个样式文件，这就是我们配置好的主题样式文件。<br><img src="https://img-blog.csdnimg.cn/2019083114454182.png" alt></p><p>保持 <code>css</code>文件与 <code>fonts</code> 目录的关系不变（ps：这点很重要），将其放入我们的项目中。（你可以将这个<code>css</code> 文件改成你喜欢的名字，比如我改成了叫：<code>theme-summer.css</code>）<br><img src="https://img-blog.csdnimg.cn/20190831144837820.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5feXVkb25n,size_16,color_FFFFFF,t_70" alt></p><p>然后在我们项目的 <code>main.js</code> 中，注释掉 <code>Element-UI</code> 的原来 css 文件引入，引入我们刚才放进项目中的 css 文件。<br><img src="https://img-blog.csdnimg.cn/2019083115045758.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5feXVkb25n,size_16,color_FFFFFF,t_70" alt><br>这个时候，项目中关于 Element-UI 的颜色，就变成了刚才我们自定义配置的颜色配色了。（<font color="#7ed321">下面是我自定义的一套颜色，你们觉得如何？</font>）</p><p><img src="https://img-blog.csdnimg.cn/20190831175858923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5feXVkb25n,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>但是，你发现没，这样只是将我们项目中的 Element-UI 的默认配色改成我们想要的；但是我们要做的是换肤功能，希望颜色是可以切换的。</strong></p><p><img src="https://img-blog.csdnimg.cn/2019083117114450.png" alt></p><p>所以，我们还是用上面的方法，给这个生成的css文件里面的每一个 <code>css</code> 样式加上一个独特的命名前缀，然后换肤的时候，就将这个 <code>class</code> 添加到 <code>body</code> 上面，如此一来，也能实现很丰富的换肤功能（因为我们可以自己配很多套好看的配色）</p><p><strong>现在摆在眼前的一个需要解决的问题是：这个 <code>css</code> 文件加命名空间怎么加？</strong><br><img src="https://img-blog.csdnimg.cn/2019083117211126.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5feXVkb25n,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>我们看一下这个工具生成的，或者 <a href="https://element.eleme.cn/#/zh-CN/theme/preview" target="_blank" rel="noopener">配置页面</a> 导出的这个 css 文件，混淆压缩的代码，手动给每一个样式外面包裹一个 class 来做命名空间是不现实的，所以这里要用到一个 <code>gulp</code> 插件 <code>gulp-css-wrap</code> ，可以帮助我们完成这个结果。</p><p>首先：<br><code>npm i gulp gulp-clean-css gulp-css-wrap -D</code></p><p>然后，编写 <code>gulpfile.js</code><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// gulpfile.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>)</span><br><span class="line"><span class="keyword">var</span> cleanCSS = <span class="built_in">require</span>(<span class="string">'gulp-clean-css'</span>)</span><br><span class="line"><span class="keyword">var</span> cssWrap = <span class="built_in">require</span>(<span class="string">'gulp-css-wrap'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> customThemeName = <span class="string">'.theme-summer'</span></span><br><span class="line"></span><br><span class="line">gulp.task(<span class="string">'default'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> gulp.src( path.resolve(<span class="string">'./index.css'</span>))</span><br><span class="line">    .pipe(cssWrap(&#123;<span class="attr">selector</span>: customThemeName&#125;))</span><br><span class="line">    .pipe(cleanCSS())</span><br><span class="line">    .pipe(gulp.dest(<span class="string">'dist'</span>))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>然后运行 <code>gulp</code></p><p>这样就得到了一个以 <code>.theme-summer</code> 为命名空间的自定义主题了。</p><p>加完以后，我们按照前面介绍的切换 <code>body</code> 元素的 <code>class</code> 的方法，就可以实现皮肤切换的功能了。</p><p><img src="https://img-blog.csdnimg.cn/20190904143459163.gif" alt></p><h1 id="方案三、快速改变网站颜色"><a href="#方案三、快速改变网站颜色" class="headerlink" title="方案三、快速改变网站颜色"></a>方案三、快速改变网站颜色</h1><p>依据 Element 官网所介绍，Element 使用 SCSS 编写，如果你的项目也使用了 SCSS，那么可以直接在项目中改变 Element 的样式变量。新建一个 <code>element-variables.scss</code> 样式文件。（温馨提示：请确保你安装了 <code>node-sass</code> 与 <code>sass-loader</code>）</p><p><code>element-variables.scss</code> 文件，这里就不贴出来了，具体可以看这里：<a href="https://github.com/addonepiece/vue-cms/blob/master/src/element-variables.scss" target="_blank" rel="noopener">element-variables.scss</a>，这个文件里面定义了很多颜色变量</p><p>这种方法使用起来是简单的，你只需将其引入<br><img src="https://img-blog.csdnimg.cn/20190831181453850.png" alt="在这里插入图片描述"><br>修改里面的颜色变量即可生效。<br><img src="https://img-blog.csdnimg.cn/20190831181844187.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NzZG5feXVkb25n,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这种方法是快捷的，修改几个颜色变量即可生效。（然后就可以部署啦~）</p><font color="red">这里有一个问题，如何在 js 中修改这个 <code>element-variables.scss</code> 文件里面的变量？如果可以实现，那么就可以实现实时动态换色了。</font><blockquote><p>补充说明： js 修改 scss 变量是有方案的，但是在我们项目中无法做到动态换颜色，为什么呢？因为我们项目中所有的 css 预编译语言（sass,less,stylus）最终都会编译成 css；也就是说，打包后的项目中只有编译后的 css 文件。那么你 js 改 scss 变量的方法在打包后的项目中是不起作用的。</p></blockquote><h1 id="方案四、实时更换主色调"><a href="#方案四、实时更换主色调" class="headerlink" title="方案四、实时更换主色调"></a>方案四、实时更换主色调</h1><font color="red">前面已经介绍了几种方法可以做到换肤，但都是在我们的限定提供的几个皮肤范围内换肤；但我们有一个需求是，弹出一个颜色选择器，然后我们选了什么颜色，页面的主色调就立马改成什么颜色。</font><p><code>ElementUI</code> 官网中有实现动态换肤，它能让用户自定义颜色值，而且展示效果也更加优雅。 我们来看看他是怎么实现的(这里引用的是官方的 <a href="https://github.com/ElemeFE/element/issues/3054" target="_blank" rel="noopener">实现解释</a>)</p><ul><li>获取当前版本的 <code>Element-UI</code> 的样式文件（在线 <code>XHR</code> 获取）</li><li>根据用户选择的主题色，生成一系列对应的颜色（比如，选择绿色，生成不同程度的浅绿，深绿…）</li><li>颜色替换（用刚刚生成的颜色来替换样式文件中的颜色）</li><li>直接在页面上加 <code>style</code> 标签，把生成的样式填进去</li></ul><font color="#1a6">我们一起来看一下技术实现细节吧，强烈建议你打开代码一起来看： <a href="https://github.com/addonepiece/vue-cms/blob/master/src/views/theme/index.vue#L167-L297" target="_blank" rel="noopener">https://github.com/addonepiece/vue-cms/blob/master/src/views/theme/index.vue#L167-L297</a>）</font><p>1、首先我们需要拿到通过 package.json 拿到 <code>element-ui</code> 的版本号，根据该版本号去请求相应的样式。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 如果没有chalk就是第一次换颜色，需要远程获取css文件，赋值给chalk</span></span><br><span class="line"><span class="comment">// 后续的换颜色操作，就不用远程获取了</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">this</span>.chalk) &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">`https://unpkg.com/element-ui@<span class="subst">$&#123;version&#125;</span>/lib/theme-chalk/index.css`</span></span><br><span class="line">    <span class="keyword">await</span> <span class="keyword">this</span>.getCSSString(url, <span class="string">'chalk'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><code>getCSSString</code> 方法是一个常用 <code>XHR</code>，用来获取远程 <code>css</code> 资源文件。</p><p>2、根据用户选择的颜色，生成相应的颜色<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传入一个颜色的HEX，得到这个颜色的深浅颜色数组</span></span><br><span class="line"><span class="comment"> * 我们知道，我们默认的主色调蓝色，在实际使用中，还需要对应的浅蓝和深蓝</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param  <span class="type">&#123;[string]]&#125;</span> </span>theme [color]</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="type">&#123;[array]&#125;</span>       </span>[对应的深浅颜色数组]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">getThemeCluster(theme) &#123;</span><br><span class="line">    <span class="comment">// 具体看代码，这里就不写了</span></span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3、颜色替换<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 更新样式 - 使用新的颜色变量替换之前的 */</span></span><br><span class="line">updateStyle(style, oldCluster, newCluster) &#123;</span><br><span class="line">  <span class="keyword">let</span> newStyle = style</span><br><span class="line">  oldCluster.forEach(<span class="function">(<span class="params">color, index</span>) =&gt;</span> &#123;</span><br><span class="line">    newStyle = newStyle.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(color, <span class="string">'ig'</span>), newCluster[index])</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> newStyle</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>4、在页面上加 <code>style</code> 标签，把生成的样式填进去<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> styleTag = <span class="built_in">document</span>.getElementById(id)</span><br><span class="line"><span class="keyword">if</span> (!styleTag) &#123;</span><br><span class="line">  styleTag = <span class="built_in">document</span>.createElement(<span class="string">'style'</span>)</span><br><span class="line">  styleTag.setAttribute(<span class="string">'id'</span>, id)</span><br><span class="line">  <span class="built_in">document</span>.head.appendChild(styleTag)</span><br><span class="line">&#125;</span><br><span class="line">styleTag.innerText = newStyle</span><br></pre></td></tr></table></figure></p><p>第一次换颜色的时候，需要创建一个 <code>style</code> 标签，添加到 <code>body</code> 中，后面的换颜色，就不用了。</p><p>OK啦，看下效果：</p><p><img src="https://img-blog.csdnimg.cn/20190904185728363.gif" alt="在这里插入图片描述"></p><p id="div-border-left-blue">【在线演示：<a href="https://addonepiece.github.io/vue-cms/index.html">vue-cms</a>】<br>【源代码：<a href="https://github.com/addonepiece/vue-cms/blob/master/src/views/theme/index.vue" target="_blank" rel="noopener">github.com/addonepiece/vue-cms</a>】<br></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;写在前面&quot;&gt;&lt;a href=&quot;#写在前面&quot; class=&quot;headerlink&quot; title=&quot;写在前面&quot;&gt;&lt;/a&gt;写在前面&lt;/h1&gt;&lt;p&gt;换肤这个功能，不能算是很常见，但是也是有需求的，所以这里提供几种前端的换肤解决方案，供大家参考。&lt;/p&gt;
&lt;p&gt;本文将介绍几种基于Vue、Element-UI的换肤实现方案，力争通俗易懂，易上手，希望大家喜欢~&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://addonepiece.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="https://addonepiece.github.io/tags/JavaScript/"/>
    
      <category term="Vue" scheme="https://addonepiece.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>【转】如何优雅处理前端异常</title>
    <link href="https://addonepiece.github.io/2019/05/01/js-exception-handing/"/>
    <id>https://addonepiece.github.io/2019/05/01/js-exception-handing/</id>
    <published>2019-04-30T19:25:24.000Z</published>
    <updated>2020-09-14T03:32:46.301Z</updated>
    
    <content type="html"><![CDATA[<p>前端一直是距离用户最近的一层，随着产品的日益完善，我们会更加注重用户体验，而前端异常却如鲠在喉，甚是烦人。</p><h1 id="一、为什么要处理异常？"><a href="#一、为什么要处理异常？" class="headerlink" title="一、为什么要处理异常？"></a>一、为什么要处理异常？</h1><p id="div-border-left-green">异常是不可控的，会影响最终的呈现结果，但是我们有充分的理由去做这样的事情。</p><p>1.增强用户体验；<br>2.远程定位问题；<br>3.未雨绸缪，及早发现问题；<br>4.无法复线问题，尤其是移动端，机型，系统都是问题；<br>5.完善的前端方案，前端监控系统；</p><a id="more"></a><p>对于 JS 而言，我们面对的仅仅只是异常，异常的出现不会直接导致 JS 引擎崩溃，最多只会使当前执行的任务终止。</p><h1 id="二、需要处理哪些异常？"><a href="#二、需要处理哪些异常？" class="headerlink" title="二、需要处理哪些异常？"></a>二、需要处理哪些异常？</h1><p>对于前端来说，我们可做的异常捕获还真不少。总结一下，大概如下：</p><ul><li>JS 语法错误、代码异常</li><li>AJAX 请求异常</li><li>静态资源加载异常</li><li>Promise 异常</li><li>Iframe 异常</li><li>跨域 Script error</li><li>崩溃和卡顿</li></ul><p id="div-border-left-yellow">下面我会针对每种具体情况来说明如何处理这些异常。</p><h1 id="三、Try-Catch-的误区"><a href="#三、Try-Catch-的误区" class="headerlink" title="三、Try-Catch 的误区"></a>三、Try-Catch 的误区</h1><p id="div-border-top-blue"><code>try-catch</code> 只能捕获到 <font color="red"><strong>同步</strong></font> 的运行时错误，对 <font color="red">语法</font> 和 <font color="red">异步</font> 错误却无能为力，捕获不到。【不能捕获XHR，AJAX的异常】</p><p>1.同步运行时错误：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> name = <span class="string">'jartto'</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(nam);</span><br><span class="line">&#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">捕获到异常： <span class="built_in">ReferenceError</span>: nam is not defined at &lt;anonymous&gt;:<span class="number">3</span>:<span class="number">15</span></span><br></pre></td></tr></table></figure></p><p>2.不能捕获到语法错误，我们修改一下代码，删掉一个单引号：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> name = <span class="string">'jartto;</span></span><br><span class="line"><span class="string">  console.log(nam);</span></span><br><span class="line"><span class="string">&#125; catch(e) &#123;</span></span><br><span class="line"><span class="string">  console.log('</span>捕获到异常：<span class="string">',e);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught <span class="built_in">SyntaxError</span>: Invalid or unexpected token</span><br></pre></td></tr></table></figure></p><blockquote><font color="#0e8a16">不过语法错误在我们开发阶段就可以看到，应该不会顺利上到线上环境吧。?</font></blockquote><p>3.异步错误<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">  setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="literal">undefined</span>.map(<span class="function"><span class="params">v</span> =&gt;</span> v);</span><br><span class="line">  &#125;, <span class="number">1000</span>)</span><br><span class="line">&#125; <span class="keyword">catch</span>(e) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>我们看看日志：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught <span class="built_in">TypeError</span>: Cannot read property <span class="string">'map'</span> <span class="keyword">of</span> <span class="literal">undefined</span> at setTimeout (<span class="xml"><span class="tag">&lt;<span class="name">anonymous</span>&gt;</span>:3:11)</span></span><br></pre></td></tr></table></figure></p><p>并没有捕获到异常，这是需要我们特别注意的地方。<font color="#b60205">【try catch 无法捕获异步异常】</font></p><h1 id="四、window-onerror-不是万能的"><a href="#四、window-onerror-不是万能的" class="headerlink" title="四、window.onerror 不是万能的"></a>四、window.onerror 不是万能的</h1><p>当 JS 运行时错误发生时，window 会触发一个 ErrorEvent 接口的 error 事件，并执行 <code>window.onerror()</code>。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;String&#125;</span>  </span>message    错误信息</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;String&#125;</span>  </span>source    出错文件</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Number&#125;</span>  </span>lineno    行号</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Number&#125;</span>  </span>colno    列号</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param <span class="type">&#123;Object&#125;</span>  </span>error  Error对象（对象）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">message, source, lineno, colno, error</span>) </span>&#123;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,&#123;message, source, lineno, colno, error&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>1.首先试试同步运行时错误<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">message, source, lineno, colno, error</span>) </span>&#123;</span><br><span class="line"><span class="comment">// message：错误信息（字符串）。</span></span><br><span class="line"><span class="comment">// source：发生错误的脚本URL（字符串）</span></span><br><span class="line"><span class="comment">// lineno：发生错误的行号（数字）</span></span><br><span class="line"><span class="comment">// colno：发生错误的列号（数字）</span></span><br><span class="line"><span class="comment">// error：Error对象（对象）</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,&#123;message, source, lineno, colno, error&#125;);</span><br><span class="line">&#125;</span><br><span class="line">Jartto;</span><br></pre></td></tr></table></figure></p><p>可以看到，我们捕获到了异常：<br><img src="/images/js-exception-handing-1.png" alt></p><p>2.再试试语法错误呢？<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">message, source, lineno, colno, error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,&#123;message, source, lineno, colno, error&#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> name = <span class="string">'Jartto</span></span><br></pre></td></tr></table></figure></p><p>控制台打印出了这样的异常：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Uncaught <span class="built_in">SyntaxError</span>: Invalid or unexpected token</span><br></pre></td></tr></table></figure></p><p id="div-border-top-red">什么，竟然没有捕获到语法错误？!!</p><p>3.怀着忐忑的心，我们最后来试试异步运行时错误：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">message, source, lineno, colno, error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,&#123;message, source, lineno, colno, error&#125;);</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  Jartto;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>控制台输出了：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">捕获到异常： &#123;<span class="attr">message</span>: <span class="string">"Uncaught ReferenceError: Jartto is not defined"</span>, </span><br><span class="line">  source: <span class="string">"http://127.0.0.1:8001/"</span>, </span><br><span class="line">  lineno: <span class="number">36</span>, <span class="attr">colno</span>: <span class="number">5</span>, </span><br><span class="line">  error: <span class="built_in">ReferenceError</span>: Jartto is not defined at setTimeout (http:<span class="comment">//127.0.0.1:8001/:36:5)&#125;</span></span><br></pre></td></tr></table></figure></p><p>4.接着，我们试试网络请求异常的情况：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">message, source, lineno, colno, error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,&#123;message, source, lineno, colno, error&#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;img src="./</span>jartto.png<span class="string">"&gt;</span></span><br></pre></td></tr></table></figure></p><p id="div-border-left-red">我们发现，不论是静态资源异常，或者接口异常，错误都无法捕获到。</p><p>补充一点：<code>window.onerror</code> 函数只有在返回 true 的时候，异常才不会向上抛出，否则即使是知道异常的发生控制台还是会显示 <code>Uncaught Error: xxxxx</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">message, source, lineno, colno, error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,&#123;message, source, lineno, colno, error&#125;);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  Jartto;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>控制台就不会再有这样的错误了：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Uncaught <span class="built_in">ReferenceError</span>: Jartto is not defined</span><br><span class="line">    at setTimeout ((index):<span class="number">36</span>)</span><br></pre></td></tr></table></figure></p><font color="#ff8f00">需要注意：</font><ul><li>onerror 最好写在所有 JS 脚本的前面，否则有可能捕获不到错误；</li><li>onerror 无法捕获语法错误；</li></ul><p id="div-border-top-red">到这里基本就清晰了：在实际的使用过程中，<code>onerror</code> 主要是来捕获预料之外的错误，而 <code>try-catch</code> 则是用来在可预见情况下监控特定的错误，两者结合使用更加高效。</p><p id="div-border-left-yellow">问题又来了，捕获不到静态资源加载异常怎么办？</p><h1 id="五、window-addEventListener"><a href="#五、window-addEventListener" class="headerlink" title="五、window.addEventListener"></a>五、window.addEventListener</h1><p>当一项资源（如图片或脚本）加载失败，加载资源的元素会触发一个 Event 接口的 error 事件，并执行该元素上的 <code>onerror()</code> 处理函数。这些 error 事件不会向上冒泡到 window ，不过（至少在 Firefox 中）能被单一的 <code>window.addEventListener</code> 捕获。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;scritp&gt;</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'error'</span>, (error) =&gt; &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>, error);</span><br><span class="line">&#125;, <span class="literal">true</span>)</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br><span class="line"><span class="regexp">&lt;img src="./</span>jartto.png<span class="string">"&gt;</span></span><br></pre></td></tr></table></figure></p><p>控制台输出：<br><img src="/images/js-exception-handing-2.png" alt></p><p>由于网络请求异常不会事件冒泡，因此必须在捕获阶段将其捕捉到才行，但是这种方式虽然可以捕捉到网络请求的异常，但是无法判断 HTTP 的状态是 404 还是其他比如 500 等等，所以还需要配合服务端日志才进行排查分析才可以。</p><font color="red">需要注意：</font><ul><li>不同浏览器下返回的 error 对象可能不同，需要注意兼容处理。</li><li>需要注意避免 addEventListener 重复监听。</li></ul><h1 id="六、Promise-Catch"><a href="#六、Promise-Catch" class="headerlink" title="六、Promise Catch"></a>六、Promise Catch</h1><p id="div-border-top-blue">在 promise 中使用 catch 可以非常方便的捕获到异步 error ，这个很简单。</p><p>没有写 catch 的 Promise 中抛出的错误无法被 onerror 或 try-catch 捕获到，所以我们务必要在 Promise 中不要忘记写 catch 处理抛出的异常。</p><p>解决方案： 为了防止有漏掉的 Promise 异常，建议在全局增加一个对 <code>unhandledrejection</code>的监听，用来全局监听 <code>Uncaught Promise Error</code>。使用方式：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"unhandledrejection"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(e);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>我们继续来尝试一下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"unhandledrejection"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  e.preventDefault()</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>, e);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">Promise</span>.reject(<span class="string">'promise error'</span>);</span><br></pre></td></tr></table></figure></p><p>可以看到如下输出：<br><img src="/images/js-exception-handing-3.png" alt></p><p>那如果对 Promise 不进行 catch 呢？<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">"unhandledrejection"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  e.preventDefault()</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>, e);</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">  reject(<span class="string">'jartto: promise error'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>嗯，事实证明，也是会被正常捕获到的。</p><p>所以，正如我们上面所说，为了防止有漏掉的 Promise 异常，建议在全局增加一个对 <code>unhandledrejection</code> 的监听，用来全局监听 <code>Uncaught Promise Error</code>。</p><p>补充一点：如果去掉控制台的异常显示，需要加上：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">event.preventDefault();</span><br></pre></td></tr></table></figure></p><h1 id="七、VUE-errorHandler"><a href="#七、VUE-errorHandler" class="headerlink" title="七、VUE errorHandler"></a>七、VUE errorHandler</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Vue.config.errorHandler = <span class="function">(<span class="params">err, vm, info</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.error(<span class="string">'通过vue errorHandler捕获的错误'</span>);</span><br><span class="line">  <span class="built_in">console</span>.error(err);</span><br><span class="line">  <span class="built_in">console</span>.error(vm);</span><br><span class="line">  <span class="built_in">console</span>.error(info);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八、React-异常捕获"><a href="#八、React-异常捕获" class="headerlink" title="八、React 异常捕获"></a>八、React 异常捕获</h1><p>React 16 提供了一个内置函数 componentDidCatch，使用它可以非常简单的获取到 react 下的错误信息<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">componentDidCatch(error, info) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(error, info);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>除此之外，我们可以了解一下：<code>error boundary</code><br>UI 的某部分引起的 JS 错误不应该破坏整个程序，为了帮 React 的使用者解决这个问题，React 16 介绍了一种关于错误边界（error boundary)的新观念。</p><p id="div-border-left-red">需要注意的是： error boundaries 并不会捕捉下面这些错误。</p><p>1.事件处理器<br>2.异步代码<br>3.服务端的渲染代码<br>4.在 error boundaries 区域内的错误</p><p>我们来举一个小例子，在下面这个 <code>componentDIdCatch(error,info)</code> 里的类会变成一个 <code>error boundary</code>：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ErrorBoundary</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span> </span>&#123;</span><br><span class="line">  <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">    <span class="keyword">super</span>(props);</span><br><span class="line">    <span class="keyword">this</span>.state = &#123; <span class="attr">hasError</span>: <span class="literal">false</span> &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  componentDidCatch(error, info) &#123;</span><br><span class="line">    <span class="comment">// Display fallback UI</span></span><br><span class="line">    <span class="keyword">this</span>.setState(&#123; <span class="attr">hasError</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">    <span class="comment">// You can also log the error to an error reporting service</span></span><br><span class="line">    logErrorToMyService(error, info);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.state.hasError) &#123;</span><br><span class="line">      <span class="comment">// You can render any custom fallback UI</span></span><br><span class="line">      <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Something went wrong.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.props.children;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后我们像使用普通组件那样使用它：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;ErrorBoundary&gt;</span><br><span class="line">  &lt;MyWidget /&gt;</span><br><span class="line">&lt;<span class="regexp">/ErrorBoundary&gt;</span></span><br></pre></td></tr></table></figure></p><p><code>componentDidCatch()</code> 方法像 JS 的 <code>catch{}</code> 模块一样工作，但是对于组件，只有 class 类型的组件<code>( class component )</code>可以成为一个 <code>error boundaries</code>。</p><p>实际上，大多数情况下我们可以在整个程序中定义一个 <code>error boundary</code>组件，之后就可以一直使用它了！</p><h1 id="九、iframe-异常"><a href="#九、iframe-异常" class="headerlink" title="九、iframe 异常"></a>九、iframe 异常</h1><p>对于 iframe 的异常捕获，我们还得借力 <code>window.onerror</code>：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onerror = <span class="function"><span class="keyword">function</span>(<span class="params">message, source, lineno, colno, error</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'捕获到异常：'</span>,&#123;message, source, lineno, colno, error&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>一个简单的例子可能如下：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe src=<span class="string">"./iframe.html"</span> frameborder=<span class="string">"0"</span>&gt;&lt;<span class="regexp">/iframe&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">  window.frames[0].onerror = function (message, source, lineno, colno, error) &#123;</span></span><br><span class="line"><span class="regexp">    console.log('捕获到 iframe 异常：',&#123;message, source, lineno, colno, error&#125;);</span></span><br><span class="line"><span class="regexp">    return true;</span></span><br><span class="line"><span class="regexp">  &#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure></p><h1 id="十、Script-error"><a href="#十、Script-error" class="headerlink" title="十、Script error"></a>十、Script error</h1><p>一般情况，如果出现 <code>script error</code> 这样的错误，基本上可以确定是出现了跨域问题。这时候，是不会有其他太多辅助信息的，但是解决思路无非如下：</p><p id="div-border-left-blue">跨源资源共享机制( CORS )：我们为 script 标签添加 crossOrigin 属性。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"http://jartto.wang/main.js"</span> crossorigin&gt;&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>或者动态去添加 js 脚本：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> script = <span class="built_in">document</span>.createElement(<span class="string">'script'</span>);</span><br><span class="line">script.crossOrigin = <span class="string">'anonymous'</span>;</span><br><span class="line">script.src = url;</span><br><span class="line"><span class="built_in">document</span>.body.appendChild(script);</span><br></pre></td></tr></table></figure></p><p id="div-border-left-yellow">特别注意，服务器端需要设置：Access-Control-Allow-Origin </p><p>此外，我们也可以试试这个 - <a href="https://juejin.im/post/5c00a405f265da610e7fd024" target="_blank" rel="noopener">解决 Script Error 的另类思路</a>：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> originAddEventListener = EventTarget.prototype.addEventListener;</span><br><span class="line">EventTarget.prototype.addEventListener = <span class="function"><span class="keyword">function</span> (<span class="params">type, listener, options</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">const</span> wrappedListener = <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> listener.apply(<span class="keyword">this</span>, args);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="keyword">throw</span> err;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> originAddEventListener.call(<span class="keyword">this</span>, type, wrappedListener, options);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单解释一下：</p><ul><li>改写了 EventTarget 的 addEventListener 方法；</li><li>对传入的 listener 进行包装，返回包装过的 listener，对其执行进行 try-catch；</li><li>浏览器不会对 try-catch 起来的异常进行跨域拦截，所以 catch 到的时候，是有堆栈信息的；</li><li>重新 throw 出来异常的时候，执行的是同域代码，所以 window.onerror 捕获的时候不会丢失堆栈信息；</li></ul><p>利用包装 addEventListener，我们还可以达到「扩展堆栈」的效果：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">   <span class="keyword">const</span> originAddEventListener = EventTarget.prototype.addEventListener;</span><br><span class="line">   EventTarget.prototype.addEventListener = <span class="function"><span class="keyword">function</span> (<span class="params">type, listener, options</span>) </span>&#123;</span><br><span class="line">+    <span class="comment">// 捕获添加事件时的堆栈</span></span><br><span class="line">+    <span class="keyword">const</span> addStack = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">`Event (<span class="subst">$&#123;type&#125;</span>)`</span>).stack;</span><br><span class="line">     <span class="keyword">const</span> wrappedListener = <span class="function"><span class="keyword">function</span> (<span class="params">...args</span>) </span>&#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">return</span> listener.apply(<span class="keyword">this</span>, args);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">+        <span class="comment">// 异常发生时，扩展堆栈</span></span><br><span class="line">+        err.stack += <span class="string">'\n'</span> + addStack;</span><br><span class="line">         <span class="keyword">throw</span> err;</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> originAddEventListener.call(<span class="keyword">this</span>, type, wrappedListener, options);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;)();</span><br></pre></td></tr></table></figure></p><h1 id="十一、崩溃和卡顿"><a href="#十一、崩溃和卡顿" class="headerlink" title="十一、崩溃和卡顿"></a>十一、崩溃和卡顿</h1><p>卡顿也就是网页暂时响应比较慢， JS 可能无法及时执行。但崩溃就不一样了，网页都崩溃了，JS 都不运行了，还有什么办法可以监控网页的崩溃，并将网页崩溃上报呢？</p><blockquote><p>崩溃和卡顿也是不可忽视的，也许会导致你的用户流失。</p></blockquote><p>1.利用 window 对象的 load 和 beforeunload 事件实现了网页崩溃的监控。<br>不错的文章，推荐阅读：<a href="http://jasonjl.me/blog/2015/06/21/taking-action-on-browser-crashes/" target="_blank" rel="noopener">Logging Information on Browser Crashes</a>。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'load'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  sessionStorage.setItem(<span class="string">'good_exit'</span>, <span class="string">'pending'</span>);</span><br><span class="line">  setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      sessionStorage.setItem(<span class="string">'time_before_crash'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>().toString());</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="built_in">window</span>.addEventListener(<span class="string">'beforeunload'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  sessionStorage.setItem(<span class="string">'good_exit'</span>, <span class="string">'true'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="keyword">if</span>(sessionStorage.getItem(<span class="string">'good_exit'</span>) &amp;&amp;</span><br><span class="line">  sessionStorage.getItem(<span class="string">'good_exit'</span>) !== <span class="string">'true'</span>) &#123;</span><br><span class="line">  <span class="comment">/*</span></span><br><span class="line"><span class="comment">      insert crash logging code here</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  alert(<span class="string">'Hey, welcome back from your crash, looks like you crashed on: '</span> + sessionStorage.getItem(<span class="string">'time_before_crash'</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.基于以下原因，我们可以使用 <code>Service Worker</code> 来实现 <a href="https://juejin.im/entry/5be158116fb9a049c6434f4a?utm_source=gold_browser_extension" target="_blank" rel="noopener">网页崩溃的监控</a>：</p><ul><li>Service Worker 有自己独立的工作线程，与网页区分开，网页崩溃了，Service Worker 一般情况下不会崩溃；</li><li>Service Worker 生命周期一般要比网页还要长，可以用来监控网页的状态；</li><li>网页可以通过 <code>navigator.serviceWorker.controller.postMessage</code> API 向掌管自己的 SW 发送消息。</li></ul><h1 id="十二、错误上报"><a href="#十二、错误上报" class="headerlink" title="十二、错误上报"></a>十二、错误上报</h1><p>1.通过 Ajax 发送数据<br>因为 Ajax 请求本身也有可能会发生异常，而且有可能会引发跨域问题，一般情况下更推荐使用动态创建 img 标签的形式进行上报。</p><p>2.动态创建 img 标签的形式<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">report</span>(<span class="params">error</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> reportUrl = <span class="string">'http://jartto.wang/report'</span>;</span><br><span class="line">  <span class="keyword">new</span> Image().src = <span class="string">`<span class="subst">$&#123;reportUrl&#125;</span>?logs=<span class="subst">$&#123;error&#125;</span>`</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>收集异常信息量太多，怎么办？实际中，我们不得不考虑这样一种情况：如果你的网站访问量很大，那么一个必然的错误发送的信息就有很多条，这时候，我们需要设置采集率，从而减缓服务器的压力：<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Reporter.send = <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// 只采集 30%</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">Math</span>.random() &lt; <span class="number">0.3</span>) &#123;</span><br><span class="line">    send(data)      <span class="comment">// 上报错误信息</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>采集率应该通过实际情况来设定，随机数，或者某些用户特征都是不错的选择。<font color="red">【这个随机数用的不错！】</font></p><h1 id="十三、总结"><a href="#十三、总结" class="headerlink" title="十三、总结"></a>十三、总结</h1><p id="div-border-left-yellow">回到我们开头提出的那个问题，如何优雅的处理异常呢？</p><p>1.可疑区域增加 Try-Catch<br>2.全局监控 JS 异常 window.onerror<br>3.全局监控静态资源异常 window.addEventListener<br>4.捕获没有 Catch 的 Promise 异常：unhandledrejection<br>5.VUE errorHandler 和 React componentDidCatch<br>6.监控网页崩溃：window 对象的 load 和 beforeunload<br>7.跨域 crossOrigin 解决</p><p>其实很简单，正如本文所说：采用组合方案，分类型的去捕获异常，这样基本 80%-90% 的问题都化于无形。</p><p><a href="http://jartto.wang/2018/11/20/js-exception-handling/" target="_blank" rel="noopener">原文</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端一直是距离用户最近的一层，随着产品的日益完善，我们会更加注重用户体验，而前端异常却如鲠在喉，甚是烦人。&lt;/p&gt;
&lt;h1 id=&quot;一、为什么要处理异常？&quot;&gt;&lt;a href=&quot;#一、为什么要处理异常？&quot; class=&quot;headerlink&quot; title=&quot;一、为什么要处理异常？&quot;&gt;&lt;/a&gt;一、为什么要处理异常？&lt;/h1&gt;&lt;p id=&quot;div-border-left-green&quot;&gt;异常是不可控的，会影响最终的呈现结果，但是我们有充分的理由去做这样的事情。&lt;/p&gt;

&lt;p&gt;1.增强用户体验；&lt;br&gt;2.远程定位问题；&lt;br&gt;3.未雨绸缪，及早发现问题；&lt;br&gt;4.无法复线问题，尤其是移动端，机型，系统都是问题；&lt;br&gt;5.完善的前端方案，前端监控系统；&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://addonepiece.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="JavaScript" scheme="https://addonepiece.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你 Vue 服务端渲染</title>
    <link href="https://addonepiece.github.io/2019/03/31/vue-ssr/"/>
    <id>https://addonepiece.github.io/2019/03/31/vue-ssr/</id>
    <published>2019-03-30T23:25:24.000Z</published>
    <updated>2020-09-14T03:32:46.304Z</updated>
    
    <content type="html"><![CDATA[<h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><p>在写这篇文章之前，我有写一篇 <a href="https://addonepiece.github.io/2018/06/18/vue-prerender/">Vue 预渲染的教程</a> 以及 <a href="https://addonepiece.github.io/prerender-website/index.html">在线示例</a>，有需要的可以看一下~</p><hr><font color="green">【下面开始 Vue 服务端渲染】</font><a id="more"></a><p>服务端渲染 = SSR = Server-Side Rendering</p><p><a href="https://ssr.vuejs.org/zh/" target="_blank" rel="noopener">Vue 服务器渲染</a> 可以说是我们学习 Vue 技术的最后一个环节了；也是上手难度稍为高一点的一个环节。</p><p>目前还没有发现很好的学习资料或者教程，文档也不是特别明白，这也导致了很多人没能拿下 vue 的 ssr。</p><p>所以就想着写一个曲线平滑，循序渐进，明了易懂的 <a href="https://github.com/addonepiece/vue-ssr-lessons" target="_blank" rel="noopener">教程</a> 来帮助大家找到 Vue SSR 的感觉。</p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p><font color="red">由于内容较多，如果只写一篇文章就想把 Vue SSR 介绍清晰透彻的话，我觉得不太现实；</font>所以就想着把一个完整的 Vue SSR 项目细分开来，每一个小节讲解一个知识点，这样效果应该会好一点吧。这个项目虽然不大，但已经包含了 Vue SSR 的所有内容。</p><p id="div-border-top-green">项目仓库：<a href="https://github.com/addonepiece/vue-ssr-lessons" target="_blank" rel="noopener">https://github.com/addonepiece/vue-ssr-lessons</a><br></p><p>1、<a href="https://github.com/addonepiece/vue-ssr-lessons" target="_blank" rel="noopener">这个教程</a> 分为 7 个小节，每个小节都是一个独立的可以运行的小项目，这样可以减少大家出错的概率（如果只给出最终的代码，那万一又跑不起来，岂不凉凉，影响大家学习的心情）；每个小节简单配备了 <strong>运行步骤</strong> 以及 <strong>简要说明</strong> 来帮助大家运行项目以及了解本节的知识点。</p><p><img src="/images/vue-ssr-1.png" alt></p><p>2、其次，每个小节都是在前一小节的基础上，继续补充写代码的，这样，大家对比就能知道，这一节具体增加了哪些代码，哪些内容；方便大家学习某一个小节的知识（如果笼统的一次性给出最终代码，这样在找代码之间逻辑关系时，比较吃力）</p><h1 id="章节介绍"><a href="#章节介绍" class="headerlink" title="章节介绍"></a>章节介绍</h1><p>第一节：一个最简单的服务端渲染原型（10 行代码）【难度：<i class="fa fa-star"></i>】<br>第二节：与服务器集成，使用 Express 作为服务器提供服务【难度：<i class="fa fa-star"></i>】<br>第三节：使用一个页面模版【难度：<i class="fa fa-star"></i>】<br>第四节：开发客户端与服务端入口文件，配置webpack【难度：<i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i>】<br>第五节：使用vue-router来做路由【难度：<i class="fa fa-star"></i><i class="fa fa-star"></i>】<br>第六节：数据，vuex，状态容器【难度：<i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i><i class="fa fa-star"></i>】<br>第七节：增加一些额外的功能，完善项目【难度：<i class="fa fa-star"></i><i class="fa fa-star"></i>】</p><h1 id="如何学习"><a href="#如何学习" class="headerlink" title="如何学习"></a>如何学习</h1><p>1、建议你先看一遍 Vue SSR 的文档，<em>看不懂的地方不要慌，留个印象也行</em><br>2、学习这个课程的时候，打开 Vue SSR 的文档；找到当前这一小节对应文档中的文字介绍部分<br>3、如果你基础有点薄弱的话，不要太过于着急<br>4、不能保证所有人看一遍就能学会，但是能保证所有人，两遍能拿下<br>5、如果你能跟着动手敲的话，将会事半功倍</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p><strong>1、避免单例状态</strong><br>在 <code>app.js</code> 中，暴露一个可以重复执行的工厂函数，为每个请求创建新的应用程序实例。</p><p><a href="https://ssr.vuejs.org/zh/guide/structure.html#%E9%81%BF%E5%85%8D%E7%8A%B6%E6%80%81%E5%8D%95%E4%BE%8B" target="_blank" rel="noopener">相关文档</a></p><p><img src="/images/vue-ssr-2.png" alt></p><p><strong>2、配置webpack</strong><br><code>webpack</code> 配置文件包含：基本配置(base config)、客户端配置(client config)、服务器配置(server config)。<br>基本配置包含两个环境（客户端环境，服务器环境）共享的配置；然后客户端配置和服务器配置都会通过使用 <code>webpack-merge</code> 来简单的扩展基本配置。</p><p><a href="https://ssr.vuejs.org/zh/guide/build-config.html" target="_blank" rel="noopener">相关文档</a></p><blockquote><p>教程中的 webpack 相关的配置已经配置好了，你可以直接全部拿过来用就行了</p></blockquote><p><strong>3、createBundleRenderer</strong><br>我们在前三节使用的都是 <code>vue-server-renderer</code> 中的 <code>createRenderer</code> 方法；从第四节开始，我们使用的是 <code>createBundleRenderer</code>，所创建的 <code>bundle renderer</code>，用法和普通 <code>renderer</code> 相同。 <code>createBundleRenderer</code> 接收一个 <code>server bundle</code> 生成的特殊 <code>JSON</code> 文件。但是 <code>bundle renderer</code> 提供以下优点：</p><ul><li>内置的 <code>source map</code> 支持（在 <code>webpack</code> 配置中使用 <code>devtool: &#39;source-map&#39;</code>）</li><li>在开发环境甚至部署过程中热重载（通过读取更新后的 <code>bundle</code>，然后重新创建 <code>renderer</code> 实例）</li><li>关键 <code>CSS(critical CSS)</code> 注入（在使用 <code>*.vue</code> 文件时）：自动内联在渲染过程中用到的组件所需的 <code>CSS</code>。更多细节请查看 <code>CSS</code> 章节。</li><li>使用 <code>clientManifest</code> 进行资源注入：自动推断出最佳的预加载(<code>preload</code>)和预取(<code>prefetch</code>)指令，以及初始渲染所需的代码分割 <code>chunk</code>。</li></ul><p><a href="https://ssr.vuejs.org/zh/guide/bundle-renderer.html" target="_blank" rel="noopener">相关文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h1&gt;&lt;p&gt;在写这篇文章之前，我有写一篇 &lt;a href=&quot;https://addonepiece.github.io/2018/06/18/vue-prerender/&quot;&gt;Vue 预渲染的教程&lt;/a&gt; 以及 &lt;a href=&quot;https://addonepiece.github.io/prerender-website/index.html&quot;&gt;在线示例&lt;/a&gt;，有需要的可以看一下~&lt;/p&gt;
&lt;hr&gt;
&lt;font color=&quot;green&quot;&gt;【下面开始 Vue 服务端渲染】&lt;/font&gt;
    
    </summary>
    
      <category term="前端" scheme="https://addonepiece.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="Vue" scheme="https://addonepiece.github.io/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>使用 Travis CI 自动更新 GitHub Pages</title>
    <link href="https://addonepiece.github.io/2019/02/05/travis-ci/"/>
    <id>https://addonepiece.github.io/2019/02/05/travis-ci/</id>
    <published>2019-02-04T23:25:24.000Z</published>
    <updated>2020-09-14T03:32:46.303Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://travis-ci.org/" target="_blank" rel="noopener">Travis CI</a> 提供的是持续集成服务（Continuous Integration，简称 CI）。我们在软件开发过程中，有构建、测试、部署这些必不可少的步骤，而这些会花掉我们很多的时间。为了提高软件开发的效率，现在涌现了很多自动化工具。<a href="https://travis-ci.org/" target="_blank" rel="noopener">Travis CI</a> 是目前<a href="https://github.blog/2017-11-07-github-welcomes-all-ci-tools/" target="_blank" rel="noopener">市场份额</a>最大的一个，而且有很详细的文档以及可以和 Github 很好的对接。</p><a id="more"></a><p>Travis CI 还是很强大的，用好这个工具不仅可以提高效率，还能使开发流程更可靠和专业化。</p><p>就我写的 <a href="https://addonepiece.github.io/web-bookmarks/">web-bookmarks</a> 这个项目来说的话，每次更改完都要手动部署到 GitHub Pages。</p><p>从最开始的手动构建部署：手动敲构建命令，然后手动推到 GitHub。(<em>重复的次数多了就显得很麻烦，出错的几率也会变大。</em>)</p><p>后来写了一个构建部署的脚本：每次开发完，再手动执行脚本，完成构建部署。</p><p>再到现在的使用 CI 自动更新：开发完，我只用将源码 push 到 GitHub 做版本管理，就 ok 了；Travis 监测到代码有变化，然后就会自动执行我们设定好的任务。【优秀～】</p><h1 id="一、什么是持续集成"><a href="#一、什么是持续集成" class="headerlink" title="一、什么是持续集成"></a>一、什么是持续集成</h1><p>Travis CI 提供的持续集成服务（Continuous Integration，简称 CI）。它绑定 Github 上面的项目，只要有新的代码，就会自动抓取。然后，提供一个运行环境，执行测试，完成构建，还能部署到服务器。</p><p>持续集成指的是只要代码有变更，就自动运行构建和测试，反馈运行结果。</p><p id="div-border-top-purple">举一个例子：我们可以在我们的开源项目中，安排一个代码格式检查和测试的任务 <code>npm run test</code>，不管是自己提交代码，还是别人提交的 PR，Travis 监测到代码有新的内容，都会来执行这个任务。【不管代码写的怎样，格式一定不能乱～，哈哈😄】<br></p><p>持续集成的好处在于，每次代码的小幅变更，就能看到运行结果，从而不断累积小的变更，而不是在开发周期结束时，一下子合并一大块代码。</p><h1 id="二、开始使用"><a href="#二、开始使用" class="headerlink" title="二、开始使用"></a>二、开始使用</h1><p>首先打开官方网站 <a href="https://travis-ci.org" target="_blank" rel="noopener">travis-ci.org</a>，然后使用 Github 账号登入 Travis CI，然后 Travis 中会列出你 Github 上面所有的仓库，以及你所属于的组织。</p><p>然后，勾选你需要 Travis 帮你自动构建的仓库，打开仓库旁边的开关，打开以后，Travis 就会监听这个仓库的所有变化了。</p><p><img src="/images/travis-ci-1.png" alt="travis-ci-1"></p><h1 id="三、-travis-yml"><a href="#三、-travis-yml" class="headerlink" title="三、.travis.yml"></a>三、.travis.yml</h1><p>Travis 要求项目的根目录下面，必须有一个 <code>.travis.yml</code> 文件。这是配置文件，指定了 Travis 的行为。该文件必须保存在 Github 仓库里面，一旦代码仓库有新的 <code>Commit</code>，Travis 就会去找这个文件，执行里面的命令。</p><p>所以呢，我们就可以在这个文件里，配置我们任务（Travis 监测到仓库有 <code>commit</code> 后会自动执行）。</p><p>一个简单的 <code>.travis.yml</code> 文件如下：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">script:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><p>所以呢，我在 <code>.travis.yml</code> 里，配置了一个执行脚本的任务；那么现在 Travis 监测到我仓库有 <code>commit</code> 后就会找到 <code>.travis.yml</code> 这个文件，然后就执行了我的那个脚本了。</p><h2 id="install-字段"><a href="#install-字段" class="headerlink" title="install 字段"></a>install 字段</h2><p><code>install</code> 字段用来指定安装脚本，如果有多个脚本，可以写成下面的形式。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">install:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">command1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">command2</span></span><br></pre></td></tr></table></figure></p><p>上面代码中，如果 <code>command1</code> 失败了，整个构建就会停下来，不再往下进行<br>如果不需要安装，即跳过安装阶段，就直接设为 <code>true</code>。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">install: <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="script-字段"><a href="#script-字段" class="headerlink" title="script 字段"></a>script 字段</h2><p><code>script</code> 字段用来配置构建或者测试脚本，如果有多个脚本，可以写成下面的形式。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">command1</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">command2</span></span><br></pre></td></tr></table></figure></p><p>注意，<code>script</code> 与 <code>install</code> 不一样，如果 <code>command1</code> 失败，<code>command2</code> 会继续执行。但是，整个构建阶段的状态是失败。</p><p>如果 <code>command2</code> 只有在 <code>command1</code> 成功后才能执行，就要写成下面这样。<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">script:</span> <span class="string">command1</span> <span class="string">&amp;&amp;</span> <span class="string">command2</span></span><br></pre></td></tr></table></figure></p><h1 id="四、部署时面临的问题"><a href="#四、部署时面临的问题" class="headerlink" title="四、部署时面临的问题"></a>四、部署时面临的问题</h1><p id="div-border-left-red">现在脚本是由 Travis CI 来执行的，部署的时候，怎么让 Travis 有权限往 Github 提交代码呢？</p><p>Github 有提供一个 <a href="https://github.blog/2013-05-16-personal-api-tokens/" target="_blank" rel="noopener">Personal access tokens</a>，这个 Token 与 账号密码 以及 SSH Keys 同样具有 Github 写入能力。</p><p>前往 Github 帐号 Settings 页面，在左侧选择 <code>Personal Access Token</code>，然后在右侧面板点击 <code>“Generate new token”</code> 来新建一个 Token。需要注意的是，创建完的 Token 只有第一次可见，之后再访问就无法看见（只能看见他的名称），因此要保存好这个值。</p><p><img src="/images/travis-ci-2.png" alt="travis-ci-2"></p><p>那么，这个 Token 怎么使用呢。</p><h2 id="方案一、"><a href="#方案一、" class="headerlink" title="方案一、"></a>方案一、</h2><p>一个比较方便快捷的方式，是通过 Travis 网站，写在每个仓库的设置页面里，有一个 <code>Environment Variables</code> 的配置项，给我们的 Token 起一个名字 <code>gh_token</code> 添加进去。这样以来，脚本内部就可以使用这个环境变量了。<br><img src="/images/travis-ci-3.png" alt="travis-ci-1"><br>你可以在你脚本内部使用 <code>${gh_token}</code> 的形式来使用这个 Token 了。【当然了，你还可以添加其他的环境变量进去。】【<a href="https://docs.travis-ci.com/user/environment-variables" target="_blank" rel="noopener">官方文档在这里</a>】</p><p>使用 <code>Personal access tokens</code> 向 GitHub 提交代码的命令格式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $&#123;GH_TOKEN&#125; 对应就是 Personal access tokens ， GH_TOKEN 是环境变量名</span></span><br><span class="line"><span class="comment"># $&#123;GH_REF&#125; 对应的是你的 Github 仓库地址，GH_REF 是变量名</span></span><br><span class="line">git push -f <span class="string">"https://<span class="variable">$&#123;GH_TOKEN&#125;</span>@<span class="variable">$&#123;GH_REF&#125;</span>"</span> master:gh-pages</span><br></pre></td></tr></table></figure></p><p id="div-border-left-green">这里需要注意的是：<br>1、GitHub 生成的这个 Token ，只有生成的时候可以看到明文，后面就看不到明文了，所以你使用的时候最好一次操作成功。<br>2、Travis CI 中添加 Token 时，记得用密文，要不然在 <code>build log</code> 中是可以被看到的。<br></p><h2 id="方案二、"><a href="#方案二、" class="headerlink" title="方案二、"></a>方案二、</h2><p>你还可以使用 Travis CI 提供的加密工具来加密我们的这个 Token。加密原理机制如下：</p><p><img src="/images/travis-encrypt.png" alt="travis-ci-encrypt"></p><p>首先，安装 Ruby 的包 <code>travis</code> 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 Travis CI 命令行工具</span></span><br><span class="line">$ gem install travis</span><br></pre></td></tr></table></figure></p><p>然后，就可以用 <code>travis encrypt</code> 命令加密信息。<br>在项目的根目录下，执行下面的命令。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ travis encrypt name=secretvalue</span><br></pre></td></tr></table></figure></p><p>上面命令中，<code>gh_token</code> 是要加密的变量名，<code>secretvalue</code> 是要加密的变量值。执行以后，屏幕上会输出如下信息。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">secure: &quot;... encrypted data ...&quot;</span><br></pre></td></tr></table></figure></p><p>现在，就可以把这一行加入 <code>.travis.yml</code> 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">env:</span><br><span class="line">  global:</span><br><span class="line">    - GH_REF: github.com/addonepiece/xxxxx.git</span><br><span class="line">    - secure: <span class="string">"... entrypted data ..."</span></span><br></pre></td></tr></table></figure></p><p>然后，脚本里面就可以使用环境变量 <code>gh_token</code> 了，Travis 会在运行时自动对它解密。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $&#123;gh_token&#125; 对应就是 Personal access tokens ， gh_token 是环境变量名</span></span><br><span class="line"><span class="comment"># $&#123;GH_REF&#125; 对应的是你的 Github 仓库地址，GH_REF 是变量名</span></span><br><span class="line">git push -f <span class="string">"https://<span class="variable">$&#123;gh_token&#125;</span>@<span class="variable">$&#123;GH_REF&#125;</span>"</span> master:gh-pages</span><br></pre></td></tr></table></figure><p><code>travis encrypt</code> 命令的 <code>--add</code> 参数会把输出自动写入 <code>.travis.yml</code>，省掉了修改 <code>env</code> 字段的步骤。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ travis encrypt name=secretvalue --add</span><br></pre></td></tr></table></figure></p><p>详细信息请看<a href="https://docs.travis-ci.com/user/encryption-keys/" target="_blank" rel="noopener">官方文档</a></p><p id="div-border-top-red">可以参考我的 <a href="https://github.com/addonepiece/vue-cms" target="_blank" title="vue-cms">vue-cms</a> 这个项目中的 <code>.travis.yml</code> 文件</p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="如何显示-Status-Image"><a href="#如何显示-Status-Image" class="headerlink" title="如何显示 Status Image"></a>如何显示 Status Image</h2><p><a href="https://travis-ci.org/addonepiece/web-bookmarks" target="_blank" rel="noopener"><img src="https://travis-ci.org/addonepiece/web-bookmarks.svg?branch=master" alt="Build Status"></a></p><p><img src="/images/travis-ci-4x.png" alt="travis-ci-4"></p><h2 id="如何跳过自动构建"><a href="#如何跳过自动构建" class="headerlink" title="如何跳过自动构建"></a>如何跳过自动构建</h2><p>如果 commit 不想让 Travis 构建，那么就在 commit message 里加上 [ci skip] 就行了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"[ci skip] commit message"</span></span><br></pre></td></tr></table></figure></p><h2 id="权限问题"><a href="#权限问题" class="headerlink" title="权限问题"></a>权限问题</h2><p>如果遇到脚本权限不够的提示或者问题，你可以给你的脚本加上权限：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x deploy.sh</span><br></pre></td></tr></table></figure></p><p>或者在 <code>.travis.yml</code> 里加：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">before_install:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">chmod</span> <span class="string">u+x</span> <span class="string">deploy.sh</span></span><br></pre></td></tr></table></figure></p><h1 id="扩展知识"><a href="#扩展知识" class="headerlink" title="扩展知识"></a>扩展知识</h1><h2 id="Travis-CI-加密文件"><a href="#Travis-CI-加密文件" class="headerlink" title="Travis CI 加密文件"></a>Travis CI 加密文件</h2><p>如果要加密的是文件（比如私钥），Travis 提供了加密文件功能。<br>安装命令行客户端以后，使用下面的命令登入 Travis CI 。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ travis login</span><br></pre></td></tr></table></figure></p><p>然后，进入项目的根目录，使用 <code>travis encrypt-file</code> 命令加密那些想要加密的文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ travis entrypt-file bacon.txt</span><br><span class="line"></span><br><span class="line">encrypting bacon.txt <span class="keyword">for</span> rkh/travis-encrypt-file-example</span><br><span class="line">storing result as bacon.txt.enc</span><br><span class="line">storing secure env variables <span class="keyword">for</span> decryption</span><br><span class="line"></span><br><span class="line">Please add the following to your build script (before_install stage <span class="keyword">in</span> your .travis.yml, <span class="keyword">for</span> instance):</span><br><span class="line"></span><br><span class="line">    openssl aes-256-cbc -K <span class="variable">$encrypted_0a6446eb3ae3_key</span> -iv <span class="variable">$encrypted_0a6446eb3ae3_key</span> -<span class="keyword">in</span> bacon.txt.enc -out bacon.txt -d</span><br><span class="line"></span><br><span class="line">Pro Tip: You can add it automatically by running with --add.</span><br><span class="line"></span><br><span class="line">Make sure to add bacon.txt.enc to the git repository.</span><br><span class="line">Make sure not to add bacon.txt to the git repository.</span><br><span class="line">Commit all changes to your .travis.yml.</span><br></pre></td></tr></table></figure></p><p>上面的代码对文件 <code>bacon.txt</code> 进行加密，加密后会生成 <code>bacon.txt.enc</code> ，该文件需要提交到代码库。此外，该命令还会生成一个环境变量 <code>$entrypted_0a6446eb3ae3_key</code>，保存密钥，储存在 Travis CI，文件解密时需要这个环境变量。你需要把解密所需的 <code>openssl</code> 命令，写在 <code>.travis.yml</code> 的 <code>before_install</code> 字段里面。这些都写在上面的命令行提示里面。</p><p><code>--add</code> 参数可以自动把环境变量写入 <code>.travis.yml</code> 。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ travis encrypt-file bacon.txt --add</span><br><span class="line">entrypting bacon.txt <span class="keyword">for</span> rkh/travis-encrypt-file-example</span><br><span class="line">storing result as bacon.txt.enc</span><br><span class="line">storing secure env variables <span class="keyword">for</span> decryption</span><br><span class="line"></span><br><span class="line">Make sure to add bacon.txt.enc to the git repository.</span><br><span class="line">Make sure not to add bacon.txt to the git repository.</span><br><span class="line">Commit all changes to your .travis.yml.</span><br></pre></td></tr></table></figure><p>详细信息请看<a href="https://docs.travis-ci.com/user/encrypting-files/" target="_blank" rel="noopener">官方文档</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://travis-ci.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Travis CI&lt;/a&gt; 提供的是持续集成服务（Continuous Integration，简称 CI）。我们在软件开发过程中，有构建、测试、部署这些必不可少的步骤，而这些会花掉我们很多的时间。为了提高软件开发的效率，现在涌现了很多自动化工具。&lt;a href=&quot;https://travis-ci.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Travis CI&lt;/a&gt; 是目前&lt;a href=&quot;https://github.blog/2017-11-07-github-welcomes-all-ci-tools/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;市场份额&lt;/a&gt;最大的一个，而且有很详细的文档以及可以和 Github 很好的对接。&lt;/p&gt;
    
    </summary>
    
      <category term="前端" scheme="https://addonepiece.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="CI" scheme="https://addonepiece.github.io/tags/CI/"/>
    
  </entry>
  
  <entry>
    <title>什么是REST/RESTful API？</title>
    <link href="https://addonepiece.github.io/2019/01/17/java-REST/"/>
    <id>https://addonepiece.github.io/2019/01/17/java-REST/</id>
    <published>2019-01-17T00:20:00.000Z</published>
    <updated>2020-09-14T03:32:46.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文章内容及目的（CONTENT-amp-OBJECTIVE）"><a href="#文章内容及目的（CONTENT-amp-OBJECTIVE）" class="headerlink" title="文章内容及目的（CONTENT &amp; OBJECTIVE）"></a>文章内容及目的（CONTENT &amp; OBJECTIVE）</h1><p>1.了解什么是REST<br>2.了解如何使用REST范式/风格设计各端<br><img src="/images/Java-REST.jpeg" alt></p><h1 id="REST（REPRESENTATIONAL-STATE-TRANSFER）"><a href="#REST（REPRESENTATIONAL-STATE-TRANSFER）" class="headerlink" title="REST（REPRESENTATIONAL STATE TRANSFER）"></a>REST（REPRESENTATIONAL STATE TRANSFER）</h1><p>REST（英文：Representational State Transfer）是一种无状态资源传输体系范式，用在服务端和客户端之间提供标准，从而使系统之间的通信更容易。与REST兼容的系统，通常称为RESTful系统，其特点是它们是无状态的，并且分离了客户端和服务端的关注点。我们将讨论这些术语的含义以及它们为什么是Web等服务实现前后端分离的有益特性。</p><h1 id="客户端与服务端分离（SEPARATION-OF-CLIENT-AND-SERVER）"><a href="#客户端与服务端分离（SEPARATION-OF-CLIENT-AND-SERVER）" class="headerlink" title="客户端与服务端分离（SEPARATION OF CLIENT AND SERVER）"></a>客户端与服务端分离（SEPARATION OF CLIENT AND SERVER）</h1><p>在REST架构范式中，客户端的实现和服务端的实现可以独立完成，而彼此不必知道对方。这意味着客户端的代码可以在不影响服务端操作的情况下随时更改，服务端的代码可以在不影响客户端操作的情况下更改。<br>只要双方都知道要向对方发送什么格式的消息，它们就可以保持模块化和分离。将用户界面关注点与数据存储关注点分开，通过简化服务端组件，我们改进了跨平台的接口的灵活性，并提高了可伸缩性。此外，分离允许每个组件独立地发展。</p><p>通过使用一个REST接口，不同的客户端访问相同的REST端点，执行相同的操作，并接收相同的响应。</p><h1 id="无状态性（STATELESSNESS）"><a href="#无状态性（STATELESSNESS）" class="headerlink" title="无状态性（STATELESSNESS）"></a>无状态性（STATELESSNESS）</h1><p>遵循REST范式的系统是无状态的，这意味着服务端不需要知道客户端处于什么状态，反之亦然。这样，服务端和客户端都可以理解接收到的任何消息，即使没有看到以前的消息。这种无状态限制是通过使用资源而不是命令来实现的。资源是网络中的名词-它们描述任何对象、文档或东西，您可能需要存储或发送到其他服务。</p><p>因为REST系统通过对资源的标准操作进行交互，所以它们不依赖于接口的实现。</p><p>这些约束有助于RESTful应用程序实现可靠性、快速性能和可伸缩性，因为这些组件可以在不影响整个系统的情况下进行管理、更新和重用，甚至在系统运行期间也是如此。</p><p>现在，我们将探讨在实现RESTful接口时，客户端和服务端之间的通信实际上是如何发生的。</p><h1 id="客户端和服务端之间的通信（COMMUNICATION-BETWEEN-CLIENT-AND-SERVER）"><a href="#客户端和服务端之间的通信（COMMUNICATION-BETWEEN-CLIENT-AND-SERVER）" class="headerlink" title="客户端和服务端之间的通信（COMMUNICATION BETWEEN CLIENT AND SERVER）"></a>客户端和服务端之间的通信（COMMUNICATION BETWEEN CLIENT AND SERVER）</h1><p>在REST体系结构中，客户端发送请求以检索或修改资源，而服务端则向这些请求发送响应。让我们看看发出请求和发送响应的标准方法。</p><h1 id="提交请求（MAKING-REQUESTS）"><a href="#提交请求（MAKING-REQUESTS）" class="headerlink" title="提交请求（MAKING REQUESTS）"></a>提交请求（MAKING REQUESTS）</h1><p>REST要求客户端向服务端发出请求，以便检索或修改服务端上的数据。请求通常包括：</p><ul><li>一个HTTP动词，定义要执行的操作类型.</li><li>HTTP的头域，允许客户端传递有关请求的头信息。</li><li>资源的路径</li><li>包含数据的可选消息正文</li></ul><h2 id="1-HTTP动词（HTTP-VERBS）"><a href="#1-HTTP动词（HTTP-VERBS）" class="headerlink" title="1.HTTP动词（HTTP VERBS）"></a>1.HTTP动词（HTTP VERBS）</h2><p>我们在请求中使用5个基本HTTP动词来与REST系统中的资源交互：</p><ul><li>GET （SELECT）：从服务端检索特定资源，或资源列表。</li><li>POST （CREATE）：在服务端上创建一个新的资源。</li><li>PUT （UPDATE）：更新服务端上的资源，提供整个资源。</li><li>PATCH （UPDATE）：更新服务端上的资源，仅提供更改的属性。</li><li>DELETE （DELETE）：从服务端删除资源。<br>这里有两个较少知名的HTTP动词：<ul><li>HEAD - 检索有关资源的元数据，例如数据的哈希或上次更新时间。</li><li>OPTIONS - 检索关于客户端被允许对资源做什么的信息。</li><li>一个好的RESTful API将使用四个半HTTP动词，允许第三方与其数据进行交互，并且不会将动作/动词作为URL段。</li></ul></li></ul><p>通常，GET请求可以被缓存（通常是！）在浏览器，例如将缓存请求头用于第二次用户的POST请求。 HEAD请求基本上是一个没有响应主体的GET，并且也可以被缓存。</p><h2 id="2-头信息和接收参数（HEADERS-AND-ACCEPT-PARAMETERS）"><a href="#2-头信息和接收参数（HEADERS-AND-ACCEPT-PARAMETERS）" class="headerlink" title="2.头信息和接收参数（HEADERS AND ACCEPT PARAMETERS）"></a>2.头信息和接收参数（HEADERS AND ACCEPT PARAMETERS）</h2><p>在请求头中，客户端发送它能够从服务端接收的内容类型。这称为Accept字段，它确保服务端不会发送客户端无法理解或处理的数据。<br>例如，包含HTML的文本文件将使用text/HTML类型指定。如果此文本文件包含CSS，则将其指定为text/CSS。通用文本文件将被表示为文本/纯文本。但是，这个默认值text/plain并不是一个全部捕获的值。如果客户端需要文本/css并接收到文本/plain，则它将无法识别内容。内容类型的选项是MIME类型。</p><p>MIME类型，MIME（Multipurpose Internet Mail Extensions，多功能因特网邮件扩展）原来是用来判断电子邮件附件的格式而设计的一个字符串，后来演变为网络文档，及企业网和Internet上的其他应用程序中的文件格式的规范。<br>MIME类型是由一个媒体类型和一个子类型组成。媒体类型和子类型用一个斜杠（/）分隔开，例如text/css，它会告诉浏览器文件是纯文本文件，也是一个CSS样式表。每一个媒体类型都表示一种文件类型，媒体类型及说明见下表。<br><img src="/images/java-rest-MIME.jpg" alt></p><p>其他类型和常用子类型：</p><ul><li>image — image/png, image/jpeg, image/gif</li><li>audio — audio/wav, image/mpeg</li><li>video — video/mp4, video/ogg</li><li>application — application/json, application/pdf,</li><li>application/xml, application/octet-stream</li></ul><p>例如，访问服务端上项目资源中id为23的资源的客户端可能会发送如下GET请求：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /articles/23</span><br><span class="line">Accept: text/html, application/xhtml</span><br></pre></td></tr></table></figure></p><p>在本例中，Accept header字段表示客户机将接受text/html或application/xhtml格式的内容。</p><h2 id="3-资源路径（PATHS）"><a href="#3-资源路径（PATHS）" class="headerlink" title="3.资源路径（PATHS）"></a>3.资源路径（PATHS）</h2><p>请求必须包含应对其执行操作的资源的路径。在restfulapi中，路径的设计应该帮助客户端知道发生了什么。</p><p>按照惯例，路径的第一部分应该是资源的复数形式。这使得嵌套路径易于阅读和理解。</p><p>像fashionboutique.com/customers/223/orders/12这样的路径在它指向什么方面是清楚的，即使您以前从未见过这种特定的路径，因为它是层次化的描述明确的。我们可以看到，对于id为223的客户，我们正在访问id为12的订单。</p><p>路径应包含定位所需资源的特定信息。当引用资源的列表或集合时，无需向fashionboutique.com/customers路径中的POST请求添加id，因为服务器将为新对象生成id。</p><p>如果我们试图访问一个资源，我们需要在路径上附加一个id。例如：GET fashionboutique.com/customers/：id-检索客户资源中具有指定id的项目。DELETE fashionboutique.com/customers/：id-删除客户资源中具有指定id的项。</p><h1 id="发送响应（SENDING-RESPONSES）"><a href="#发送响应（SENDING-RESPONSES）" class="headerlink" title="发送响应（SENDING RESPONSES）"></a>发送响应（SENDING RESPONSES）</h1><h2 id="1-内容类型-CONTENT-TYPES"><a href="#1-内容类型-CONTENT-TYPES" class="headerlink" title="1.内容类型(CONTENT TYPES)"></a>1.内容类型(CONTENT TYPES)</h2><p>在服务端向客户端返回数据的情况下，服务端必须在响应的头中包含一个内容类型。此内容类型标题字段提醒客户端它在响应正文中发送的数据类型。这些内容类型是MIME类型，就像它们在请求头的accept字段中一样。服务端在响应中发回的内容类型应该是客户端在请求的accept字段中指定的选项之一。</p><p>例如，当客户端使用此GET请求访问项目资源中id为23的资源时：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET /articles/23 HTTP/1.1</span><br><span class="line">Accept: text/html, application/xhtml</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 200 (OK)</span><br><span class="line">Content-Type: text/html</span><br></pre></td></tr></table></figure><p>这意味着请求的内容正以text/html的内容类型返回到响应体中，客户端表示可以接受。</p><h2 id="2-响应状态码（RESPONSE-CODES）"><a href="#2-响应状态码（RESPONSE-CODES）" class="headerlink" title="2.响应状态码（RESPONSE CODES）"></a>2.响应状态码（RESPONSE CODES）</h2><p>服务端的响应包含状态码，用于提醒客户端有关操作成功的信息。作为一名开发人员，您不需要知道每个状态码（其中有许多），但您应该知道最常见的状态代码以及如何使用它们：</p><ul><li>200 OK - [GET]<br>客户端从服务器请求数据，服务器为它们找到它（等幂）</li><li>201 CREATED - [POST / PUT / PATCH]<br>客户端提供了服务器数据，并且服务器创建了一个资源</li><li>204 无内容 - [删除]<br>客户端要求服务器删除资源，并且服务器将其删除</li><li>400 无效请求 - [POST / PUT / PATCH]<br>客户端给服务器的数据不良，服务器没有做任何事情（幂等）</li><li>404错误<br>客户端引用了一个不存在的资源或集合，并且服务器什么也不做（幂等）</li><li>500内部服务器错误<br>服务器遇到错误，并且客户端不知道请求是否成功</li></ul><h2 id="3-响应状态码范围（RESPONSE-CODES-RANGE）"><a href="#3-响应状态码范围（RESPONSE-CODES-RANGE）" class="headerlink" title="3.响应状态码范围（RESPONSE CODES RANGE）"></a>3.响应状态码范围（RESPONSE CODES RANGE）</h2><ul><li>1xx 范围保留用于底层HTTP的东西，你很可能永远也用不到。</li><li>2xx 范围保留用于成功消息，尽可能确保您的服务器尽可能多地向客户端发送这些消息。</li><li>3xx 范围保留用于重定向。大多数API不使用这些请求很多（不像SEO人使用它们那么频繁），然而，较新的超媒体风格API将更多地使用这些请求。</li><li>4xx 范围保留用于响应客户端做出的错误，例如。他们提供不良数据或要求不存在的东西。这些请求应该是幂等的，而不是更改服务器的状态。</li><li>5xx 范围的状态码是保留给服务器端错误用的。这些错误常常是从底层的函数抛出来的，甚至开发人员也通常没法处理，发送这类状态码的目的以确保客户端获得某种响应。当收到5xx响应时，客户端不可能知道服务器的状态，所以这类状态码是要尽可能的避免。</li></ul><h1 id="EXAMPLES-OF-REQUESTS-AND-RESPONSES-请求和响应示例"><a href="#EXAMPLES-OF-REQUESTS-AND-RESPONSES-请求和响应示例" class="headerlink" title="(EXAMPLES OF REQUESTS AND RESPONSES)请求和响应示例"></a>(EXAMPLES OF REQUESTS AND RESPONSES)请求和响应示例</h1><p>假设我们有一个应用程序，允许您查看、创建、编辑和删除fashionboutique.com上的一家小型服装店的客户和订单。我们可以创建一个HTTP API，允许客户端执行以下功能：<br>如果我们想查看所有客户，请求如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET http://fashionboutique.com/customers</span><br><span class="line">Accept: application/json</span><br></pre></td></tr></table></figure></p><p>可能的响应头如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Status Code: 200 (OK)</span><br><span class="line">Content-type: application/json</span><br></pre></td></tr></table></figure></p><p>然后是以application/json格式请求的客户数据。<br>通过提交据创建新客户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">POST http://fashionboutique.com/customers</span><br><span class="line">Body:</span><br><span class="line">&#123;</span><br><span class="line">  “customer”: &#123;</span><br><span class="line">    “name” = “Scylla Buss”</span><br><span class="line">    “email” = “scylla.buss@codecademy.org”</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后，服务器为该对象生成一个id，并将其返回给客户端，其响应头类似于：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">201 (CREATED)</span><br><span class="line">Content-type: application/json</span><br></pre></td></tr></table></figure></p><p>要查看单个客户，我们需要指定该客户的id：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET http://fashionboutique.com/customers/123</span><br><span class="line">Accept: application/json</span><br></pre></td></tr></table></figure></p><p>可能的响应头如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Status Code: 200 (OK)</span><br><span class="line">Content-type: application/json</span><br></pre></td></tr></table></figure></p><p>后面是application/json格式的id为23的客户资源的数据。<br>我们可以通过输入新数据来更新该客户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PUT http://fashionboutique.com/customers/123</span><br><span class="line">Body:</span><br><span class="line">&#123;</span><br><span class="line">  “customer”: &#123;</span><br><span class="line">    “name” = “Scylla Buss”</span><br><span class="line">    “email” = “scyllabuss1@codecademy.com”</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>可能的响应头的状态代码为：200（OK），用于通知客户端id为123的项已被修改。<br>我们还可以通过指定该客户的id来删除该客户：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELETE http://fashionboutique.com/customers/123</span><br></pre></td></tr></table></figure></p><p>响应将有一个包含状态代码204（无内容）的头，通知客户端id为123的项已被删除，而正文中没有任何内容。</p><h1 id="课后练习（PRACTICE-WITH-REST）"><a href="#课后练习（PRACTICE-WITH-REST）" class="headerlink" title="课后练习（PRACTICE WITH REST）"></a>课后练习（PRACTICE WITH REST）</h1><p>让我们想象一下，我们正在建立一个照片收集网站，要做一个API来跟踪不同用户、用户空间和用户空间的照片。此网站有index.html和style.css。每个用户都有用户名和密码。每张照片都有一个路径和一个所有者（即拍摄照片的用户）。每个空间都有名字和文件路径。您能否设计一个可以容纳以下内容的REST系统：</p><ul><li>存储用户、照片和路径。</li><li>访问空间和访问某个空间的某些照片。首先给出：<br>  1.我们想提出什么样的要求<br>  2.服务器应该返回什么响应<br>  3.每个响应的内容类型应该是什么</li></ul><h2 id="1-可能的解决方案-模型（POSSIBLE-SOLUTION-MODELS）"><a href="#1-可能的解决方案-模型（POSSIBLE-SOLUTION-MODELS）" class="headerlink" title="1.可能的解决方案-模型（POSSIBLE SOLUTION - MODELS）"></a>1.可能的解决方案-模型（POSSIBLE SOLUTION - MODELS）</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  “user”: &#123;</span><br><span class="line">    &quot;id&quot;: &lt;Integer&gt;,</span><br><span class="line">    “username”: &lt;String&gt;,</span><br><span class="line">    “password”:  &lt;String&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  “photo”: &#123;</span><br><span class="line">    &quot;id&quot;: &lt;Integer&gt;,</span><br><span class="line">    “venue_id”: &lt;Integer&gt;,</span><br><span class="line">    “author_id”: &lt;Integer&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  “venue”: &#123;</span><br><span class="line">    &quot;id&quot;: &lt;Integer&gt;,</span><br><span class="line">    “name”: &lt;String&gt;,</span><br><span class="line">    “address”: &lt;String&gt;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-可能的解决方案-请求-响应（POSSIBLE-SOLUTION-REQUESTS-RESPONSES）"><a href="#2-可能的解决方案-请求-响应（POSSIBLE-SOLUTION-REQUESTS-RESPONSES）" class="headerlink" title="2.可能的解决方案-请求/响应（POSSIBLE SOLUTION - REQUESTS/RESPONSES）"></a>2.可能的解决方案-请求/响应（POSSIBLE SOLUTION - REQUESTS/RESPONSES）</h2><h3 id="GET方式请求（GET-REQUESTS）"><a href="#GET方式请求（GET-REQUESTS）" class="headerlink" title="GET方式请求（GET REQUESTS）"></a>GET方式请求（GET REQUESTS）</h3><p>Request- GET /index.html Accept: text/html Response- 200 (OK) Content-type: text/html</p><p>Request- GET /style.css Accept: text/css Response- 200 (OK) Content-type: text/css</p><p>Request- GET /venues Accept:application/json Response- 200 (OK) Content-type: application/json</p><p>Request- GET /venues/:id Accept: application/json Response- 200 (OK) Content-type: application/json</p><p>Request- GET /venues/:id/photos/:id Accept: application/json Response- 200 (OK) Content-type: image/png</p><h3 id="POST方式请求（POST-REQUESTS）"><a href="#POST方式请求（POST-REQUESTS）" class="headerlink" title="POST方式请求（POST REQUESTS）"></a>POST方式请求（POST REQUESTS）</h3><p>Request- POST /users Response- 201 (CREATED) Content-type: application/json</p><p>Request- POST /venues Response- 201 (CREATED) Content-type: application/json</p><p>Request- POST /venues/:id/photos Response- 201 (CREATED) Content-type: application/json</p><h3 id="PUT方式请求（PUT-REQUESTS）"><a href="#PUT方式请求（PUT-REQUESTS）" class="headerlink" title="PUT方式请求（PUT REQUESTS）"></a>PUT方式请求（PUT REQUESTS）</h3><p>Request- PUT /users/:id Response- 200 (OK)</p><p>Request- PUT /venues/:id Response- 200 (OK)</p><p>Request- PUT /venues/:id/photos/:id Response- 200 (OK)</p><h3 id="DELETE方式请求-DELETE-REQUESTS"><a href="#DELETE方式请求-DELETE-REQUESTS" class="headerlink" title="DELETE方式请求(DELETE REQUESTS)"></a>DELETE方式请求(DELETE REQUESTS)</h3><p>Request- DELETE /venues/:id Response- 204 (NO CONTENT)</p><p>Request- DELETE /venues/:id/photos/:id Response- 204 (NO CONTENT)</p><h1 id="一起讨论学习"><a href="#一起讨论学习" class="headerlink" title="一起讨论学习"></a>一起讨论学习</h1><p>欢迎您一起学习和留言讨论RESTFUL，让我们一起写出真正的RESTFUL API。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文章内容及目的（CONTENT-amp-OBJECTIVE）&quot;&gt;&lt;a href=&quot;#文章内容及目的（CONTENT-amp-OBJECTIVE）&quot; class=&quot;headerlink&quot; title=&quot;文章内容及目的（CONTENT &amp;amp; OBJECTIVE）
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java单例模式的最佳实现-单元素枚举实现单例</title>
    <link href="https://addonepiece.github.io/2018/12/16/java-pattern-singleton/"/>
    <id>https://addonepiece.github.io/2018/12/16/java-pattern-singleton/</id>
    <published>2018-12-16T02:38:40.000Z</published>
    <updated>2020-09-14T03:32:46.300Z</updated>
    
    <content type="html"><![CDATA[<h1 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h1><p>单例模式（Singleton Pattern）是Java中最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。<br>Singleton指仅仅被实例化一次的类，Singleton通常被用来代表那些本质上唯一的系统组件，比如窗口管理器或文件系统。使类成为Singleton会使得对它的测试变得十分困难，因为无法给Singleton替换模拟实现，除非它实现一个充当其类型的接口。</p><h1 id="单例模式作用及优缺点"><a href="#单例模式作用及优缺点" class="headerlink" title="单例模式作用及优缺点"></a>单例模式作用及优缺点</h1><h2 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h2><p>单例模式的意图是保证一个类仅有一个实例，并提供一个访问它的全局访问点。这样能解决一个被全局使用的类频繁地创建与销毁的问题，从而节省系统资源。</p><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><p>1.在内存里只有一个实例，减少了内存的开销，尤其是频繁的创建和销毁实例（比如管理平台首页页面缓存）。<br>2.避免对资源的多重占用（比如写文件操作）。</p><h2 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h2><p>1.没有接口，不能继承，与单一职责原则冲突，一个类应该只关心内部逻辑，而不关心外面怎么样来实例化。<br>2.一般单例类的模拟实现比较困难，会使得对它的测试变得十分困难。</p><h1 id="使用场景及注意事项"><a href="#使用场景及注意事项" class="headerlink" title="使用场景及注意事项"></a>使用场景及注意事项</h1><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>1.要求生产唯一序列号。<br>2.WEB中的计数器，不用每次刷新都在数据库里加一次，用单例先缓存起来。<br>3.创建的一个对象需要消耗的资源过多，比如 I/O。<br>4.数据库的连接等。</p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1.getInstance()方法中需要使用同步锁 synchronized (Singleton.class) 防止多线程同时进入造成instance被多次实例化。而单元素枚举实现单例的方法，可以避免序列化，和反射攻击导致的多次实例化的可能。这也是单元素枚举实现单例方法被视为<i style="color:#f63;">单例实现的最佳方法</i>的重要原因。</p><h1 id="实现方法"><a href="#实现方法" class="headerlink" title="实现方法"></a>实现方法</h1><h2 id="1-单元素枚举实现单例"><a href="#1-单元素枚举实现单例" class="headerlink" title="1.单元素枚举实现单例"></a>1.单元素枚举实现单例</h2><p>直接上代码<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.stream.IntStream;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Stream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonElvisDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">final</span> String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Thread[] threads = <span class="keyword">new</span> Thread[<span class="number">50</span>];</span><br><span class="line">        startThreads(threads);</span><br><span class="line">        joinThreads(threads);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startThreads</span><span class="params">(<span class="keyword">final</span> Thread[] threads)</span> </span>&#123;</span><br><span class="line">        IntStream.range(<span class="number">0</span>, threads.length).forEach(i -&gt; &#123;</span><br><span class="line">            threads[i] = createThread();</span><br><span class="line">            threads[i].start();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Thread <span class="title">createThread</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> Thread thread = <span class="keyword">new</span> Thread(() -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">"Got a singleton instance: "</span> + Elvis.INSTANCE);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> thread;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">joinThreads</span><span class="params">(<span class="keyword">final</span> Thread[] threads)</span> </span>&#123;</span><br><span class="line">        Stream.of(threads).forEach(thread -&gt; &#123;</span><br><span class="line">            join(thread);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">join</span><span class="params">(<span class="keyword">final</span> Thread thread)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            thread.join();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">final</span> InterruptedException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Elvis &#123;</span><br><span class="line">    INSTANCE;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sing</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Singleton Elvis using enum: I am signing!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.getClass().getSimpleName() + <span class="string">"@"</span> + hashCode();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上述单元素枚举实现单例的例子中，在功能上与下面会介绍到的实现方式相同。但它更加简洁，无偿的提供了序列化机制，绝对防止多次实例化，即使是在复杂的序列化或者反射攻击的时候。反射攻击是指：单例的调用者借助AccessibleObejct.setAccessible方法，通过反射机制调用私有构造器。</p><h2 id="2-懒汉式，线程不安全"><a href="#2-懒汉式，线程不安全" class="headerlink" title="2.懒汉式，线程不安全"></a>2.懒汉式，线程不安全</h2><p>是否 Lazy 初始化：是<br>是否多线程安全：否<br>实现难度：易<br>描述：这种方式是最基本的实现方式，这种实现最大的问题就是不支持多线程。因为没有加锁 synchronized，所以严格意义上它并不算单例模式。<br>这种方式 lazy loading 很明显，不要求线程安全，在多线程不能正常工作。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;  </span><br><span class="line">        instance = <span class="keyword">new</span> Singleton();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> instance;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-懒汉式，线程安全"><a href="#3-懒汉式，线程安全" class="headerlink" title="3.懒汉式，线程安全"></a>3.懒汉式，线程安全</h2><p>是否 Lazy 初始化：是<br>是否多线程安全：是<br>实现难度：易<br>描述：这种方式具备很好的 lazy loading，能够在多线程中很好的工作，但是，效率很低，99% 情况下不需要同步。<br>优点：第一次调用才初始化，避免内存浪费。<br>缺点：必须加锁 synchronized 才能保证单例，但加锁会影响效率。<br>getInstance() 的性能对应用程序不是很关键（该方法使用不太频繁）。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance;  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;  </span><br><span class="line">        instance = <span class="keyword">new</span> Singleton();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="keyword">return</span> instance;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-饿汉式"><a href="#4-饿汉式" class="headerlink" title="4.饿汉式"></a>4.饿汉式</h2><p>是否 Lazy 初始化：否<br>是否多线程安全：是<br>实现难度：易<br>描述：这种方式比较常用，但容易产生垃圾对象。<br>优点：没有加锁，执行效率会提高。<br>缺点：类加载时就初始化，浪费内存。<br>它基于 classloader 机制避免了多线程的同步问题，不过，instance 在类装载时就实例化，虽然导致类装载的原因有很多种，在单例模式中大多数都是调用 getInstance 方法， 但是也不能确定有其他的方式（或者其他的静态方法）导致类装载，这时候初始化 instance 显然没有达到 lazy loading 的效果。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Singleton instance = <span class="keyword">new</span> Singleton();  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> instance;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-登记式-静态内部类"><a href="#5-登记式-静态内部类" class="headerlink" title="5.登记式/静态内部类"></a>5.登记式/静态内部类</h2><p>是否 Lazy 初始化：是<br>是否多线程安全：是<br>实现难度：一般<br>描述：这种方式能达到双检锁方式一样的功效，但实现更简单。对静态域使用延迟初始化，应使用这种方式而不是双检锁方式。这种方式只适用于静态域的情况，双检锁方式可在实例域需要延迟初始化时使用。<br>这种方式同样利用了 classloader 机制来保证初始化 instance 时只有一个线程，它跟第 3 种方式不同的是：第 3 种方式只要 Singleton 类被装载了，那么 instance 就会被实例化（没有达到 lazy loading 效果），而这种方式是 Singleton 类被装载了，instance 不一定被初始化。因为 SingletonHolder 类没有被主动使用，只有通过显式调用 getInstance 方法时，才会显式装载 SingletonHolder 类，从而实例化 instance。想象一下，如果实例化 instance 很消耗资源，所以想让它延迟加载，另外一方面，又不希望在 Singleton 类加载时就实例化，因为不能确保 Singleton 类还可能在其他的地方被主动使用从而被加载，那么这个时候实例化 instance 显然是不合适的。这个时候，这种方式相比第 3 种方式就显得很合理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">SingletonHolder</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton <span class="title">getInstance</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">    <span class="keyword">return</span> SingletonHolder.INSTANCE;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>经验之谈：一般情况下，不建议使用第2种和第3种懒汉方式，建议使用第4种饿汉方式。只有在要明确实现lazy loading效果时，才会使用第5种登记方式。如果涉及到反序列化创建对象时，可以尝试使用第1种枚举方式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h1&gt;&lt;p&gt;单例模式（Singleton Pattern）是Java中最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一
      
    
    </summary>
    
      <category term="后台" scheme="https://addonepiece.github.io/categories/%E5%90%8E%E5%8F%B0/"/>
    
    
      <category term="Java" scheme="https://addonepiece.github.io/tags/Java/"/>
    
  </entry>
  
</feed>
